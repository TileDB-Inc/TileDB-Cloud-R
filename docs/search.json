[{"path":"/articles/AboutTaskGraphs.html","id":"parallelism","dir":"Articles","previous_headings":"","what":"Parallelism","title":"About task graphs","text":"future package’s default behavior zero parallelism – hence need explicit future::plan. Future’s plan::multicore less like Python’s ProcessPoolExecutor. exists analog ThreadPoolExecutor R, understanding never – many issues threads R.","code":""},{"path":"/articles/AboutTaskGraphs.html","id":"processes","dir":"Articles","previous_headings":"","what":"Processes","title":"About task graphs","text":"Say 2-node DAG node B depends node . R process call compute(B). Inside dag$poll() invokes node$poll() B nodes. forked R process (mananged future package) call ’s future, another forked R process call B’s future. forked R processes, turn, just sitting synchronous call REST server execute UDF/SQL/etc. , non-trivial DAG, parent/polling process spends time awaiting futures running child/forked processes, turn spending time awaiting results HTTP requests REST server. futures resolve parent process’ called resolved(). communication child processes parent process via () return value future, stdout prints child. Crucially, prints stderr completely lost, prints stdout go directly stdout – obtainable future resolved parent process gets child process’ stdout lines one go via self$future_result$stdout).","code":""},{"path":"/articles/AboutTaskGraphs.html","id":"call-flow","dir":"Articles","previous_headings":"","what":"Call flow","title":"About task graphs","text":"Nodes defined calls delayed factory function, edges via args. Note DAG point implicit nodes edges. terminal node’s compute() function instantiates DAG object stashes slot within node, easy reference later. Nodes edges already existence; DAG’s purpose check cycles, identify initial nodes, etc. DAG poll-driven: poll() method calls every node’s poll() method computation complete, failed node. latter case stop() aborts DAG poll returns control user. Calling compute() terminal node leave computed nodes computed, running nodes running, retry failed nodes.","code":"a <- delayed(function()  {   9  },                 name='a')     b <- delayed(function(x) { 10*x }, args=list(a),   name='b')     o <- compute(a), namespace='namespace_to_charge')"},{"path":"/articles/AboutTaskGraphs.html","id":"debugging","dir":"Articles","previous_headings":"","what":"Debugging","title":"About task graphs","text":"light debug, just R print/cat/etc within node functions – stdout appear future completes. hard debug, need info child processes still running – ’ve used R’s broswer debug parent process, don’t know make work debug child processes. best experience can suggest write--disk-file within child process tail disk file separate terminal. DAG invocation: detail user-level vignette, essentials : <- delayed(function()  {   9  },                 name='') b <- delayed(function(x) { 10*x }, args=list(),   name='b') o <- compute(), namespace='namespace_to_charge') show(o$dag_for_terminal) str(o$dag_for_terminal) o <- compute(), namespace='namespace_to_charge') # retry failed nodes o <- compute(), namespace='namespace_to_charge', verbose=TRUE)","code":""},{"path":"/articles/Arrays.html","id":"listing-arrays","dir":"Articles","previous_headings":"","what":"Listing arrays","title":"Arrays","text":"can show arrays , public/shared arrays:","code":"> tiledbcloud::list_arrays()[c(\"namespace\",\"name\")]  namespace                             name  1   sampleuser                      mtcars  2   sampleuser            palmer_penguins2  3   sampleuser            quickstart_dense  4   sampleuser                    untitled  5   sampleuser                     flights  6   sampleuser             palmer_penguins  7   sampleuser                 example_csv > tiledbcloud::list_arrays(public=TRUE, namespace=\"TileDB-Inc\")[c(\"namespace\",\"name\")]    namespace                           name 1 TileDB-Inc               quickstart_dense 2 TileDB-Inc              quickstart_sparse 3 TileDB-Inc gtex-analysis-rnaseqc-gene-tpm 4 TileDB-Inc       example-tensorflow-model > tiledbcloud::list_arrays(shared=TRUE)[c(\"namespace\",\"name\")]   namespace                    name 1   sampleuser       experiment_001 2     coworker         testing--032"},{"path":"/articles/Arrays.html","id":"showing-array-information","dir":"Articles","previous_headings":"","what":"Showing array information","title":"Arrays","text":"","code":"> str(tiledbcloud::array_info(namespace=\"TileDB-Inc\", arrayname=\"quickstart_dense\")) List of 12  $ id                  : chr \"682afbad-7671-488b-9058-41f0fe5da049\"  $ namespace           : chr \"TileDB-Inc\"  $ size                : int 835  $ last_accessed       : chr \"2021-12-09T14:48:43Z\"  $ description         : chr \"\"  $ name                : chr \"quickstart_dense\"  $ type                : chr \"dense\"  $ share_count         : int 1  $ public_share        : logi TRUE  $ namespace_subscribed: logi FALSE  $ tiledb_uri          : chr \"tiledb://TileDB-Inc/quickstart_dense\"  $ tags                : list()"},{"path":"/articles/Arrays.html","id":"reading-arrays","dir":"Articles","previous_headings":"","what":"Reading arrays","title":"Arrays","text":"","code":"uri <- \"tiledb://TileDB-Inc/quickstart_sparse\" arr <- tiledb::tiledb_array(uri, query_type=\"READ\", as.data.frame=TRUE) schema(arr) tiledb_array_schema(     domain=tiledb_domain(c(tiledb_dim(name=\"rows\", domain=c(1L,4L), tile=4L, type=\"INT32\"), tiledb_dim(name=\"cols\", domain=c(1L,4L), tile=4L, type=\"INT32\"))),     attrs=c(tiledb_attr(name=\"a\", type=\"UINT32\", ncells=1, nullable=FALSE)),     cell_order=\"ROW_MAJOR\", tile_order=\"ROW_MAJOR\", capacity=10000, sparse=TRUE, allows_dups=FALSE,     coords_filter_list=tiledb_filter_list(c(tiledb_filter_set_option(tiledb_filter(\"ZSTD\"),\"COMPRESSION_LEVEL\",-1))),     offsets_filter_list=tiledb_filter_list(c(tiledb_filter_set_option(tiledb_filter(\"ZSTD\"),\"COMPRESSION_LEVEL\",-1))))"},{"path":"/articles/Arrays.html","id":"registering-deregistering-arrays","dir":"Articles","previous_headings":"","what":"Registering / deregistering arrays","title":"Arrays","text":"Information coming soon! See also https://cloud.tiledb.com UI access.","code":""},{"path":"/articles/Arrays.html","id":"sharing","dir":"Articles","previous_headings":"","what":"Sharing","title":"Arrays","text":"Information coming soon! See also https://cloud.tiledb.com UI access.","code":""},{"path":"/articles/Arrays.html","id":"readingwriting-metadata","dir":"Articles","previous_headings":"","what":"Reading/writing metadata","title":"Arrays","text":"Information coming soon! See also https://cloud.tiledb.com UI access.","code":""},{"path":"/articles/HowToUpdateAPI.html","id":"how-this-was-built","dir":"Articles","previous_headings":"","what":"How this was built","title":"How to update from API spec","text":"Initially using -current (2020-Aug-07) Docker container openapitools/openapi-generator-cli:latest Now via offical v5.0.0 release openapitools/openapi-generator-cli:v5.0.0 Standard invocation using TileDB Cloud API Spec v1, setting package name version manual edits (detailed ) Invoking roxygen2::roxygenise() build interactive R documentation followed one-word fix one Rd file Invoking pkgdown:build_site() build HTML documentation","code":""},{"path":"/articles/HowToUpdateAPI.html","id":"prep","dir":"Articles","previous_headings":"","what":"Prep","title":"How to update from API spec","text":"Prep: Docker command runMe.sh read current directory write following ./tiledbcloud-generated: DESCRIPTION, NAMESPACE, README.md, R, docs, man, tests, git_push.sh. Unfortunately read current files working directory well. either case need current openapi-v1.yaml copied https://github.com/TileDB-Inc/TileDB-Cloud-API-Spec ..","code":""},{"path":"/articles/HowToUpdateAPI.html","id":"autogen-option-1","dir":"Articles","previous_headings":"Prep","what":"Autogen option 1","title":"How to update from API spec","text":"remove DESCRIPTION, NAMESPACE, R, docs, man, test repo directory (maybe mkdir old mv old) outputs /tmp/gen. move /tmp/gen/README.md ./origREADME.md.","code":"mkdir /tmp/gen cp openapi-v1.yaml   /tmp/gen cp runMe.sh          /tmp/gen cp regenerate-docs.r /tmp/gen/ cp -a .openapi-generator* /tmp/gen  cd /tmp/gen ./runMe.sh"},{"path":"/articles/HowToUpdateAPI.html","id":"autogen-option-2","dir":"Articles","previous_headings":"Prep","what":"Autogen option 2","title":"How to update from API spec","text":"move ./README.md ./origREADME.md old/README.md ..","code":"mkdir old mv DESCRIPTION old mv NAMESPACE   old mv README.md   old mv R           old mv docs        old mv man         old mv tests       old mv git_push.sh old  ./runMe.sh"},{"path":"/articles/HowToUpdateAPI.html","id":"post-processing","dir":"Articles","previous_headings":"Prep","what":"Post-processing","title":"How to update from API spec","text":"either case, sure manual-layer files (init.R – listed runMe.sh) copied back ./R. remove NAMESPACE (R) library(devtools) devtools::document(). (NAMESPACE file must removed first since generated openapi-generator devtools skip .) ensure exported functions manual-layer files properly exported. Important generated API wants also parse field User apparently send. default deserializer breaks. See PR #2 small diff R/api_client.R file fix needs re-applied. Also diff -r old/R R see manual edits need re-applied. particular, manual edits needing re-application marked MANUAL EDIT OPENAPI AUTOGEN. Also manually edit DESCRIPTION, carrying manual edits autogen run. Also: See HowToRelease.md update documentation pages commit version control.","code":"R CMD build . R CMD INSTALL ."},{"path":"/articles/HowToUpdateAPI.html","id":"testing","dir":"Articles","previous_headings":"","what":"Testing","title":"How to update from API spec","text":"Just library higher line-count code autogenerated OpenAPI, lower line-count manual-layer files, testing. tests/testthat many autogenerated files – function bodies written commented OpenAPI. focus testing direction. inst/tinytest manually written tests. opt-: make TileDB Cloud calls, don’t want push users build package locally. opt : either environment variable TILEDB_REST_TOKEN, pair TILEDB_REST_USERNAME TILEDB_REST_PASSWORD – three like. Optionally, TILEDB_REST_HOST cloud installation local, /TileDB employees pointing staging environment. R: tinytest::test_all(\".\")","code":""},{"path":"/articles/HowToUpdateDocumentation.html","id":"roxygen2-and-pkgdown","dir":"Articles","previous_headings":"","what":"Roxygen2 and Pkgdown","title":"How to update documentation","text":"Roxygen2-style comments generate content. Example: Notes: first sentence become title – used one-line summary docs/reference/index.html reference page, HTML/H1-style title someone clicks link docs/reference/name---function.html details page. second sentence become summary text title docs/reference/name---function.html details page. remaining bits become Details section docs/reference/name---function.html details page. Use \\code{\\link{...}} -package function references; use \\code{...} program text. @param @return used autogenerating docs/reference/name---function.html details page. @export tag used Roxygen2 populate NAMESPACE file. Note however even non-exported functions regardless appear docs/reference/index.html reference page. ’s handy name leading . matches rule _pkgdown.yml, placing functions section bottom docs/reference/index.html reference page. code autogenerated OpenAPI already follows conventions.","code":"##' TileDB Cloud Manual Layer for Array Info ##' ##' This function shows array information on TileDB Cloud. ##' ##' Nominally you will first call \\code{\\link{login}}; if not, the results of ##' the last login at \\code{~/.tiledb/cloud.json} will be used. ##' ##' @param namespace Like \"TileDB-Inc\" ##' ##' @param arrayname Like \"quickstart_dense\" ##' ##' @return A list of array properties ##' @export array_info <- function(namespace, arrayname) {   apiClientInstance <- get_api_client_instance()   arrayApiInstance <- ArrayApi$new(apiClientInstance)   # The $toJSON() converts from R6 class to R named list.   # That in turn is nicely printable using str().   arrayApiInstance$GetArrayMetadata(namespace, arrayname)$toJSON() }"},{"path":"/articles/HowToUpdateDocumentation.html","id":"pkgdown-yml","dir":"Articles","previous_headings":"Roxygen2 and Pkgdown","what":"_pkgdown.yml","title":"How to update documentation","text":"See repo’s _pkgdown.yml reference articles syntax allow us control section-ordering reference articles (vignettes). rule reference section items starting -z manual-layer functions; starting -Z OpenAPI-autogen functions/classes; starting . package-internal. long follow naming conventions code write, shouldn’t need modify _pkgdown.yml write new functions. new articles (vignettes), contrast, need add information new vignette _pkgdown.yml.","code":""},{"path":"/articles/HowToUpdateDocumentation.html","id":"build-steps","dir":"Articles","previous_headings":"","what":"Build steps","title":"How to update documentation","text":"install.packages(\"roxygen2\") install.packages(\"pkgdown\") can roxygen2::roxygenise() pkgdown::build_site. pop open browser pointed local ./docs/index.html. can check rendering desired.","code":""},{"path":"/articles/HowToUpdateDocumentation.html","id":"publishing","dir":"Articles","previous_headings":"","what":"Publishing","title":"How to update documentation","text":"See HowToRelease.md.","code":""},{"path":"/articles/Login.html","id":"signing-up","dir":"Articles","previous_headings":"","what":"Signing up","title":"Logging in","text":"Visit https://cloud.tiledb.com.","code":""},{"path":"/articles/Login.html","id":"usernamepassword-login","dir":"Articles","previous_headings":"","what":"Username+password login","title":"Logging in","text":"’ve set credentials https://cloud.tiledb.com, ’ve installed TileDB-Cloud-R (see Setup), can log R CLI notebook follows:","code":"# Login for TileDB-Cloud-R per se tiledbcloud::login(username=\"your-username\", password=\"your-password\") # Login for TileDB-R delegating to cloud -- e.g. when you use tiledb::tiledb_array() with a URI like # \"tiledb://namespace-goes-here/arrayname-goes-here\" in place of local-disk array storage. config <- tiledb::tiledb_config() config[\"rest.username\"] <- \"your-username\" config[\"rest.password\"] <- \"your-password\" ctx <- tiledb::tiledb_ctx(config)"},{"path":"/articles/Login.html","id":"token-login","dir":"Articles","previous_headings":"","what":"Token login","title":"Logging in","text":"Visit https://cloud.tiledb.com/settings/tokens create API token. can ","code":"tiledbcloud::login(api_key=\"[redacted]\") config <- tiledb::tiledb_config() config[\"rest.token\"] <- \"[redacted]\" ctx <- tiledb::tiledb_ctx(config)"},{"path":"/articles/Login.html","id":"environment-variables","dir":"Articles","previous_headings":"","what":"Environment variables","title":"Logging in","text":"Instead using explicit login functions, can set following environment:","code":"export TILEDB_REST_TOKEN=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNTVkYTc2YTMtOTVkNy00Njk5LThlN2EtNjFjZDRjNGZkZWY5IiwiU2VlZCI6NzM1MTI0MDcwOTk1ODcwMywiZXhwIjoxNjQxMDk5NTk5LCJpYXQiOjE2MzcxOTI0OTMsIm5iZiI6MTYzNzE5MjQ5Mywic3ViIjoiam9obmtlcmwifQ.el_L3L4hW7zS3NC3c12nO2-adNJG7IC77kitPH2AU60 export TILEDB_REST_USERNAME=\"your-username\" export TILEDB_REST_PASSWORD=\"your-password\""},{"path":"/articles/Login.html","id":"cached-login","dir":"Articles","previous_headings":"","what":"Cached login","title":"Logging in","text":"can also put information ~/.tiledb/cloud.json file: use optional write_config=TRUE argument tiledbcloud::login ~/.tiledb/cloud.json written :","code":"{     \"api_key\": {},     \"host\": \"https://api.dev.tiledb.io/v1\",     \"username\": \"your-username\",     \"password\": \"your-password\",     \"verify_ssl\": true } {     \"api_key\": {         \"X-TILEDB-REST-API-KEY\": \"[redacted]z\"     },     \"host\": \"https://api.tiledb.com/v1\",     \"verify_ssl\": true } tiledbcloud::login(username=\"your-username\", password=\"your-password\", write_config=TRUE)"},{"path":"/articles/Login.html","id":"showing-user-profile","dir":"Articles","previous_headings":"","what":"Showing user profile","title":"Logging in","text":"","code":"> str(tiledbcloud::user_profile()) $ id                              : chr \"55da76a3-95d7-4699-8e7a-61cd4c4fdef9\" $ allowed_actions                 : chr [1:17] \"delete\" \"edit\" \"write\" \"read\" ... $ name                            : chr \"Sample User\" $ email                           : chr \"sample.user@company.com\" $ is_valid_email                  : logi TRUE $ stripe_connect                  : logi FALSE $ last_activity_date              : chr \"0001-01-01T00:00:00Z\" $ username                        : chr \"sampleuser\" $ organizations                   :'data.frame': 2 obs. of  8 variables:  ..$ user_id          : chr [1:2] \"55da76a3-95d7-4699-8e7a-61cd4c4fdef9\" \"55da76a3-95d7-4699-8e7a-61cd4c4fdef9\"  ..$ organization_id  : chr [1:2] \"6f568a58-717c-466a-a77d-30293eda5338\" \"96a37768-aae4-46f8-a9a1-a4fe9daa8158\"  ..$ allowed_actions  :List of 2  .. ..$ : chr [1:5] \"read\" \"read_array_logs\" \"read_array_info\" \"read_array_schema\" ...  .. ..$ : chr [1:17] \"delete\" \"edit\" \"write\" \"read\" ...  ..$ role             : chr [1:2] \"read_only\" \"owner\"  ..$ username         : chr [1:2] \"sampleuser\" \"sampleuser\"  ..$ organization_name: chr [1:2] \"public\" \"SampleOrganization\"  ..$ created_at       : chr [1:2] \"2021-08-25T16:43:03Z\" \"2021-09-23T20:33:20Z\"  ..$ updated_at       : chr [1:2] \"2021-08-26T16:21:14Z\" \"2021-09-23T20:33:20Z\" $ SSO                             : list() $ timezone                        : chr \"Asia/Istanbul\" $ company                         : chr \"TileDB\" $ enabled_features                : chr [1:3] \"notebooks\" \"generic_udfs\" \"notebook_sharing\" $ unpaid_subscription             : logi FALSE $ default_s3_path                 : chr \"s3://tiledb-sampleuser\" $ default_s3_path_credentials_name: chr \"my-sandbox-creds\" $ default_s3_path_credentials_uuid: chr \"f408eea2-aa9e-43e3-ab8f-a20358704c9c\" $ default_namespace_charged       : chr \"sampleuser\" ..."},{"path":"/articles/PackageStatus.html","id":"manual-and-autogen-layers","dir":"Articles","previous_headings":"","what":"Manual and autogen layers","title":"Package status","text":"package implements R client TileDB Cloud REST service. bulk code automatically generated via OpenAPI TileDB Cloud REST service API specification. provides – definition – thorough coverage API. hand, fewer examples, code needs validated manually, style autogenerated code makes heavy use R6 classes. Autogenerated functions classes start uppercase letters, can found Reference section labeled . Several key API entrypoints manual layer wrapping . files R/manual_layer_*.R source code. Manually written functions start lowercase letters, can found Reference section labeled . manually written functions exported package appear documentation. names start leading ., can found Reference section labeled . example, using manual-layer function tiledbcloud::array_info can write simply: instead need using autogen-layer functions:","code":"tiledbcloud::array_info(\"namespace-goes-here\", \"arrayname-goes-here\") api.client.instance <- ApiClient$new(   basePath=\"https://api.tiledb.com/v1\",   accessToken=Sys.getenv(\"TILEDB_REST_TOKEN\"),   username=Sys.getenv(\"TILEDB_REST_USERNAME\"),   password=Sys.getenv(\"TILEDB_REST_PASSWORD\")) # This in turn has its own manual-layer function wrapping it: # api.client.instance <- get_api_client_instance() array.api.instance <- ArrayApi$new(api.client.instance) array.api.instance$GetArrayMetadata(namespace, arrayname)$toJSON()"},{"path":"/articles/PackageStatus.html","id":"prioritization-for-development","dir":"Articles","previous_headings":"","what":"Prioritization for development","title":"Package status","text":"Several key API entrypoints manual layer written; . Current efforts focus user-defined functions (UDFs). items API easier UI – example, writing array metadata/tags, favoriting, etc. lower-priority manual-layer work. late 2021, cloud-R task-graph work deferred pending current infrastructural work. implementation always demand-driven – please contact us noted !","code":""},{"path":"/articles/PackageStatus.html","id":"contact","dir":"Articles","previous_headings":"","what":"Contact","title":"Package status","text":"Please visit https://tiledb.com/contact full contact information including Forum, GitHub, Twitter, Slack. Perhaps easiest file issue https://github.com/TileDB-Inc/TileDB-Cloud-R/issues. look forward hearing !","code":""},{"path":"/articles/Setup.html","id":"build-and-test","dir":"Articles","previous_headings":"","what":"Build and test","title":"Setup","text":"","code":"R CMD build .                           # creates e.g. tiledbcloud_0.0.7.tar.gz R CMD check tiledbcloud_0.0.7.tar.gz    # checks the package"},{"path":"/articles/Setup.html","id":"from-github","dir":"Articles","previous_headings":"","what":"From GitHub","title":"Setup","text":"","code":"> if (!requireNamespace(\"remotes\", quietly=TRUE)) install.packages(\"remotes\") > remotes::install_github(\"TileDB-Inc/TileDB-Cloud-R\")"},{"path":"/articles/Setup.html","id":"command-line-access","dir":"Articles","previous_headings":"","what":"Command-line access","title":"Setup","text":"","code":"library(tiledbcloud)"},{"path":"/articles/Setup.html","id":"notebooks","dir":"Articles","previous_headings":"","what":"Notebooks","title":"Setup","text":"--date TileDB-Cloud-R can loaded TileDB Cloud Notebooks using library(tiledbcloud).","code":""},{"path":"/articles/TaskGraphs.html","id":"delayed-functions","dir":"Articles","previous_headings":"","what":"Delayed functions","title":"Task graphs","text":"delayed function constructs “node” object task graph. ’s essentially R function, executed later, items: Optionally friendly display name name Optionally local=TRUE execute function current host – default execute TileDB Cloud. function takes arguments, can specified args=... delayed, , via separate call delayed_args. compute function executes delayed functions. output","code":"a <- delayed(function()    {    9  },                    name='a', local=TRUE) b <- delayed(function(x)   {  10*x },    args=list(a),   name='b', local=TRUE) c <- delayed(function(x)   { 100*x },                    name='c', local=TRUE) delayed_args(c) <- list(b) d <- delayed(function(...) { sum(...) }, args=list(b,c), name='d', local=TRUE)  o <- compute(d, namespace=namespace, verbose=TRUE) print(o) [1] 990"},{"path":"/articles/TaskGraphs.html","id":"delayed-sql-queries","dir":"Articles","previous_headings":"","what":"Delayed SQL queries","title":"Task graphs","text":"simple convenience wrapper connecting delayed, , TileDB Cloud SQL queries described SQL vignette. output","code":"a <- delayed_sql(     namespace='your-namespace',     query=\"select `rows`, AVG(a) as avg_a from `tiledb://TileDB-Inc/quickstart_dense` GROUP BY `rows`\",     name=\"rows-query\") o <- compute(a, namespace=namespace, verbose=TRUE) print(o) avg_a rows 1  2.5000    1 2  6.5000    2 3 10.5000    3 4 14.5000    4"},{"path":"/articles/TaskGraphs.html","id":"delayed-generic-udfs","dir":"Articles","previous_headings":"","what":"Delayed generic UDFs","title":"Task graphs","text":"simple convenience wrapper connecting delayed generic UDFs described UDFs vignette. output","code":"a <- delayed_generic_udf(   namespace='your-namespace',   udf=function(vec, exponent) {     sum(vec ** exponent)   },   name='my-generic' ) delayed_args(a) <- list(vec=1:10, exponent=3) print(compute(a, namespace=namespaceToCharge)) [1] 3025"},{"path":"/articles/TaskGraphs.html","id":"delayed-array-udfs","dir":"Articles","previous_headings":"","what":"Delayed array UDFs","title":"Task graphs","text":"another simple convenience wrapper connecting delayed array UDFs described UDFs vignette. output","code":"a <- delayed_array_udf(   namespace='your-namespace'   array=\"TileDB-Inc/quickstart_dense\",   udf=function(df) {     vec <- as.vector(df[[\"a\"]])     list(min=min(vec), med=median(vec), max=max(vec))   },   selectedRanges=list(cbind(1,2), cbind(1,2)),   attrs=c(\"a\") ) o <- compute(a, namespace=namespace, verbose=TRUE) print(o) $min [1] 1  $med [1] 3.5  $max [1] 6"},{"path":"/articles/TaskGraphs.html","id":"composing-tasks-into-task-graphs","dir":"Articles","previous_headings":"","what":"Composing tasks into task graphs","title":"Task graphs","text":"Nodes, delayed, delayed_sql, delayed_array_udf, delayed_multi_array_udf, can connected together directed acyclic graphs. (construct graph cyclic dependency, ’ll get error message promptly.) ’s example: output","code":"# Build several delayed objects to define a graph.  # Locally executed; simple enough. local = delayed(function(x) { x*2 }, local=TRUE) delayed_args(local) <- list(100)  # Array UDF -- we specify selected ranges and attributes, then do some R on the # dataframe which the UDF receives. array_apply <- delayed_array_udf(   namespace=namespace, # namespace to charge   array=\"TileDB-Inc/quickstart_dense\",   udf=function(df) { sum(as.vector(df[[\"a\"]])) },   selectedRanges=list(cbind(1,4), cbind(1,4)),   attrs=c(\"a\") )  # SQL -- note the output is a dataframe, and values are all strings (MariaDB # \"decimal values\") so we'll cast them to numeric later. sql = delayed_sql(   namespace=namespace,   \"select SUM(`a`) as a from `tiledb://TileDB-Inc/quickstart_dense`\",   name=\"sql\" )  # Custom function for averaging all the results we are passing in ourmean <- function(local, array_apply, sql) {     mean(c(local, array_apply, sql)) }  # This is essentially a task graph that looks like #               ourmean #          /       |      \\ #         /        |       \\     #      local  array_apply  sql  # # The `local`, `array_apply` and `sql` tasks will computed first, # and once all three are finished, `ourmean` will computed on their results. # Note here we slot out the ansswer from the SQL dataframe using `[[...]]`, # and also cast to numeric. res <- delayed(ourmean, args=list(local, array_apply, as.numeric(sql[[\"a\"]]))) print(compute(res, namespace=namespace, verbose=TRUE)) [1] 168"},{"path":"/articles/TaskGraphs.html","id":"examining-task-graphs","dir":"Articles","previous_headings":"","what":"Examining task graphs","title":"Task graphs","text":"ideal case, connect together computations run correctly first time. cases, need inspect bit. TileDB-Cloud-R package offers different ways . Let’s revisit simple “diamond” example , different ways.","code":""},{"path":"/articles/TaskGraphs.html","id":"run-as-is","dir":"Articles","previous_headings":"Examining task graphs","what":"Run as-is","title":"Task graphs","text":", except now execute remotely. outputs","code":"namespace <- 'your-namespace' a <- delayed(function()    {    9  }) b <- delayed(function(x)   {  10*x },   args=list(a)) c <- delayed(function(x)   { 100*x },   args=list(a)) d <- delayed(function(...) { sum(...)}, args=list(b,c))  o <- compute(d, namespace=namespace) print(o) [1] 990"},{"path":"/articles/TaskGraphs.html","id":"run-with-verbosity","dir":"Articles","previous_headings":"Examining task graphs","what":"Run with verbosity","title":"Task graphs","text":"detail can add display names node (default naming things like n000005, less intuitive), also use verbose option compute. R CLI session, live-update DAG runs; notebook, ’ll see output DAG completes. output like print DAG; launch/finish nodes dependency order; another print DAG; finally output .","code":"namespace <- 'your-namespace'  a <- delayed(function()    {    9  },                    name='a') b <- delayed(function(x)   {  10*x },    args=list(a),   name='b') c <- delayed(function(x)   { 100*x },    args=list(a),   name='c') d <- delayed(function(...) { sum(...) }, args=list(b,c), name='d')  o <- compute(d, namespace=namespace, verbose=TRUE) print(o) All      nodes:    (4) a, b, c, d Initial  nodes:    (1) a Terminal node:     (1) d Dependencies:   a (0)   b (1) a   c (1) a   d (2) b, c Statuses:   a  args_ready=TRUE status=NOT_STARTED   b  args_ready=FALSE status=NOT_STARTED   c  args_ready=FALSE status=NOT_STARTED   d  args_ready=FALSE status=NOT_STARTED 1644869786 2022-02-14 15:16:26 START a 1644869786 2022-02-14 15:16:26 launch remote compute   a 1644869789 2022-02-14 15:16:29 finish remote compute   a 1644869789 2022-02-14 15:16:29 END   a 1644869789 2022-02-14 15:16:29 START c 1644869789 2022-02-14 15:16:29 START b 1644869789 2022-02-14 15:16:29 launch remote compute   c 1644869791 2022-02-14 15:16:31 finish remote compute   c 1644869791 2022-02-14 15:16:31 END   c 1644869789 2022-02-14 15:16:29 launch remote compute   b 1644869791 2022-02-14 15:16:31 finish remote compute   b 1644869791 2022-02-14 15:16:31 END   b 1644869791 2022-02-14 15:16:31 START d 1644869791 2022-02-14 15:16:31 launch remote compute   d 1644869794 2022-02-14 15:16:34 finish remote compute   d 1644869794 2022-02-14 15:16:34 END   d All      nodes:    (4) a, b, c, d Initial  nodes:    (1) a Terminal node:     (1) d Dependencies:   a (0)   b (1) a   c (1) a   d (2) b, c Statuses:   a  args_ready=TRUE status=COMPLETED   b  args_ready=TRUE status=COMPLETED   c  args_ready=TRUE status=COMPLETED   d  args_ready=TRUE status=COMPLETED [1] 990"},{"path":"/articles/TaskGraphs.html","id":"compute-locally","dir":"Articles","previous_headings":"Examining task graphs","what":"Compute locally","title":"Task graphs","text":"nodes run locally. Print statements within nodes go terminal. output","code":"a <- delayed(function()    { cat(\"NODE A\\n\");    9  },                    name='a') b <- delayed(function(x)   { cat(\"NODE B\\n\");  10*x },    args=list(a),   name='b') c <- delayed(function(x)   { cat(\"NODE C\\n\"); 100*x },    args=list(a),   name='c') d <- delayed(function(...) { cat(\"NODE D\\n\"); sum(...) }, args=list(b,c), name='d')  o <- compute(d, namespace=namespace, verbose=TRUE, force_all_local=TRUE) print(o) All      nodes:    (4) a, b, c, d Initial  nodes:    (1) a Terminal node:     (1) d Dependencies:   a (0)   b (1) a   c (1) a   d (2) b, c Statuses:   a  args_ready=TRUE status=NOT_STARTED   b  args_ready=FALSE status=NOT_STARTED   c  args_ready=FALSE status=NOT_STARTED   d  args_ready=FALSE status=NOT_STARTED 1644869845 2022-02-14 15:17:25 START a 1644869845 2022-02-14 15:17:25 launch local compute   a NODE A 1644869845 2022-02-14 15:17:25 finish local compute   a 1644869845 2022-02-14 15:17:25 END   a 1644869845 2022-02-14 15:17:25 START b 1644869845 2022-02-14 15:17:25 START c 1644869845 2022-02-14 15:17:25 launch local compute   b NODE B 1644869845 2022-02-14 15:17:25 finish local compute   b 1644869845 2022-02-14 15:17:25 END   b 1644869845 2022-02-14 15:17:25 launch local compute   c NODE C 1644869845 2022-02-14 15:17:25 finish local compute   c 1644869845 2022-02-14 15:17:25 END   c 1644869845 2022-02-14 15:17:25 START d 1644869845 2022-02-14 15:17:25 launch local compute   d NODE D 1644869845 2022-02-14 15:17:25 finish local compute   d 1644869845 2022-02-14 15:17:25 END   d All      nodes:    (4) a, b, c, d Initial  nodes:    (1) a Terminal node:     (1) d Dependencies:   a (0)   b (1) a   c (1) a   d (2) b, c Statuses:   a  args_ready=TRUE status=COMPLETED   b  args_ready=TRUE status=COMPLETED   c  args_ready=TRUE status=COMPLETED   d  args_ready=TRUE status=COMPLETED > print(o) [1] 990"},{"path":"/articles/TaskGraphs.html","id":"compute-locally-and-sequentially","dir":"Articles","previous_headings":"Examining task graphs","what":"Compute locally and sequentially","title":"Task graphs","text":"nodes run locally, concurrency, prints go directly terminal can see right away:","code":"a <- delayed(function()    { cat(\"NODE A\\n\");    9  },                    name='a') b <- delayed(function(x)   { cat(\"NODE B\\n\");  10*x },    args=list(a),   name='b') c <- delayed(function(x)   { cat(\"NODE C\\n\"); 100*x },    args=list(a),   name='c') d <- delayed(function(...) { cat(\"NODE D\\n\"); sum(...) }, args=list(b,c), name='d')  o <- d$compute_sequentially() print(o) NODE A NODE B NODE C NODE D [1] 990"},{"path":"/articles/TaskGraphs.html","id":"continue-from-error","dir":"Articles","previous_headings":"Examining task graphs","what":"Continue from error","title":"Task graphs","text":"(admittedly artificial) example show partial progress task graph, retry continue. Fix artificial error:","code":"> a <- delayed(function()    {  9                 },                    name='a') > b <- delayed(function(x)   { stop(\"the train!\") },    args=list(a),   name='b') # Intentional error > c <- delayed(function(x)   { 100*x              },    args=list(a),   name='c') > d <- delayed(function(...) { sum(...)           }, args=list(b,c), name='d')  > o <- d$compute(namespace=namespace) Error in arg$poll(namespace = namespace, verbose = verbose, force_local = force_local) :   node failed: b: tiledbcloud: received error response: Server returned 500 response status code. Message:  Error message: received an error from the container: docker container exited with non-zero code: 1  Docker logs: Arguments file name:  /dev/shm/tiledb_da86fa44-c1d7-4831-828d-0790844da970/args Error in (function (x)  : the train! Calls: main -> compute_result -> do.call -> <Anonymous> Execution halted > show(d) node=d,nargs=2Error in self$args_ready() : dependency has failed  > show(d$dag_for_terminal) All      nodes:    (4) a, b, c, d Initial  nodes:    (1) a Terminal node:     (1) d Dependencies:   a (0)   b (1) a   c (1) a   d (2) b, c Statuses:   a  args_ready=TRUE status=COMPLETED   b  args_ready=TRUE status=FAILED   c  args_ready=TRUE status=RUNNING   d Error in self$args_ready() : dependency has failed > b$func <- function(x) { 10*x }  > o <- d$compute(namespace=namespace) > print(o) [1] 990  > show(d$dag_for_terminal) All      nodes:    (4) a, b, c, d Initial  nodes:    (1) a Terminal node:     (1) d Dependencies:   a (0)   b (1) a   c (1) a   d (2) b, c Statuses:   a  args_ready=TRUE status=COMPLETED   b  args_ready=TRUE status=COMPLETED   c  args_ready=TRUE status=COMPLETED   d  args_ready=TRUE status=COMPLETED >"},{"path":"/articles/UDFs.html","id":"generic-udfs","dir":"Articles","previous_headings":"","what":"Generic UDFs","title":"UDFs","text":"functions write, invoked server-side. Using arguments:","code":"# Namespace to charge namespace <- \"demo\" # Your function myfunc <- function(x=50:54, y=70:74) { x + y } # Execute the function on TileDB Cloud result <- tiledbcloud::execute_generic_udf(udf=myfunc, namespace=namespace) print(result) [1] 120 122 124 126 128 namespace <- \"demo\" myfunc <- function(x, y) { x + y } myargs <- list(100:104, 200:204) result <- tiledbcloud::execute_generic_udf(udf=myfunc, args=myargs, namespace=namespace) print(result) [1] 300 302 304 306 308"},{"path":"/articles/UDFs.html","id":"single-array-udfs","dir":"Articles","previous_headings":"","what":"Single-array UDFs","title":"UDFs","text":"","code":"myfunc <- function(df) {     vec <- as.vector(df[[\"a\"]])     list(min=min(vec), med=median(vec), max=max(vec)) }  result <- tiledbcloud::execute_array_udf(     array=\"tiledb://TileDB-Inc/quickstart_dense\",     udf=myfunc,     selectedRanges=list(cbind(1,2), cbind(1,2)), # Upper-left 2x2     attrs=c(\"a\"),     namespace=\"demo\" // to charge ) print(result) $min [1] 1  $med [1] 3.5  $max [1] 6 # Run a linear regression on bill length vs body mass myfunc <- function(df) {   vec1 <- as.vector(df$bill_length_mm)   vec2 <- as.vector(df$body_mass_g)   lm.fit(cbind(1, vec2), vec1)$coefficients }  result <- tiledbcloud::execute_array_udf(     array=\"tiledb://demo/palmer_penguins2\",     udf=myfunc,     selectedRanges=list(cbind(\"A\", \"Z\"), cbind(2007,2009)),     attrs=list(\"bill_length_mm\", \"body_mass_g\")     # NULL namespace means username namespace is charged ) print(result) vec2 27.15072200  0.00400329"},{"path":"/articles/UDFs.html","id":"multi-array-udfs","dir":"Articles","previous_headings":"","what":"Multi-array UDFs","title":"UDFs","text":"","code":"myfunc <- function(df1, df2) {   vec1 <- as.vector(df1[[\"a\"]])   vec2 <- as.vector(df2[[\"a\"]])   list(     len=length(vec1) + length(vec2),     min=min(vec1) + min(vec2),     med=median(vec1) + median(vec2),     max=max(vec1) + max(vec2)   ) }  details1 <- tiledbcloud::UDFArrayDetails$new(   uri=\"tiledb://TileDB-Inc/quickstart_dense\",   ranges=QueryRanges$new(     layout=Layout$new('row-major'),     ranges=list(cbind(1,4),cbind(1,4))   ),   buffers=list(\"a\") )  details2 <- tiledbcloud::UDFArrayDetails$new(   uri=\"tiledb://TileDB-Inc/quickstart_sparse\",   ranges=QueryRanges$new(     layout=Layout$new('row-major'),     ranges=list(cbind(1,2),cbind(1,4))   ),   buffers=list(\"a\") )  result <- tiledbcloud::execute_multi_array_udf(   array_list=list(details1, details2),   udf=myfunc,   namespace=\"demo\" ) print(result) $len [1] 19  $min [1] 2  $med [1] 10.5  $max [1] 19"},{"path":"/articles/UDFs.html","id":"udf-registration","dir":"Articles","previous_headings":"","what":"UDF registration","title":"UDFs","text":"Known issue: Tags can successfully set using functions shown read back get_udf_info. server-side bug, affecting UDF-info readback regardless client (Python R).","code":""},{"path":[]},{"path":"/articles/UDFs.html","id":"generic-udfs-1","dir":"Articles","previous_headings":"Register a UDF and read back UDF info","what":"Generic UDFs","title":"UDFs","text":"","code":"library(tiledbcloud)  namespace <- 'testuser' udfname <- 'udf-registration-test-generic'  myfunc <- function(vec, exponent) {   sum(vec ** exponent) }  register_udf(namespace=namespace, name=udfname, 'generic', func=myfunc)  info <- get_udf_info(namespace=namespace, name=udfname) str(info) $ ./cloud-register-generic-udf.r List of 5  $ name    : chr \"udf-registration-test-generic\"  $ exec    : chr \"Wzg4LDEwLDAsMCwwLDMsMCw0LDEsMSwwLDMsNSwwLDAsMCwwLDUsODUsODQsNzAsNDUsNTYsMCwwLDQsMywwLDAsMCwyNTMsMCwwLDQsMiwwLDA\"| __truncated__  $ exec_raw: chr \"function (vec, exponent) \\n{\\n    sum(vec ** exponent)\\n}\"  $ language: chr \"\\\"r\\\"\"  $ tags    : NULL"},{"path":"/articles/UDFs.html","id":"single-array-udfs-1","dir":"Articles","previous_headings":"Register a UDF and read back UDF info","what":"Single-array UDFs","title":"UDFs","text":"","code":"library(tiledbcloud)  namespace <- \"testuser\" udfname   <- \"udf-registration-test-single-array-with-arg\"  myfunc <- function(df, attrname, exponent) {   vec <- as.vector(df[[attrname]])   sum(vec ** exponent) }  tiledbcloud::register_udf(namespace=namespace, name=udfname, type='single_array', func=myfunc)  info <- tiledbcloud::get_udf_info(namespace=namespace, name=udfname) str(info) List of 5  $ name    : chr \"udf-registration-test-single-array-with-arg\"  $ exec    : chr \"Wzg4LDEwLDAsMCwwLDMsMCw0LDEsMSwwLDMsNSwwLDAsMCwwLDUsODUsODQsNzAsNDUsNTYsMCwwLDQsMywwLDAsMCwyNTMsMCwwLDQsMiwwLDA\"| __truncated__  $ exec_raw: chr \"function (df, attrname, exponent) \\n{\\n    vec <- as.vector(df[[attrname]])\\n    sum(vec ** exponent)\\n}\"  $ language: chr \"\\\"r\\\"\"  $ tags    : list()"},{"path":"/articles/UDFs.html","id":"multi-array-udfs-1","dir":"Articles","previous_headings":"Register a UDF and read back UDF info","what":"Multi-array UDFs","title":"UDFs","text":"","code":"library(tiledbcloud)  namespace <- \"testuser\" udfname   <- \"udf-registration-test-multi-array-with-arg\"  myfunc <- function(df1, df2, attrname) {   vec1 <- as.vector(df1[[attrname]])   vec2 <- as.vector(df2[[attrname]])   list(     len=length(vec1) + length(vec2),     min=min(vec1) + min(vec2),     med=median(vec1) + median(vec2),     max=max(vec1) + max(vec2)   ) }  tiledbcloud::register_udf(namespace=namespace, name=udfname, type='multi_array', func=myfunc)  info <- tiledbcloud::get_udf_info(namespace=namespace, name=udfname) str(info) [1] \"GET INFO\" List of 5  $ name    : chr \"udf-registration-test-multi-array-with-arg\"  $ exec    : chr \"Wzg4LDEwLDAsMCwwLDMsMCw0LDEsMSwwLDMsNSwwLDAsMCwwLDUsODUsODQsNzAsNDUsNTYsMCwwLDQsMywwLDAsMCwyNTMsMCwwLDQsMiwwLDA\"| __truncated__  $ exec_raw: chr \"function (df1, df2, attrname) \\n{\\n    vec1 <- as.vector(df1[[attrname]])\\n    vec2 <- as.vector(df2[[attrname]\"| __truncated__  $ language: chr \"\\\"r\\\"\"  $ tags    : list()"},{"path":[]},{"path":"/articles/UDFs.html","id":"generic-udfs-2","dir":"Articles","previous_headings":"Invoke registered UDF","what":"Generic UDFs","title":"UDFs","text":"","code":"library(tiledbcloud)  namespace <- 'testuser' udfname <- 'udf-registration-test-generic' registered_udf_name=paste(namespace, udfname, sep='/')  result <- execute_generic_udf(   registered_udf_name=registered_udf_name,   args=list(vec=1:10, exponent=3),   namespace=namespace ) print(result) $ ./cloud-execute-registered-generic-udf.r [1] 3025 [1] 166375"},{"path":"/articles/UDFs.html","id":"single-array-udfs-2","dir":"Articles","previous_headings":"Invoke registered UDF","what":"Single-array UDFs","title":"UDFs","text":"","code":"library(tiledbcloud)  namespace_to_charge <- 'testuser' udf_name <- 'udf-registration-test-single-array-with-arg' registered_udf_name=paste(namespace_to_charge, udf_name, sep='/')  result <- tiledbcloud::execute_array_udf(   array=\"TileDB-Inc/quickstart_dense\",   registered_udf_name=registered_udf_name,   args=list(attrname=\"a\", exponent=2),   selectedRanges=list(cbind(1,2), cbind(1,2)),   attrs=c(\"a\"),   namespace=\"testuser\" # namespace to charge ) print(result) [1] 196"},{"path":"/articles/UDFs.html","id":"multi-array-udfs-2","dir":"Articles","previous_headings":"Invoke registered UDF","what":"Multi-array UDFs","title":"UDFs","text":"","code":"#!/usr/bin/env Rscript  library(tiledbcloud)  namespace_to_charge <- 'testuser' registered_udf_name <- 'testuser/udf-registration-test-multi-array-with-arg'  details1 <- tiledbcloud::UDFArrayDetails$new(   uri=\"tiledb://TileDB-Inc/quickstart_dense\",   ranges=QueryRanges$new(     layout=Layout$new('row-major'),     ranges=list(cbind(1,4),cbind(1,4))   ),   buffers=list(\"a\") )  details2 <- tiledbcloud::UDFArrayDetails$new(   uri=\"tiledb://TileDB-Inc/quickstart_sparse\",   ranges=QueryRanges$new(     layout=Layout$new('row-major'),     ranges=list(cbind(1,2),cbind(1,4))   ),   buffers=list(\"a\") )  result <- tiledbcloud::execute_multi_array_udf(   array_list=list(details1, details2),   registered_udf_name=registered_udf_name,   args=list(attrname=\"a\"),   namespace=namespace_to_charge ) print(result) $len [1] 19  $min [1] 2  $med [1] 10.5  $max [1] 19"},{"path":"/articles/UDFs.html","id":"unregister-udf","dir":"Articles","previous_headings":"","what":"Unregister UDF","title":"UDFs","text":"generic, single_array, multi_array registered UDFs.","code":"library(tiledbcloud)  namespace <- 'testuser' udfname <- 'udf-registration-test-generic' deregister_udf(namespace=namespace, name=udfname)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"TileDB, Inc.. Author, copyright holder. OpenAPI Generator community. Contributor. John Kerl. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"TileDB, Inc. (2022). tiledbcloud: TileDB Cloud Platform R Client Package. R package version 0.0.7, https://github.com/TileDB-Inc/TileDB-Cloud-R.","code":"@Manual{,   title = {tiledbcloud: TileDB Cloud Platform R Client Package},   author = {{TileDB, Inc.}},   year = {2022},   note = {R package version 0.0.7},   url = {https://github.com/TileDB-Inc/TileDB-Cloud-R}, }"},{"path":"/index.html","id":"section","dir":"","previous_headings":"","what":"TileDB Cloud Platform R Client Package","title":"TileDB Cloud Platform R Client Package","text":"repository contains R client TileDB Cloud Service.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"TileDB Cloud Platform R Client Package","text":"present, installation GitHub supported via TileDB-R package dependency installed first.","code":"> if (!requireNamespace(\"remotes\", quietly=TRUE)) install.packages(\"remotes\") > remotes::install_github(\"TileDB-Inc/TileDB-Cloud-R\")"},{"path":"/index.html","id":"quickstart","dir":"","previous_headings":"","what":"Quickstart","title":"TileDB Cloud Platform R Client Package","text":"See Quickstart section docs.","code":""},{"path":"/index.html","id":"developer-links","dir":"","previous_headings":"","what":"Developer links","title":"TileDB Cloud Platform R Client Package","text":"See vignettes Articles section.","code":""},{"path":"/origREADME.html","id":null,"dir":"","previous_headings":"","what":"R API client for tiledbcloud","title":"R API client for tiledbcloud","text":"TileDB Storage Platform REST API","code":""},{"path":"/origREADME.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"R API client for tiledbcloud","text":"API client generated OpenAPI Generator project. using OpenAPI spec remote server, can easily generate API client. API version: 2.2.19 Package version: 0.0.3 Build package: org.openapitools.codegen.languages.RClientCodegen","code":""},{"path":[]},{"path":"/origREADME.html","id":"prerequisites","dir":"","previous_headings":"Installation","what":"Prerequisites","title":"R API client for tiledbcloud","text":"Install dependencies","code":"install.packages(\"jsonlite\") install.packages(\"httr\") install.packages(\"base64enc\")"},{"path":"/origREADME.html","id":"build-the-package","dir":"","previous_headings":"Installation","what":"Build the package","title":"R API client for tiledbcloud","text":"","code":"git clone https://github.com/GIT_USER_ID/GIT_REPO_ID cd GIT_REPO_ID R CMD build . R CMD check tiledbcloud_0.0.3.tar.gz --no-manual R CMD INSTALL tiledbcloud_0.0.3.tar.gz"},{"path":"/origREADME.html","id":"install-the-package","dir":"","previous_headings":"Installation","what":"Install the package","title":"R API client for tiledbcloud","text":"install directly Github, use devtools:","code":"install.packages(\"tiledbcloud\") install.packages(\"devtools\") library(devtools) install_github(\"GIT_USER_ID/GIT_REPO_ID\")"},{"path":"/origREADME.html","id":"usage","dir":"","previous_headings":"Installation","what":"Usage","title":"R API client for tiledbcloud","text":"","code":"library(tiledbcloud)"},{"path":"/origREADME.html","id":"documentation-for-api-endpoints","dir":"","previous_headings":"","what":"Documentation for API Endpoints","title":"R API client for tiledbcloud","text":"URIs relative http://localhost/v1","code":""},{"path":"/origREADME.html","id":"documentation-for-models","dir":"","previous_headings":"","what":"Documentation for Models","title":"R API client for tiledbcloud","text":"AWSAccessCredentials ActivityEventType Array ArrayActions ArrayActivityLog ArrayBrowserData ArrayBrowserSidebar ArrayEndTimestampData ArrayFavorite ArrayFavoritesData ArrayInfo ArrayInfoUpdate ArrayMetadata ArrayMetadataEntry ArraySample ArraySchema ArraySharing ArrayTask ArrayTaskBrowserSidebar ArrayTaskData ArrayTaskLog ArrayTaskStatus ArrayTaskType ArrayType Attribute AttributeBufferHeader AttributeBufferSize Datatype Dimension DimensionCoordinate DimensionTileExtent Domain DomainArray Error FavoriteCreate FilePropertyName FileType Filter FilterData FilterOption FilterPipeline FilterType GenericUDF InlineObject InlineResponse200 Invitation InvitationArrayShareEmail InvitationData InvitationOrganizationJoinEmail InvitationStatus InvitationType LastAccessedArray Layout MLModelFavorite MLModelFavoritesData MaxBufferSizes MultiArrayUDF NamespaceActions NonEmptyDomain NotebookFavorite NotebookFavoritesData NotebookStatus Organization OrganizationRoles OrganizationUser PaginationMetadata Pricing PricingAggregateUsage PricingCurrency PricingInterval PricingType PricingUnitLabel PublicShareFilter Query QueryJson QueryRanges QueryReader Querystatus Querytype ReadState ResultFormat SQLParameters SSOProvider Subarray SubarrayPartitioner SubarrayPartitionerCurrent SubarrayPartitionerState SubarrayRanges Subscription TileDBConfig Token TokenRequest TokenScope UDFActions UDFArrayDetails UDFFavorite UDFFavoritesData UDFImage UDFImageVersion UDFInfo UDFInfoUpdate UDFLanguage UDFSharing UDFSubarray UDFSubarrayRange UDFType User Writer","code":""},{"path":[]},{"path":"/origREADME.html","id":"apikeyauth","dir":"","previous_headings":"Documentation for Authorization","what":"ApiKeyAuth","title":"R API client for tiledbcloud","text":"Type: API key API key parameter name: X-TILEDB-REST-API-KEY Location: HTTP header","code":""},{"path":"/origREADME.html","id":"basicauth","dir":"","previous_headings":"Documentation for Authorization","what":"BasicAuth","title":"R API client for tiledbcloud","text":"Type: HTTP basic authentication","code":""},{"path":"/origREADME.html","id":"oauth2","dir":"","previous_headings":"Documentation for Authorization","what":"OAuth2","title":"R API client for tiledbcloud","text":"Type: OAuth Flow: accessCode Authorization URL: https://oauth2.tiledb.com/oauth2/authorize read: Grants read access write: Grants write access admin: Grants read write access administrative information","code":""},{"path":[]},{"path":"/reference/AWSAccessCredentials.html","id":null,"dir":"Reference","previous_headings":"","what":"AWSAccessCredentials — AWSAccessCredentials","title":"AWSAccessCredentials — AWSAccessCredentials","text":"AWSAccessCredentials Class","code":""},{"path":"/reference/AWSAccessCredentials.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"AWSAccessCredentials — AWSAccessCredentials","text":"R6Class generator object","code":""},{"path":"/reference/AWSAccessCredentials.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"AWSAccessCredentials — AWSAccessCredentials","text":"secret_access_key character [optional] access_key_id character [optional] service_role_arn character [optional] name character [optional] default character [optional] buckets list( character ) [optional] created_at character [optional] updated_at character [optional]","code":""},{"path":[]},{"path":"/reference/AWSAccessCredentials.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"AWSAccessCredentials — AWSAccessCredentials","text":"AWSAccessCredentials$new() AWSAccessCredentials$toJSON() AWSAccessCredentials$fromJSON() AWSAccessCredentials$toJSONString() AWSAccessCredentials$fromJSONString() AWSAccessCredentials$clone()","code":""},{"path":[]},{"path":"/reference/AWSAccessCredentials.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AWSAccessCredentials — AWSAccessCredentials","text":"","code":"AWSAccessCredentials$new(   secret_access_key = NULL,   access_key_id = NULL,   service_role_arn = NULL,   name = NULL,   default = NULL,   buckets = NULL,   created_at = NULL,   updated_at = NULL,   ... )"},{"path":[]},{"path":"/reference/AWSAccessCredentials.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"AWSAccessCredentials — AWSAccessCredentials","text":"","code":"AWSAccessCredentials$toJSON()"},{"path":[]},{"path":"/reference/AWSAccessCredentials.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"AWSAccessCredentials — AWSAccessCredentials","text":"","code":"AWSAccessCredentials$fromJSON(AWSAccessCredentialsJson)"},{"path":[]},{"path":"/reference/AWSAccessCredentials.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"AWSAccessCredentials — AWSAccessCredentials","text":"","code":"AWSAccessCredentials$toJSONString()"},{"path":[]},{"path":"/reference/AWSAccessCredentials.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"AWSAccessCredentials — AWSAccessCredentials","text":"","code":"AWSAccessCredentials$fromJSONString(AWSAccessCredentialsJson)"},{"path":"/reference/AWSAccessCredentials.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"AWSAccessCredentials — AWSAccessCredentials","text":"objects class cloneable method.","code":""},{"path":"/reference/AWSAccessCredentials.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"AWSAccessCredentials — AWSAccessCredentials","text":"","code":"AWSAccessCredentials$clone(deep = FALSE)"},{"path":"/reference/AWSAccessCredentials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AWSAccessCredentials — AWSAccessCredentials","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ActivityEventType.html","id":null,"dir":"Reference","previous_headings":"","what":"ActivityEventType — ActivityEventType","title":"ActivityEventType — ActivityEventType","text":"ActivityEventType Class","code":""},{"path":"/reference/ActivityEventType.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ActivityEventType — ActivityEventType","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/ActivityEventType.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ActivityEventType — ActivityEventType","text":"ActivityEventType$new() ActivityEventType$toJSON() ActivityEventType$fromJSON() ActivityEventType$toJSONString() ActivityEventType$fromJSONString() ActivityEventType$clone()","code":""},{"path":[]},{"path":"/reference/ActivityEventType.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ActivityEventType — ActivityEventType","text":"","code":"ActivityEventType$new(...)"},{"path":[]},{"path":"/reference/ActivityEventType.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ActivityEventType — ActivityEventType","text":"","code":"ActivityEventType$toJSON()"},{"path":[]},{"path":"/reference/ActivityEventType.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ActivityEventType — ActivityEventType","text":"","code":"ActivityEventType$fromJSON(ActivityEventTypeJson)"},{"path":[]},{"path":"/reference/ActivityEventType.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ActivityEventType — ActivityEventType","text":"","code":"ActivityEventType$toJSONString()"},{"path":[]},{"path":"/reference/ActivityEventType.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ActivityEventType — ActivityEventType","text":"","code":"ActivityEventType$fromJSONString(ActivityEventTypeJson)"},{"path":"/reference/ActivityEventType.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ActivityEventType — ActivityEventType","text":"objects class cloneable method.","code":""},{"path":"/reference/ActivityEventType.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ActivityEventType — ActivityEventType","text":"","code":"ActivityEventType$clone(deep = FALSE)"},{"path":"/reference/ActivityEventType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ActivityEventType — ActivityEventType","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ApiClient.html","id":null,"dir":"Reference","previous_headings":"","what":"ApiClient — ApiClient","title":"ApiClient — ApiClient","text":"ApiClient Class","code":""},{"path":"/reference/ApiClient.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ApiClient — ApiClient","text":"R6Class generator object","code":""},{"path":"/reference/ApiClient.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ApiClient — ApiClient","text":"ApiClient Class Generic API client OpenAPI client library builds. OpenAPI generic API client. client handles client- server communication, invariant across implementations. Specifics methods models application generated OpenAPI Generator templates. NOTE: class auto generated OpenAPI Generator (https://openapi-generator.tech). Ref: https://openapi-generator.tech edit class manually.","code":""},{"path":"/reference/ApiClient.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ApiClient — ApiClient","text":"basePath Base url userAgent Default user agent username Username HTTP basic authentication password Password HTTP basic authentication timeout Default timeout seconds retryStatusCodes vector status codes retry maxRetryAttempts maximum number retries status codes","code":""},{"path":[]},{"path":"/reference/ApiClient.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ApiClient — ApiClient","text":"ApiClient$new() ApiClient$CallApi() ApiClient$Execute() ApiClient$deserialize() ApiClient$deserializeObj() ApiClient$clone()","code":""},{"path":[]},{"path":"/reference/ApiClient.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ApiClient — ApiClient","text":"","code":"ApiClient$new(   basePath = NULL,   userAgent = NULL,   defaultHeaders = NULL,   username = NULL,   password = NULL,   apiKeys = NULL,   accessToken = NULL,   timeout = NULL,   retryStatusCodes = NULL,   maxRetryAttempts = NULL )"},{"path":[]},{"path":"/reference/ApiClient.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ApiClient — ApiClient","text":"","code":"ApiClient$CallApi(url, method, queryParams, headerParams, body, ...)"},{"path":[]},{"path":"/reference/ApiClient.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ApiClient — ApiClient","text":"","code":"ApiClient$Execute(url, method, queryParams, headerParams, body, ...)"},{"path":[]},{"path":"/reference/ApiClient.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ApiClient — ApiClient","text":"","code":"ApiClient$deserialize(resp, returnType, pkgEnv)"},{"path":[]},{"path":"/reference/ApiClient.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ApiClient — ApiClient","text":"","code":"ApiClient$deserializeObj(obj, returnType, pkgEnv)"},{"path":"/reference/ApiClient.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ApiClient — ApiClient","text":"objects class cloneable method.","code":""},{"path":"/reference/ApiClient.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ApiClient — ApiClient","text":"","code":"ApiClient$clone(deep = FALSE)"},{"path":"/reference/ApiClient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ApiClient — ApiClient","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ApiResponse.html","id":null,"dir":"Reference","previous_headings":"","what":"ApiResponse — ApiResponse","title":"ApiResponse — ApiResponse","text":"ApiResponse Class","code":""},{"path":"/reference/ApiResponse.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ApiResponse — ApiResponse","text":"R6Class generator object","code":""},{"path":"/reference/ApiResponse.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ApiResponse — ApiResponse","text":"content deserialized response body. response raw response endpoint.","code":""},{"path":[]},{"path":"/reference/ApiResponse.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ApiResponse — ApiResponse","text":"ApiResponse$new() ApiResponse$clone()","code":""},{"path":[]},{"path":"/reference/ApiResponse.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ApiResponse — ApiResponse","text":"","code":"ApiResponse$new(content, response)"},{"path":"/reference/ApiResponse.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ApiResponse — ApiResponse","text":"objects class cloneable method.","code":""},{"path":"/reference/ApiResponse.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ApiResponse — ApiResponse","text":"","code":"ApiResponse$clone(deep = FALSE)"},{"path":"/reference/ApiResponse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ApiResponse — ApiResponse","text":"deep Whether make deep clone.","code":""},{"path":"/reference/Array.html","id":null,"dir":"Reference","previous_headings":"","what":"Array — Array","title":"Array — Array","text":"Array Class","code":""},{"path":"/reference/Array.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Array — Array","text":"R6Class generator object","code":""},{"path":"/reference/Array.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Array — Array","text":"timestamp numeric queryType Querytype uri character","code":""},{"path":[]},{"path":"/reference/Array.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Array — Array","text":"Array$new() Array$toJSON() Array$fromJSON() Array$toJSONString() Array$fromJSONString() Array$clone()","code":""},{"path":[]},{"path":"/reference/Array.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Array — Array","text":"","code":"Array$new(timestamp, queryType, uri, ...)"},{"path":[]},{"path":"/reference/Array.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Array — Array","text":"","code":"Array$toJSON()"},{"path":[]},{"path":"/reference/Array.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Array — Array","text":"","code":"Array$fromJSON(ArrayJson)"},{"path":[]},{"path":"/reference/Array.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Array — Array","text":"","code":"Array$toJSONString()"},{"path":[]},{"path":"/reference/Array.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Array — Array","text":"","code":"Array$fromJSONString(ArrayJson)"},{"path":"/reference/Array.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Array — Array","text":"objects class cloneable method.","code":""},{"path":"/reference/Array.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Array — Array","text":"","code":"Array$clone(deep = FALSE)"},{"path":"/reference/Array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Array — Array","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArrayActions.html","id":null,"dir":"Reference","previous_headings":"","what":"ArrayActions — ArrayActions","title":"ArrayActions — ArrayActions","text":"ArrayActions Class","code":""},{"path":"/reference/ArrayActions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArrayActions — ArrayActions","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/ArrayActions.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArrayActions — ArrayActions","text":"ArrayActions$new() ArrayActions$toJSON() ArrayActions$fromJSON() ArrayActions$toJSONString() ArrayActions$fromJSONString() ArrayActions$clone()","code":""},{"path":[]},{"path":"/reference/ArrayActions.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayActions — ArrayActions","text":"","code":"ArrayActions$new(...)"},{"path":[]},{"path":"/reference/ArrayActions.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayActions — ArrayActions","text":"","code":"ArrayActions$toJSON()"},{"path":[]},{"path":"/reference/ArrayActions.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayActions — ArrayActions","text":"","code":"ArrayActions$fromJSON(ArrayActionsJson)"},{"path":[]},{"path":"/reference/ArrayActions.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayActions — ArrayActions","text":"","code":"ArrayActions$toJSONString()"},{"path":[]},{"path":"/reference/ArrayActions.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayActions — ArrayActions","text":"","code":"ArrayActions$fromJSONString(ArrayActionsJson)"},{"path":"/reference/ArrayActions.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArrayActions — ArrayActions","text":"objects class cloneable method.","code":""},{"path":"/reference/ArrayActions.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayActions — ArrayActions","text":"","code":"ArrayActions$clone(deep = FALSE)"},{"path":"/reference/ArrayActions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArrayActions — ArrayActions","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArrayActivityLog.html","id":null,"dir":"Reference","previous_headings":"","what":"ArrayActivityLog — ArrayActivityLog","title":"ArrayActivityLog — ArrayActivityLog","text":"ArrayActivityLog Class","code":""},{"path":"/reference/ArrayActivityLog.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArrayActivityLog — ArrayActivityLog","text":"R6Class generator object","code":""},{"path":"/reference/ArrayActivityLog.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ArrayActivityLog — ArrayActivityLog","text":"event_at character [optional] action ActivityEventType [optional] username character [optional] bytes_sent integer [optional] bytes_received integer [optional] array_task_id character [optional] id character [optional] query_ranges character [optional] query_stats character [optional]","code":""},{"path":[]},{"path":"/reference/ArrayActivityLog.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArrayActivityLog — ArrayActivityLog","text":"ArrayActivityLog$new() ArrayActivityLog$toJSON() ArrayActivityLog$fromJSON() ArrayActivityLog$toJSONString() ArrayActivityLog$fromJSONString() ArrayActivityLog$clone()","code":""},{"path":[]},{"path":"/reference/ArrayActivityLog.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayActivityLog — ArrayActivityLog","text":"","code":"ArrayActivityLog$new(   event_at = NULL,   action = NULL,   username = NULL,   bytes_sent = NULL,   bytes_received = NULL,   array_task_id = NULL,   id = NULL,   query_ranges = NULL,   query_stats = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayActivityLog.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayActivityLog — ArrayActivityLog","text":"","code":"ArrayActivityLog$toJSON()"},{"path":[]},{"path":"/reference/ArrayActivityLog.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayActivityLog — ArrayActivityLog","text":"","code":"ArrayActivityLog$fromJSON(ArrayActivityLogJson)"},{"path":[]},{"path":"/reference/ArrayActivityLog.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayActivityLog — ArrayActivityLog","text":"","code":"ArrayActivityLog$toJSONString()"},{"path":[]},{"path":"/reference/ArrayActivityLog.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayActivityLog — ArrayActivityLog","text":"","code":"ArrayActivityLog$fromJSONString(ArrayActivityLogJson)"},{"path":"/reference/ArrayActivityLog.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArrayActivityLog — ArrayActivityLog","text":"objects class cloneable method.","code":""},{"path":"/reference/ArrayActivityLog.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayActivityLog — ArrayActivityLog","text":"","code":"ArrayActivityLog$clone(deep = FALSE)"},{"path":"/reference/ArrayActivityLog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArrayActivityLog — ArrayActivityLog","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArrayApi.html","id":null,"dir":"Reference","previous_headings":"","what":"Array operations — ArrayApi","title":"Array operations — ArrayApi","text":"tiledbcloud.Array","code":""},{"path":"/reference/ArrayApi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Array operations — ArrayApi","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/ArrayApi.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Array operations — ArrayApi","text":"apiClient Handles client-server communication.","code":""},{"path":[]},{"path":"/reference/ArrayApi.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Array operations — ArrayApi","text":"ArrayApi$new() ArrayApi$ArrayActivityLog() ArrayApi$ArrayActivityLogWithHttpInfo() ArrayApi$ArraysBrowserOwnedGet() ArrayApi$ArraysBrowserOwnedGetWithHttpInfo() ArrayApi$ArraysBrowserOwnedSidebarGet() ArrayApi$ArraysBrowserOwnedSidebarGetWithHttpInfo() ArrayApi$ArraysBrowserPublicGet() ArrayApi$ArraysBrowserPublicGetWithHttpInfo() ArrayApi$ArraysBrowserPublicSidebarGet() ArrayApi$ArraysBrowserPublicSidebarGetWithHttpInfo() ArrayApi$ArraysBrowserSharedGet() ArrayApi$ArraysBrowserSharedGetWithHttpInfo() ArrayApi$ArraysBrowserSharedSidebarGet() ArrayApi$ArraysBrowserSharedSidebarGetWithHttpInfo() ArrayApi$ArraysNamespaceArrayEndTimestampsGet() ArrayApi$ArraysNamespaceArrayEndTimestampsGetWithHttpInfo() ArrayApi$ConsolidateArray() ArrayApi$ConsolidateArrayWithHttpInfo() ArrayApi$CreateArray() ArrayApi$CreateArrayWithHttpInfo() ArrayApi$DeleteArray() ArrayApi$DeleteArrayWithHttpInfo() ArrayApi$DeregisterArray() ArrayApi$DeregisterArrayWithHttpInfo() ArrayApi$GetActivityLogById() ArrayApi$GetActivityLogByIdWithHttpInfo() ArrayApi$GetAllArrayMetadata() ArrayApi$GetAllArrayMetadataWithHttpInfo() ArrayApi$GetArray() ArrayApi$GetArrayWithHttpInfo() ArrayApi$GetArrayMaxBufferSizes() ArrayApi$GetArrayMaxBufferSizesWithHttpInfo() ArrayApi$GetArrayMetaDataJson() ArrayApi$GetArrayMetaDataJsonWithHttpInfo() ArrayApi$GetArrayMetadata() ArrayApi$GetArrayMetadataWithHttpInfo() ArrayApi$GetArrayMetadataCapnp() ArrayApi$GetArrayMetadataCapnpWithHttpInfo() ArrayApi$GetArrayNonEmptyDomain() ArrayApi$GetArrayNonEmptyDomainWithHttpInfo() ArrayApi$GetArrayNonEmptyDomainJson() ArrayApi$GetArrayNonEmptyDomainJsonWithHttpInfo() ArrayApi$GetArraySampleData() ArrayApi$GetArraySampleDataWithHttpInfo() ArrayApi$GetArraySharingPolicies() ArrayApi$GetArraySharingPoliciesWithHttpInfo() ArrayApi$GetArraysInNamespace() ArrayApi$GetArraysInNamespaceWithHttpInfo() ArrayApi$GetFragmentEndTimestamp() ArrayApi$GetFragmentEndTimestampWithHttpInfo() ArrayApi$GetLastAccessedArrays() ArrayApi$GetLastAccessedArraysWithHttpInfo() ArrayApi$RegisterArray() ArrayApi$RegisterArrayWithHttpInfo() ArrayApi$ShareArray() ArrayApi$ShareArrayWithHttpInfo() ArrayApi$UpdateArrayMetadata() ArrayApi$UpdateArrayMetadataWithHttpInfo() ArrayApi$UpdateArrayMetadataCapnp() ArrayApi$UpdateArrayMetadataCapnpWithHttpInfo() ArrayApi$VacuumArray() ArrayApi$VacuumArrayWithHttpInfo() ArrayApi$clone()","code":""},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$new(apiClient)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$ArrayActivityLog(   namespace,   array,   start = NULL,   end = NULL,   event.types = NULL,   task.id = NULL,   has.task.id = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$ArrayActivityLogWithHttpInfo(   namespace,   array,   start = NULL,   end = NULL,   event.types = NULL,   task.id = NULL,   has.task.id = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$ArraysBrowserOwnedGet(   page = NULL,   per.page = NULL,   search = NULL,   namespace = NULL,   orderby = NULL,   permissions = NULL,   tag = NULL,   exclude.tag = NULL,   file.type = NULL,   exclude.file.type = NULL,   file.property = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$ArraysBrowserOwnedGetWithHttpInfo(   page = NULL,   per.page = NULL,   search = NULL,   namespace = NULL,   orderby = NULL,   permissions = NULL,   tag = NULL,   exclude.tag = NULL,   file.type = NULL,   exclude.file.type = NULL,   file.property = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$ArraysBrowserOwnedSidebarGet(...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$ArraysBrowserOwnedSidebarGetWithHttpInfo(...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$ArraysBrowserPublicGet(   page = NULL,   per.page = NULL,   search = NULL,   namespace = NULL,   orderby = NULL,   permissions = NULL,   tag = NULL,   exclude.tag = NULL,   file.type = NULL,   exclude.file.type = NULL,   file.property = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$ArraysBrowserPublicGetWithHttpInfo(   page = NULL,   per.page = NULL,   search = NULL,   namespace = NULL,   orderby = NULL,   permissions = NULL,   tag = NULL,   exclude.tag = NULL,   file.type = NULL,   exclude.file.type = NULL,   file.property = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$ArraysBrowserPublicSidebarGet(...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$ArraysBrowserPublicSidebarGetWithHttpInfo(...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$ArraysBrowserSharedGet(   page = NULL,   per.page = NULL,   search = NULL,   namespace = NULL,   orderby = NULL,   permissions = NULL,   tag = NULL,   exclude.tag = NULL,   file.type = NULL,   exclude.file.type = NULL,   file.property = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$ArraysBrowserSharedGetWithHttpInfo(   page = NULL,   per.page = NULL,   search = NULL,   namespace = NULL,   orderby = NULL,   permissions = NULL,   tag = NULL,   exclude.tag = NULL,   file.type = NULL,   exclude.file.type = NULL,   file.property = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$ArraysBrowserSharedSidebarGet(...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$ArraysBrowserSharedSidebarGetWithHttpInfo(...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$ArraysNamespaceArrayEndTimestampsGet(   namespace,   array,   page = NULL,   per.page = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$ArraysNamespaceArrayEndTimestampsGetWithHttpInfo(   namespace,   array,   page = NULL,   per.page = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$ConsolidateArray(namespace, array, tiledb.config, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$ConsolidateArrayWithHttpInfo(namespace, array, tiledb.config, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$CreateArray(   namespace,   array,   content.type,   array.schema,   X_TILEDB_CLOUD_ACCESS_CREDENTIALS_NAME = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$CreateArrayWithHttpInfo(   namespace,   array,   content.type,   array.schema,   X_TILEDB_CLOUD_ACCESS_CREDENTIALS_NAME = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$DeleteArray(namespace, array, content.type, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$DeleteArrayWithHttpInfo(namespace, array, content.type, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$DeregisterArray(namespace, array, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$DeregisterArrayWithHttpInfo(namespace, array, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-25","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetActivityLogById(namespace, array, id, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-26","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetActivityLogByIdWithHttpInfo(namespace, array, id, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-27","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetAllArrayMetadata(public.share = NULL, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-28","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetAllArrayMetadataWithHttpInfo(public.share = NULL, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-29","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetArray(namespace, array, content.type, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-30","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetArrayWithHttpInfo(namespace, array, content.type, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-31","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetArrayMaxBufferSizes(   namespace,   array,   subarray,   content.type,   x.payer = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-32","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetArrayMaxBufferSizesWithHttpInfo(   namespace,   array,   subarray,   content.type,   x.payer = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-33","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetArrayMetaDataJson(   namespace,   array,   length = NULL,   end.timestamp = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-34","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetArrayMetaDataJsonWithHttpInfo(   namespace,   array,   length = NULL,   end.timestamp = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-35","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetArrayMetadata(namespace, array, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-36","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetArrayMetadataWithHttpInfo(namespace, array, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-37","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetArrayMetadataCapnp(namespace, array, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-38","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetArrayMetadataCapnpWithHttpInfo(namespace, array, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-39","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetArrayNonEmptyDomain(   namespace,   array,   content.type,   x.payer = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-40","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetArrayNonEmptyDomainWithHttpInfo(   namespace,   array,   content.type,   x.payer = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-41","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetArrayNonEmptyDomainJson(namespace, array, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-42","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetArrayNonEmptyDomainJsonWithHttpInfo(namespace, array, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-43","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetArraySampleData(namespace, array, samples = 5, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-44","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetArraySampleDataWithHttpInfo(namespace, array, samples = 5, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-45","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetArraySharingPolicies(namespace, array, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-46","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetArraySharingPoliciesWithHttpInfo(namespace, array, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-47","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetArraysInNamespace(namespace, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-48","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetArraysInNamespaceWithHttpInfo(namespace, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-49","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetFragmentEndTimestamp(namespace, array, end.timestamp = NULL, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-50","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetFragmentEndTimestampWithHttpInfo(   namespace,   array,   end.timestamp = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-51","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetLastAccessedArrays(...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-52","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$GetLastAccessedArraysWithHttpInfo(...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-53","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$RegisterArray(namespace, array, array.metadata, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-54","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$RegisterArrayWithHttpInfo(namespace, array, array.metadata, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-55","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$ShareArray(namespace, array, array.sharing, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-56","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$ShareArrayWithHttpInfo(namespace, array, array.sharing, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-57","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$UpdateArrayMetadata(namespace, array, array.metadata, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-58","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$UpdateArrayMetadataWithHttpInfo(namespace, array, array.metadata, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-59","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$UpdateArrayMetadataCapnp(   namespace,   array,   array.metadata.entries,   ... )"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-60","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$UpdateArrayMetadataCapnpWithHttpInfo(   namespace,   array,   array.metadata.entries,   ... )"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-61","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$VacuumArray(namespace, array, tiledb.config, ...)"},{"path":[]},{"path":"/reference/ArrayApi.html","id":"usage-62","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$VacuumArrayWithHttpInfo(namespace, array, tiledb.config, ...)"},{"path":"/reference/ArrayApi.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Array operations — ArrayApi","text":"objects class cloneable method.","code":""},{"path":"/reference/ArrayApi.html","id":"usage-63","dir":"Reference","previous_headings":"","what":"Usage","title":"Array operations — ArrayApi","text":"","code":"ArrayApi$clone(deep = FALSE)"},{"path":"/reference/ArrayApi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Array operations — ArrayApi","text":"deep Whether make deep clone.","code":""},{"path":[]},{"path":"/reference/ArrayBrowserData.html","id":null,"dir":"Reference","previous_headings":"","what":"ArrayBrowserData — ArrayBrowserData","title":"ArrayBrowserData — ArrayBrowserData","text":"ArrayBrowserData Class","code":""},{"path":"/reference/ArrayBrowserData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArrayBrowserData — ArrayBrowserData","text":"R6Class generator object","code":""},{"path":"/reference/ArrayBrowserData.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ArrayBrowserData — ArrayBrowserData","text":"arrays list( ArrayInfo ) [optional] pagination_metadata PaginationMetadata [optional]","code":""},{"path":[]},{"path":"/reference/ArrayBrowserData.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArrayBrowserData — ArrayBrowserData","text":"ArrayBrowserData$new() ArrayBrowserData$toJSON() ArrayBrowserData$fromJSON() ArrayBrowserData$toJSONString() ArrayBrowserData$fromJSONString() ArrayBrowserData$clone()","code":""},{"path":[]},{"path":"/reference/ArrayBrowserData.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayBrowserData — ArrayBrowserData","text":"","code":"ArrayBrowserData$new(arrays = NULL, pagination_metadata = NULL, ...)"},{"path":[]},{"path":"/reference/ArrayBrowserData.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayBrowserData — ArrayBrowserData","text":"","code":"ArrayBrowserData$toJSON()"},{"path":[]},{"path":"/reference/ArrayBrowserData.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayBrowserData — ArrayBrowserData","text":"","code":"ArrayBrowserData$fromJSON(ArrayBrowserDataJson)"},{"path":[]},{"path":"/reference/ArrayBrowserData.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayBrowserData — ArrayBrowserData","text":"","code":"ArrayBrowserData$toJSONString()"},{"path":[]},{"path":"/reference/ArrayBrowserData.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayBrowserData — ArrayBrowserData","text":"","code":"ArrayBrowserData$fromJSONString(ArrayBrowserDataJson)"},{"path":"/reference/ArrayBrowserData.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArrayBrowserData — ArrayBrowserData","text":"objects class cloneable method.","code":""},{"path":"/reference/ArrayBrowserData.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayBrowserData — ArrayBrowserData","text":"","code":"ArrayBrowserData$clone(deep = FALSE)"},{"path":"/reference/ArrayBrowserData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArrayBrowserData — ArrayBrowserData","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArrayBrowserSidebar.html","id":null,"dir":"Reference","previous_headings":"","what":"ArrayBrowserSidebar — ArrayBrowserSidebar","title":"ArrayBrowserSidebar — ArrayBrowserSidebar","text":"ArrayBrowserSidebar Class","code":""},{"path":"/reference/ArrayBrowserSidebar.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArrayBrowserSidebar — ArrayBrowserSidebar","text":"R6Class generator object","code":""},{"path":"/reference/ArrayBrowserSidebar.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ArrayBrowserSidebar — ArrayBrowserSidebar","text":"namespaces list( character ) [optional] result_count_for_all integer [optional] result_count_by_namespace object [optional]","code":""},{"path":[]},{"path":"/reference/ArrayBrowserSidebar.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArrayBrowserSidebar — ArrayBrowserSidebar","text":"ArrayBrowserSidebar$new() ArrayBrowserSidebar$toJSON() ArrayBrowserSidebar$fromJSON() ArrayBrowserSidebar$toJSONString() ArrayBrowserSidebar$fromJSONString() ArrayBrowserSidebar$clone()","code":""},{"path":[]},{"path":"/reference/ArrayBrowserSidebar.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayBrowserSidebar — ArrayBrowserSidebar","text":"","code":"ArrayBrowserSidebar$new(   namespaces = NULL,   result_count_for_all = NULL,   result_count_by_namespace = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayBrowserSidebar.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayBrowserSidebar — ArrayBrowserSidebar","text":"","code":"ArrayBrowserSidebar$toJSON()"},{"path":[]},{"path":"/reference/ArrayBrowserSidebar.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayBrowserSidebar — ArrayBrowserSidebar","text":"","code":"ArrayBrowserSidebar$fromJSON(ArrayBrowserSidebarJson)"},{"path":[]},{"path":"/reference/ArrayBrowserSidebar.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayBrowserSidebar — ArrayBrowserSidebar","text":"","code":"ArrayBrowserSidebar$toJSONString()"},{"path":[]},{"path":"/reference/ArrayBrowserSidebar.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayBrowserSidebar — ArrayBrowserSidebar","text":"","code":"ArrayBrowserSidebar$fromJSONString(ArrayBrowserSidebarJson)"},{"path":"/reference/ArrayBrowserSidebar.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArrayBrowserSidebar — ArrayBrowserSidebar","text":"objects class cloneable method.","code":""},{"path":"/reference/ArrayBrowserSidebar.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayBrowserSidebar — ArrayBrowserSidebar","text":"","code":"ArrayBrowserSidebar$clone(deep = FALSE)"},{"path":"/reference/ArrayBrowserSidebar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArrayBrowserSidebar — ArrayBrowserSidebar","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArrayEndTimestampData.html","id":null,"dir":"Reference","previous_headings":"","what":"ArrayEndTimestampData — ArrayEndTimestampData","title":"ArrayEndTimestampData — ArrayEndTimestampData","text":"ArrayEndTimestampData Class","code":""},{"path":"/reference/ArrayEndTimestampData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArrayEndTimestampData — ArrayEndTimestampData","text":"R6Class generator object","code":""},{"path":"/reference/ArrayEndTimestampData.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ArrayEndTimestampData — ArrayEndTimestampData","text":"end_timestamps list( integer ) [optional] pagination_metadata PaginationMetadata [optional]","code":""},{"path":[]},{"path":"/reference/ArrayEndTimestampData.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArrayEndTimestampData — ArrayEndTimestampData","text":"ArrayEndTimestampData$new() ArrayEndTimestampData$toJSON() ArrayEndTimestampData$fromJSON() ArrayEndTimestampData$toJSONString() ArrayEndTimestampData$fromJSONString() ArrayEndTimestampData$clone()","code":""},{"path":[]},{"path":"/reference/ArrayEndTimestampData.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayEndTimestampData — ArrayEndTimestampData","text":"","code":"ArrayEndTimestampData$new(   end_timestamps = NULL,   pagination_metadata = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayEndTimestampData.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayEndTimestampData — ArrayEndTimestampData","text":"","code":"ArrayEndTimestampData$toJSON()"},{"path":[]},{"path":"/reference/ArrayEndTimestampData.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayEndTimestampData — ArrayEndTimestampData","text":"","code":"ArrayEndTimestampData$fromJSON(ArrayEndTimestampDataJson)"},{"path":[]},{"path":"/reference/ArrayEndTimestampData.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayEndTimestampData — ArrayEndTimestampData","text":"","code":"ArrayEndTimestampData$toJSONString()"},{"path":[]},{"path":"/reference/ArrayEndTimestampData.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayEndTimestampData — ArrayEndTimestampData","text":"","code":"ArrayEndTimestampData$fromJSONString(ArrayEndTimestampDataJson)"},{"path":"/reference/ArrayEndTimestampData.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArrayEndTimestampData — ArrayEndTimestampData","text":"objects class cloneable method.","code":""},{"path":"/reference/ArrayEndTimestampData.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayEndTimestampData — ArrayEndTimestampData","text":"","code":"ArrayEndTimestampData$clone(deep = FALSE)"},{"path":"/reference/ArrayEndTimestampData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArrayEndTimestampData — ArrayEndTimestampData","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArrayFavorite.html","id":null,"dir":"Reference","previous_headings":"","what":"ArrayFavorite — ArrayFavorite","title":"ArrayFavorite — ArrayFavorite","text":"ArrayFavorite Class","code":""},{"path":"/reference/ArrayFavorite.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArrayFavorite — ArrayFavorite","text":"R6Class generator object","code":""},{"path":"/reference/ArrayFavorite.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ArrayFavorite — ArrayFavorite","text":"id character [optional] created_at character [optional] array_uuid character [optional]","code":""},{"path":[]},{"path":"/reference/ArrayFavorite.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArrayFavorite — ArrayFavorite","text":"ArrayFavorite$new() ArrayFavorite$toJSON() ArrayFavorite$fromJSON() ArrayFavorite$toJSONString() ArrayFavorite$fromJSONString() ArrayFavorite$clone()","code":""},{"path":[]},{"path":"/reference/ArrayFavorite.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayFavorite — ArrayFavorite","text":"","code":"ArrayFavorite$new(id = NULL, created_at = NULL, array_uuid = NULL, ...)"},{"path":[]},{"path":"/reference/ArrayFavorite.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayFavorite — ArrayFavorite","text":"","code":"ArrayFavorite$toJSON()"},{"path":[]},{"path":"/reference/ArrayFavorite.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayFavorite — ArrayFavorite","text":"","code":"ArrayFavorite$fromJSON(ArrayFavoriteJson)"},{"path":[]},{"path":"/reference/ArrayFavorite.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayFavorite — ArrayFavorite","text":"","code":"ArrayFavorite$toJSONString()"},{"path":[]},{"path":"/reference/ArrayFavorite.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayFavorite — ArrayFavorite","text":"","code":"ArrayFavorite$fromJSONString(ArrayFavoriteJson)"},{"path":"/reference/ArrayFavorite.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArrayFavorite — ArrayFavorite","text":"objects class cloneable method.","code":""},{"path":"/reference/ArrayFavorite.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayFavorite — ArrayFavorite","text":"","code":"ArrayFavorite$clone(deep = FALSE)"},{"path":"/reference/ArrayFavorite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArrayFavorite — ArrayFavorite","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArrayFavoritesData.html","id":null,"dir":"Reference","previous_headings":"","what":"ArrayFavoritesData — ArrayFavoritesData","title":"ArrayFavoritesData — ArrayFavoritesData","text":"ArrayFavoritesData Class","code":""},{"path":"/reference/ArrayFavoritesData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArrayFavoritesData — ArrayFavoritesData","text":"R6Class generator object","code":""},{"path":"/reference/ArrayFavoritesData.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ArrayFavoritesData — ArrayFavoritesData","text":"arrays list( ArrayInfo ) [optional] pagination_metadata PaginationMetadata [optional]","code":""},{"path":[]},{"path":"/reference/ArrayFavoritesData.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArrayFavoritesData — ArrayFavoritesData","text":"ArrayFavoritesData$new() ArrayFavoritesData$toJSON() ArrayFavoritesData$fromJSON() ArrayFavoritesData$toJSONString() ArrayFavoritesData$fromJSONString() ArrayFavoritesData$clone()","code":""},{"path":[]},{"path":"/reference/ArrayFavoritesData.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayFavoritesData — ArrayFavoritesData","text":"","code":"ArrayFavoritesData$new(arrays = NULL, pagination_metadata = NULL, ...)"},{"path":[]},{"path":"/reference/ArrayFavoritesData.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayFavoritesData — ArrayFavoritesData","text":"","code":"ArrayFavoritesData$toJSON()"},{"path":[]},{"path":"/reference/ArrayFavoritesData.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayFavoritesData — ArrayFavoritesData","text":"","code":"ArrayFavoritesData$fromJSON(ArrayFavoritesDataJson)"},{"path":[]},{"path":"/reference/ArrayFavoritesData.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayFavoritesData — ArrayFavoritesData","text":"","code":"ArrayFavoritesData$toJSONString()"},{"path":[]},{"path":"/reference/ArrayFavoritesData.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayFavoritesData — ArrayFavoritesData","text":"","code":"ArrayFavoritesData$fromJSONString(ArrayFavoritesDataJson)"},{"path":"/reference/ArrayFavoritesData.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArrayFavoritesData — ArrayFavoritesData","text":"objects class cloneable method.","code":""},{"path":"/reference/ArrayFavoritesData.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayFavoritesData — ArrayFavoritesData","text":"","code":"ArrayFavoritesData$clone(deep = FALSE)"},{"path":"/reference/ArrayFavoritesData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArrayFavoritesData — ArrayFavoritesData","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArrayInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"ArrayInfo — ArrayInfo","title":"ArrayInfo — ArrayInfo","text":"ArrayInfo Class","code":""},{"path":"/reference/ArrayInfo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArrayInfo — ArrayInfo","text":"R6Class generator object","code":""},{"path":"/reference/ArrayInfo.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ArrayInfo — ArrayInfo","text":"id character [optional] file_type FileType [optional] file_properties named list( character ) [optional] uri character [optional] namespace character [optional] size numeric [optional] last_accessed character [optional] description character [optional] name character [optional] allowed_actions list( ArrayActions ) [optional] pricing list( Pricing ) [optional] subscriptions list( Subscription ) [optional] logo character [optional] access_credentials_name character [optional] type character [optional] share_count numeric [optional] public_share character [optional] namespace_subscribed character [optional] tiledb_uri character [optional] tags list( character ) [optional] license_id character [optional] license_text character [optional] read_only character [optional] is_favorite character [optional] favorite_uuid character [optional]","code":""},{"path":[]},{"path":"/reference/ArrayInfo.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArrayInfo — ArrayInfo","text":"ArrayInfo$new() ArrayInfo$toJSON() ArrayInfo$fromJSON() ArrayInfo$toJSONString() ArrayInfo$fromJSONString() ArrayInfo$clone()","code":""},{"path":[]},{"path":"/reference/ArrayInfo.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayInfo — ArrayInfo","text":"","code":"ArrayInfo$new(   id = NULL,   file_type = NULL,   file_properties = NULL,   uri = NULL,   namespace = NULL,   size = NULL,   last_accessed = NULL,   description = NULL,   name = NULL,   allowed_actions = NULL,   pricing = NULL,   subscriptions = NULL,   logo = NULL,   access_credentials_name = NULL,   type = NULL,   share_count = NULL,   public_share = NULL,   namespace_subscribed = NULL,   tiledb_uri = NULL,   tags = NULL,   license_id = NULL,   license_text = NULL,   read_only = NULL,   is_favorite = NULL,   favorite_uuid = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayInfo.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayInfo — ArrayInfo","text":"","code":"ArrayInfo$toJSON()"},{"path":[]},{"path":"/reference/ArrayInfo.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayInfo — ArrayInfo","text":"","code":"ArrayInfo$fromJSON(ArrayInfoJson)"},{"path":[]},{"path":"/reference/ArrayInfo.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayInfo — ArrayInfo","text":"","code":"ArrayInfo$toJSONString()"},{"path":[]},{"path":"/reference/ArrayInfo.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayInfo — ArrayInfo","text":"","code":"ArrayInfo$fromJSONString(ArrayInfoJson)"},{"path":"/reference/ArrayInfo.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArrayInfo — ArrayInfo","text":"objects class cloneable method.","code":""},{"path":"/reference/ArrayInfo.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayInfo — ArrayInfo","text":"","code":"ArrayInfo$clone(deep = FALSE)"},{"path":"/reference/ArrayInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArrayInfo — ArrayInfo","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArrayInfoUpdate.html","id":null,"dir":"Reference","previous_headings":"","what":"ArrayInfoUpdate — ArrayInfoUpdate","title":"ArrayInfoUpdate — ArrayInfoUpdate","text":"ArrayInfoUpdate Class","code":""},{"path":"/reference/ArrayInfoUpdate.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArrayInfoUpdate — ArrayInfoUpdate","text":"R6Class generator object","code":""},{"path":"/reference/ArrayInfoUpdate.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ArrayInfoUpdate — ArrayInfoUpdate","text":"description character [optional] name character [optional] uri character [optional] file_type FileType [optional] file_properties named list( character ) [optional] access_credentials_name character [optional] logo character [optional] tags list( character ) [optional] license_id character [optional] license_text character [optional] read_only character [optional]","code":""},{"path":[]},{"path":"/reference/ArrayInfoUpdate.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArrayInfoUpdate — ArrayInfoUpdate","text":"ArrayInfoUpdate$new() ArrayInfoUpdate$toJSON() ArrayInfoUpdate$fromJSON() ArrayInfoUpdate$toJSONString() ArrayInfoUpdate$fromJSONString() ArrayInfoUpdate$clone()","code":""},{"path":[]},{"path":"/reference/ArrayInfoUpdate.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayInfoUpdate — ArrayInfoUpdate","text":"","code":"ArrayInfoUpdate$new(   description = NULL,   name = NULL,   uri = NULL,   file_type = NULL,   file_properties = NULL,   access_credentials_name = NULL,   logo = NULL,   tags = NULL,   license_id = NULL,   license_text = NULL,   read_only = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayInfoUpdate.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayInfoUpdate — ArrayInfoUpdate","text":"","code":"ArrayInfoUpdate$toJSON()"},{"path":[]},{"path":"/reference/ArrayInfoUpdate.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayInfoUpdate — ArrayInfoUpdate","text":"","code":"ArrayInfoUpdate$fromJSON(ArrayInfoUpdateJson)"},{"path":[]},{"path":"/reference/ArrayInfoUpdate.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayInfoUpdate — ArrayInfoUpdate","text":"","code":"ArrayInfoUpdate$toJSONString()"},{"path":[]},{"path":"/reference/ArrayInfoUpdate.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayInfoUpdate — ArrayInfoUpdate","text":"","code":"ArrayInfoUpdate$fromJSONString(ArrayInfoUpdateJson)"},{"path":"/reference/ArrayInfoUpdate.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArrayInfoUpdate — ArrayInfoUpdate","text":"objects class cloneable method.","code":""},{"path":"/reference/ArrayInfoUpdate.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayInfoUpdate — ArrayInfoUpdate","text":"","code":"ArrayInfoUpdate$clone(deep = FALSE)"},{"path":"/reference/ArrayInfoUpdate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArrayInfoUpdate — ArrayInfoUpdate","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArrayMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"ArrayMetadata — ArrayMetadata","title":"ArrayMetadata — ArrayMetadata","text":"ArrayMetadata Class","code":""},{"path":"/reference/ArrayMetadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArrayMetadata — ArrayMetadata","text":"R6Class generator object","code":""},{"path":"/reference/ArrayMetadata.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ArrayMetadata — ArrayMetadata","text":"entries list( ArrayMetadataEntry ) [optional]","code":""},{"path":[]},{"path":"/reference/ArrayMetadata.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArrayMetadata — ArrayMetadata","text":"ArrayMetadata$new() ArrayMetadata$toJSON() ArrayMetadata$fromJSON() ArrayMetadata$toJSONString() ArrayMetadata$fromJSONString() ArrayMetadata$clone()","code":""},{"path":[]},{"path":"/reference/ArrayMetadata.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayMetadata — ArrayMetadata","text":"","code":"ArrayMetadata$new(entries = NULL, ...)"},{"path":[]},{"path":"/reference/ArrayMetadata.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayMetadata — ArrayMetadata","text":"","code":"ArrayMetadata$toJSON()"},{"path":[]},{"path":"/reference/ArrayMetadata.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayMetadata — ArrayMetadata","text":"","code":"ArrayMetadata$fromJSON(ArrayMetadataJson)"},{"path":[]},{"path":"/reference/ArrayMetadata.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayMetadata — ArrayMetadata","text":"","code":"ArrayMetadata$toJSONString()"},{"path":[]},{"path":"/reference/ArrayMetadata.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayMetadata — ArrayMetadata","text":"","code":"ArrayMetadata$fromJSONString(ArrayMetadataJson)"},{"path":"/reference/ArrayMetadata.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArrayMetadata — ArrayMetadata","text":"objects class cloneable method.","code":""},{"path":"/reference/ArrayMetadata.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayMetadata — ArrayMetadata","text":"","code":"ArrayMetadata$clone(deep = FALSE)"},{"path":"/reference/ArrayMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArrayMetadata — ArrayMetadata","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArrayMetadataEntry.html","id":null,"dir":"Reference","previous_headings":"","what":"ArrayMetadataEntry — ArrayMetadataEntry","title":"ArrayMetadataEntry — ArrayMetadataEntry","text":"ArrayMetadataEntry Class","code":""},{"path":"/reference/ArrayMetadataEntry.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArrayMetadataEntry — ArrayMetadataEntry","text":"R6Class generator object","code":""},{"path":"/reference/ArrayMetadataEntry.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ArrayMetadataEntry — ArrayMetadataEntry","text":"key character [optional] type character [optional] valueNum integer [optional] value list( integer ) [optional] del character [optional]","code":""},{"path":[]},{"path":"/reference/ArrayMetadataEntry.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArrayMetadataEntry — ArrayMetadataEntry","text":"ArrayMetadataEntry$new() ArrayMetadataEntry$toJSON() ArrayMetadataEntry$fromJSON() ArrayMetadataEntry$toJSONString() ArrayMetadataEntry$fromJSONString() ArrayMetadataEntry$clone()","code":""},{"path":[]},{"path":"/reference/ArrayMetadataEntry.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayMetadataEntry — ArrayMetadataEntry","text":"","code":"ArrayMetadataEntry$new(   key = NULL,   type = NULL,   valueNum = NULL,   value = NULL,   del = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayMetadataEntry.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayMetadataEntry — ArrayMetadataEntry","text":"","code":"ArrayMetadataEntry$toJSON()"},{"path":[]},{"path":"/reference/ArrayMetadataEntry.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayMetadataEntry — ArrayMetadataEntry","text":"","code":"ArrayMetadataEntry$fromJSON(ArrayMetadataEntryJson)"},{"path":[]},{"path":"/reference/ArrayMetadataEntry.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayMetadataEntry — ArrayMetadataEntry","text":"","code":"ArrayMetadataEntry$toJSONString()"},{"path":[]},{"path":"/reference/ArrayMetadataEntry.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayMetadataEntry — ArrayMetadataEntry","text":"","code":"ArrayMetadataEntry$fromJSONString(ArrayMetadataEntryJson)"},{"path":"/reference/ArrayMetadataEntry.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArrayMetadataEntry — ArrayMetadataEntry","text":"objects class cloneable method.","code":""},{"path":"/reference/ArrayMetadataEntry.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayMetadataEntry — ArrayMetadataEntry","text":"","code":"ArrayMetadataEntry$clone(deep = FALSE)"},{"path":"/reference/ArrayMetadataEntry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArrayMetadataEntry — ArrayMetadataEntry","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArraySample.html","id":null,"dir":"Reference","previous_headings":"","what":"ArraySample — ArraySample","title":"ArraySample — ArraySample","text":"ArraySample Class","code":""},{"path":"/reference/ArraySample.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArraySample — ArraySample","text":"R6Class generator object","code":""},{"path":"/reference/ArraySample.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ArraySample — ArraySample","text":"data object [optional]","code":""},{"path":[]},{"path":"/reference/ArraySample.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArraySample — ArraySample","text":"ArraySample$new() ArraySample$toJSON() ArraySample$fromJSON() ArraySample$toJSONString() ArraySample$fromJSONString() ArraySample$clone()","code":""},{"path":[]},{"path":"/reference/ArraySample.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArraySample — ArraySample","text":"","code":"ArraySample$new(data = NULL, ...)"},{"path":[]},{"path":"/reference/ArraySample.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArraySample — ArraySample","text":"","code":"ArraySample$toJSON()"},{"path":[]},{"path":"/reference/ArraySample.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArraySample — ArraySample","text":"","code":"ArraySample$fromJSON(ArraySampleJson)"},{"path":[]},{"path":"/reference/ArraySample.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArraySample — ArraySample","text":"","code":"ArraySample$toJSONString()"},{"path":[]},{"path":"/reference/ArraySample.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ArraySample — ArraySample","text":"","code":"ArraySample$fromJSONString(ArraySampleJson)"},{"path":"/reference/ArraySample.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArraySample — ArraySample","text":"objects class cloneable method.","code":""},{"path":"/reference/ArraySample.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ArraySample — ArraySample","text":"","code":"ArraySample$clone(deep = FALSE)"},{"path":"/reference/ArraySample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArraySample — ArraySample","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArraySchema.html","id":null,"dir":"Reference","previous_headings":"","what":"ArraySchema — ArraySchema","title":"ArraySchema — ArraySchema","text":"ArraySchema Class","code":""},{"path":"/reference/ArraySchema.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArraySchema — ArraySchema","text":"R6Class generator object","code":""},{"path":"/reference/ArraySchema.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ArraySchema — ArraySchema","text":"uri character [optional] version list( integer ) arrayType ArrayType tileOrder Layout cellOrder Layout capacity integer coordsFilterPipeline FilterPipeline offsetFilterPipeline FilterPipeline domain Domain attributes list( Attribute ) allowsDuplicates character [optional]","code":""},{"path":[]},{"path":"/reference/ArraySchema.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArraySchema — ArraySchema","text":"ArraySchema$new() ArraySchema$toJSON() ArraySchema$fromJSON() ArraySchema$toJSONString() ArraySchema$fromJSONString() ArraySchema$clone()","code":""},{"path":[]},{"path":"/reference/ArraySchema.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArraySchema — ArraySchema","text":"","code":"ArraySchema$new(   version,   arrayType,   tileOrder,   cellOrder,   capacity,   coordsFilterPipeline,   offsetFilterPipeline,   domain,   attributes,   uri = NULL,   allowsDuplicates = NULL,   ... )"},{"path":[]},{"path":"/reference/ArraySchema.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArraySchema — ArraySchema","text":"","code":"ArraySchema$toJSON()"},{"path":[]},{"path":"/reference/ArraySchema.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArraySchema — ArraySchema","text":"","code":"ArraySchema$fromJSON(ArraySchemaJson)"},{"path":[]},{"path":"/reference/ArraySchema.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArraySchema — ArraySchema","text":"","code":"ArraySchema$toJSONString()"},{"path":[]},{"path":"/reference/ArraySchema.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ArraySchema — ArraySchema","text":"","code":"ArraySchema$fromJSONString(ArraySchemaJson)"},{"path":"/reference/ArraySchema.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArraySchema — ArraySchema","text":"objects class cloneable method.","code":""},{"path":"/reference/ArraySchema.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ArraySchema — ArraySchema","text":"","code":"ArraySchema$clone(deep = FALSE)"},{"path":"/reference/ArraySchema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArraySchema — ArraySchema","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArraySharing.html","id":null,"dir":"Reference","previous_headings":"","what":"ArraySharing — ArraySharing","title":"ArraySharing — ArraySharing","text":"ArraySharing Class","code":""},{"path":"/reference/ArraySharing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArraySharing — ArraySharing","text":"R6Class generator object","code":""},{"path":"/reference/ArraySharing.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ArraySharing — ArraySharing","text":"actions list( ArrayActions ) [optional] namespace character [optional] namespace_type character [optional]","code":""},{"path":[]},{"path":"/reference/ArraySharing.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArraySharing — ArraySharing","text":"ArraySharing$new() ArraySharing$toJSON() ArraySharing$fromJSON() ArraySharing$toJSONString() ArraySharing$fromJSONString() ArraySharing$clone()","code":""},{"path":[]},{"path":"/reference/ArraySharing.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArraySharing — ArraySharing","text":"","code":"ArraySharing$new(actions = NULL, namespace = NULL, namespace_type = NULL, ...)"},{"path":[]},{"path":"/reference/ArraySharing.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArraySharing — ArraySharing","text":"","code":"ArraySharing$toJSON()"},{"path":[]},{"path":"/reference/ArraySharing.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArraySharing — ArraySharing","text":"","code":"ArraySharing$fromJSON(ArraySharingJson)"},{"path":[]},{"path":"/reference/ArraySharing.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArraySharing — ArraySharing","text":"","code":"ArraySharing$toJSONString()"},{"path":[]},{"path":"/reference/ArraySharing.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ArraySharing — ArraySharing","text":"","code":"ArraySharing$fromJSONString(ArraySharingJson)"},{"path":"/reference/ArraySharing.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArraySharing — ArraySharing","text":"objects class cloneable method.","code":""},{"path":"/reference/ArraySharing.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ArraySharing — ArraySharing","text":"","code":"ArraySharing$clone(deep = FALSE)"},{"path":"/reference/ArraySharing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArraySharing — ArraySharing","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArrayTask.html","id":null,"dir":"Reference","previous_headings":"","what":"ArrayTask — ArrayTask","title":"ArrayTask — ArrayTask","text":"ArrayTask Class","code":""},{"path":"/reference/ArrayTask.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArrayTask — ArrayTask","text":"R6Class generator object","code":""},{"path":"/reference/ArrayTask.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ArrayTask — ArrayTask","text":"id character [optional] name character [optional] description character [optional] array_metadata ArrayInfo [optional] subarray DomainArray [optional] memory integer [optional] cpu integer [optional] namespace character [optional] status ArrayTaskStatus [optional] start_time character [optional] finish_time character [optional] cost numeric [optional] egress_cost numeric [optional] access_cost numeric [optional] query_type Querytype [optional] udf_code character [optional] udf_language character [optional] sql_query character [optional] type ArrayTaskType [optional] activity list( ArrayActivityLog ) [optional] logs character [optional] duration numeric [optional] sql_init_commands list( character ) [optional] sql_parameters list( object ) [optional] result_format ResultFormat [optional]","code":""},{"path":[]},{"path":"/reference/ArrayTask.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArrayTask — ArrayTask","text":"ArrayTask$new() ArrayTask$toJSON() ArrayTask$fromJSON() ArrayTask$toJSONString() ArrayTask$fromJSONString() ArrayTask$clone()","code":""},{"path":[]},{"path":"/reference/ArrayTask.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTask — ArrayTask","text":"","code":"ArrayTask$new(   id = NULL,   name = NULL,   description = NULL,   array_metadata = NULL,   subarray = NULL,   memory = NULL,   cpu = NULL,   namespace = NULL,   status = NULL,   start_time = NULL,   finish_time = NULL,   cost = NULL,   egress_cost = NULL,   access_cost = NULL,   query_type = NULL,   udf_code = NULL,   udf_language = NULL,   sql_query = NULL,   type = NULL,   activity = NULL,   logs = NULL,   duration = NULL,   sql_init_commands = NULL,   sql_parameters = NULL,   result_format = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayTask.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTask — ArrayTask","text":"","code":"ArrayTask$toJSON()"},{"path":[]},{"path":"/reference/ArrayTask.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTask — ArrayTask","text":"","code":"ArrayTask$fromJSON(ArrayTaskJson)"},{"path":[]},{"path":"/reference/ArrayTask.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTask — ArrayTask","text":"","code":"ArrayTask$toJSONString()"},{"path":[]},{"path":"/reference/ArrayTask.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTask — ArrayTask","text":"","code":"ArrayTask$fromJSONString(ArrayTaskJson)"},{"path":"/reference/ArrayTask.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArrayTask — ArrayTask","text":"objects class cloneable method.","code":""},{"path":"/reference/ArrayTask.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTask — ArrayTask","text":"","code":"ArrayTask$clone(deep = FALSE)"},{"path":"/reference/ArrayTask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArrayTask — ArrayTask","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArrayTaskBrowserSidebar.html","id":null,"dir":"Reference","previous_headings":"","what":"ArrayTaskBrowserSidebar — ArrayTaskBrowserSidebar","title":"ArrayTaskBrowserSidebar — ArrayTaskBrowserSidebar","text":"ArrayTaskBrowserSidebar Class","code":""},{"path":"/reference/ArrayTaskBrowserSidebar.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArrayTaskBrowserSidebar — ArrayTaskBrowserSidebar","text":"R6Class generator object","code":""},{"path":"/reference/ArrayTaskBrowserSidebar.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ArrayTaskBrowserSidebar — ArrayTaskBrowserSidebar","text":"organizations list( character ) [optional] result_count_for_all integer [optional] result_count_by_namespace object [optional]","code":""},{"path":[]},{"path":"/reference/ArrayTaskBrowserSidebar.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArrayTaskBrowserSidebar — ArrayTaskBrowserSidebar","text":"ArrayTaskBrowserSidebar$new() ArrayTaskBrowserSidebar$toJSON() ArrayTaskBrowserSidebar$fromJSON() ArrayTaskBrowserSidebar$toJSONString() ArrayTaskBrowserSidebar$fromJSONString() ArrayTaskBrowserSidebar$clone()","code":""},{"path":[]},{"path":"/reference/ArrayTaskBrowserSidebar.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskBrowserSidebar — ArrayTaskBrowserSidebar","text":"","code":"ArrayTaskBrowserSidebar$new(   organizations = NULL,   result_count_for_all = NULL,   result_count_by_namespace = NULL,   ... )"},{"path":[]},{"path":"/reference/ArrayTaskBrowserSidebar.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskBrowserSidebar — ArrayTaskBrowserSidebar","text":"","code":"ArrayTaskBrowserSidebar$toJSON()"},{"path":[]},{"path":"/reference/ArrayTaskBrowserSidebar.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskBrowserSidebar — ArrayTaskBrowserSidebar","text":"","code":"ArrayTaskBrowserSidebar$fromJSON(ArrayTaskBrowserSidebarJson)"},{"path":[]},{"path":"/reference/ArrayTaskBrowserSidebar.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskBrowserSidebar — ArrayTaskBrowserSidebar","text":"","code":"ArrayTaskBrowserSidebar$toJSONString()"},{"path":[]},{"path":"/reference/ArrayTaskBrowserSidebar.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskBrowserSidebar — ArrayTaskBrowserSidebar","text":"","code":"ArrayTaskBrowserSidebar$fromJSONString(ArrayTaskBrowserSidebarJson)"},{"path":"/reference/ArrayTaskBrowserSidebar.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArrayTaskBrowserSidebar — ArrayTaskBrowserSidebar","text":"objects class cloneable method.","code":""},{"path":"/reference/ArrayTaskBrowserSidebar.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskBrowserSidebar — ArrayTaskBrowserSidebar","text":"","code":"ArrayTaskBrowserSidebar$clone(deep = FALSE)"},{"path":"/reference/ArrayTaskBrowserSidebar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArrayTaskBrowserSidebar — ArrayTaskBrowserSidebar","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArrayTaskData.html","id":null,"dir":"Reference","previous_headings":"","what":"ArrayTaskData — ArrayTaskData","title":"ArrayTaskData — ArrayTaskData","text":"ArrayTaskData Class","code":""},{"path":"/reference/ArrayTaskData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArrayTaskData — ArrayTaskData","text":"R6Class generator object","code":""},{"path":"/reference/ArrayTaskData.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ArrayTaskData — ArrayTaskData","text":"array_tasks list( ArrayTask ) [optional] pagination_metadata PaginationMetadata [optional]","code":""},{"path":[]},{"path":"/reference/ArrayTaskData.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArrayTaskData — ArrayTaskData","text":"ArrayTaskData$new() ArrayTaskData$toJSON() ArrayTaskData$fromJSON() ArrayTaskData$toJSONString() ArrayTaskData$fromJSONString() ArrayTaskData$clone()","code":""},{"path":[]},{"path":"/reference/ArrayTaskData.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskData — ArrayTaskData","text":"","code":"ArrayTaskData$new(array_tasks = NULL, pagination_metadata = NULL, ...)"},{"path":[]},{"path":"/reference/ArrayTaskData.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskData — ArrayTaskData","text":"","code":"ArrayTaskData$toJSON()"},{"path":[]},{"path":"/reference/ArrayTaskData.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskData — ArrayTaskData","text":"","code":"ArrayTaskData$fromJSON(ArrayTaskDataJson)"},{"path":[]},{"path":"/reference/ArrayTaskData.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskData — ArrayTaskData","text":"","code":"ArrayTaskData$toJSONString()"},{"path":[]},{"path":"/reference/ArrayTaskData.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskData — ArrayTaskData","text":"","code":"ArrayTaskData$fromJSONString(ArrayTaskDataJson)"},{"path":"/reference/ArrayTaskData.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArrayTaskData — ArrayTaskData","text":"objects class cloneable method.","code":""},{"path":"/reference/ArrayTaskData.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskData — ArrayTaskData","text":"","code":"ArrayTaskData$clone(deep = FALSE)"},{"path":"/reference/ArrayTaskData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArrayTaskData — ArrayTaskData","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArrayTaskLog.html","id":null,"dir":"Reference","previous_headings":"","what":"ArrayTaskLog — ArrayTaskLog","title":"ArrayTaskLog — ArrayTaskLog","text":"ArrayTaskLog Class","code":""},{"path":"/reference/ArrayTaskLog.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArrayTaskLog — ArrayTaskLog","text":"R6Class generator object","code":""},{"path":"/reference/ArrayTaskLog.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ArrayTaskLog — ArrayTaskLog","text":"array_task_id character [optional] logs character [optional]","code":""},{"path":[]},{"path":"/reference/ArrayTaskLog.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArrayTaskLog — ArrayTaskLog","text":"ArrayTaskLog$new() ArrayTaskLog$toJSON() ArrayTaskLog$fromJSON() ArrayTaskLog$toJSONString() ArrayTaskLog$fromJSONString() ArrayTaskLog$clone()","code":""},{"path":[]},{"path":"/reference/ArrayTaskLog.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskLog — ArrayTaskLog","text":"","code":"ArrayTaskLog$new(array_task_id = NULL, logs = NULL, ...)"},{"path":[]},{"path":"/reference/ArrayTaskLog.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskLog — ArrayTaskLog","text":"","code":"ArrayTaskLog$toJSON()"},{"path":[]},{"path":"/reference/ArrayTaskLog.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskLog — ArrayTaskLog","text":"","code":"ArrayTaskLog$fromJSON(ArrayTaskLogJson)"},{"path":[]},{"path":"/reference/ArrayTaskLog.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskLog — ArrayTaskLog","text":"","code":"ArrayTaskLog$toJSONString()"},{"path":[]},{"path":"/reference/ArrayTaskLog.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskLog — ArrayTaskLog","text":"","code":"ArrayTaskLog$fromJSONString(ArrayTaskLogJson)"},{"path":"/reference/ArrayTaskLog.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArrayTaskLog — ArrayTaskLog","text":"objects class cloneable method.","code":""},{"path":"/reference/ArrayTaskLog.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskLog — ArrayTaskLog","text":"","code":"ArrayTaskLog$clone(deep = FALSE)"},{"path":"/reference/ArrayTaskLog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArrayTaskLog — ArrayTaskLog","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArrayTaskStatus.html","id":null,"dir":"Reference","previous_headings":"","what":"ArrayTaskStatus — ArrayTaskStatus","title":"ArrayTaskStatus — ArrayTaskStatus","text":"ArrayTaskStatus Class","code":""},{"path":"/reference/ArrayTaskStatus.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArrayTaskStatus — ArrayTaskStatus","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/ArrayTaskStatus.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArrayTaskStatus — ArrayTaskStatus","text":"ArrayTaskStatus$new() ArrayTaskStatus$toJSON() ArrayTaskStatus$fromJSON() ArrayTaskStatus$toJSONString() ArrayTaskStatus$fromJSONString() ArrayTaskStatus$clone()","code":""},{"path":[]},{"path":"/reference/ArrayTaskStatus.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskStatus — ArrayTaskStatus","text":"","code":"ArrayTaskStatus$new(...)"},{"path":[]},{"path":"/reference/ArrayTaskStatus.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskStatus — ArrayTaskStatus","text":"","code":"ArrayTaskStatus$toJSON()"},{"path":[]},{"path":"/reference/ArrayTaskStatus.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskStatus — ArrayTaskStatus","text":"","code":"ArrayTaskStatus$fromJSON(ArrayTaskStatusJson)"},{"path":[]},{"path":"/reference/ArrayTaskStatus.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskStatus — ArrayTaskStatus","text":"","code":"ArrayTaskStatus$toJSONString()"},{"path":[]},{"path":"/reference/ArrayTaskStatus.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskStatus — ArrayTaskStatus","text":"","code":"ArrayTaskStatus$fromJSONString(ArrayTaskStatusJson)"},{"path":"/reference/ArrayTaskStatus.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArrayTaskStatus — ArrayTaskStatus","text":"objects class cloneable method.","code":""},{"path":"/reference/ArrayTaskStatus.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskStatus — ArrayTaskStatus","text":"","code":"ArrayTaskStatus$clone(deep = FALSE)"},{"path":"/reference/ArrayTaskStatus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArrayTaskStatus — ArrayTaskStatus","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArrayTaskType.html","id":null,"dir":"Reference","previous_headings":"","what":"ArrayTaskType — ArrayTaskType","title":"ArrayTaskType — ArrayTaskType","text":"ArrayTaskType Class","code":""},{"path":"/reference/ArrayTaskType.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArrayTaskType — ArrayTaskType","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/ArrayTaskType.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArrayTaskType — ArrayTaskType","text":"ArrayTaskType$new() ArrayTaskType$toJSON() ArrayTaskType$fromJSON() ArrayTaskType$toJSONString() ArrayTaskType$fromJSONString() ArrayTaskType$clone()","code":""},{"path":[]},{"path":"/reference/ArrayTaskType.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskType — ArrayTaskType","text":"","code":"ArrayTaskType$new(...)"},{"path":[]},{"path":"/reference/ArrayTaskType.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskType — ArrayTaskType","text":"","code":"ArrayTaskType$toJSON()"},{"path":[]},{"path":"/reference/ArrayTaskType.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskType — ArrayTaskType","text":"","code":"ArrayTaskType$fromJSON(ArrayTaskTypeJson)"},{"path":[]},{"path":"/reference/ArrayTaskType.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskType — ArrayTaskType","text":"","code":"ArrayTaskType$toJSONString()"},{"path":[]},{"path":"/reference/ArrayTaskType.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskType — ArrayTaskType","text":"","code":"ArrayTaskType$fromJSONString(ArrayTaskTypeJson)"},{"path":"/reference/ArrayTaskType.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArrayTaskType — ArrayTaskType","text":"objects class cloneable method.","code":""},{"path":"/reference/ArrayTaskType.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTaskType — ArrayTaskType","text":"","code":"ArrayTaskType$clone(deep = FALSE)"},{"path":"/reference/ArrayTaskType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArrayTaskType — ArrayTaskType","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArrayTasksApi.html","id":null,"dir":"Reference","previous_headings":"","what":"ArrayTasks operations — ArrayTasksApi","title":"ArrayTasks operations — ArrayTasksApi","text":"tiledbcloud.ArrayTasks","code":""},{"path":"/reference/ArrayTasksApi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArrayTasks operations — ArrayTasksApi","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/ArrayTasksApi.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ArrayTasks operations — ArrayTasksApi","text":"apiClient Handles client-server communication.","code":""},{"path":[]},{"path":"/reference/ArrayTasksApi.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArrayTasks operations — ArrayTasksApi","text":"ArrayTasksApi$new() ArrayTasksApi$GetArrayTasksSidebar() ArrayTasksApi$GetArrayTasksSidebarWithHttpInfo() ArrayTasksApi$clone()","code":""},{"path":[]},{"path":"/reference/ArrayTasksApi.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTasks operations — ArrayTasksApi","text":"","code":"ArrayTasksApi$new(apiClient)"},{"path":[]},{"path":"/reference/ArrayTasksApi.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTasks operations — ArrayTasksApi","text":"","code":"ArrayTasksApi$GetArrayTasksSidebar(start = NULL, end = NULL, ...)"},{"path":[]},{"path":"/reference/ArrayTasksApi.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTasks operations — ArrayTasksApi","text":"","code":"ArrayTasksApi$GetArrayTasksSidebarWithHttpInfo(start = NULL, end = NULL, ...)"},{"path":"/reference/ArrayTasksApi.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArrayTasks operations — ArrayTasksApi","text":"objects class cloneable method.","code":""},{"path":"/reference/ArrayTasksApi.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayTasks operations — ArrayTasksApi","text":"","code":"ArrayTasksApi$clone(deep = FALSE)"},{"path":"/reference/ArrayTasksApi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArrayTasks operations — ArrayTasksApi","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ArrayTasksApi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ArrayTasks operations — ArrayTasksApi","text":"","code":"if (FALSE) { ####################  GetArrayTasksSidebar  ####################  library(tiledbcloud) var.start <- 56 # integer | Fetch tasks created after this time, unix epoch in seconds, default 7 days ago var.end <- 56 # integer | Fetch tasks created before this time, unix epoch in seconds, default now  api.instance <- ArrayTasksApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetArrayTasksSidebar(start=var.start, end=var.end)   }"},{"path":"/reference/ArrayType.html","id":null,"dir":"Reference","previous_headings":"","what":"ArrayType — ArrayType","title":"ArrayType — ArrayType","text":"ArrayType Class","code":""},{"path":"/reference/ArrayType.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ArrayType — ArrayType","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/ArrayType.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ArrayType — ArrayType","text":"ArrayType$new() ArrayType$toJSON() ArrayType$fromJSON() ArrayType$toJSONString() ArrayType$fromJSONString() ArrayType$clone()","code":""},{"path":[]},{"path":"/reference/ArrayType.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayType — ArrayType","text":"","code":"ArrayType$new(...)"},{"path":[]},{"path":"/reference/ArrayType.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayType — ArrayType","text":"","code":"ArrayType$toJSON()"},{"path":[]},{"path":"/reference/ArrayType.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayType — ArrayType","text":"","code":"ArrayType$fromJSON(ArrayTypeJson)"},{"path":[]},{"path":"/reference/ArrayType.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayType — ArrayType","text":"","code":"ArrayType$toJSONString()"},{"path":[]},{"path":"/reference/ArrayType.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayType — ArrayType","text":"","code":"ArrayType$fromJSONString(ArrayTypeJson)"},{"path":"/reference/ArrayType.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ArrayType — ArrayType","text":"objects class cloneable method.","code":""},{"path":"/reference/ArrayType.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ArrayType — ArrayType","text":"","code":"ArrayType$clone(deep = FALSE)"},{"path":"/reference/ArrayType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ArrayType — ArrayType","text":"deep Whether make deep clone.","code":""},{"path":"/reference/Attribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Attribute — Attribute","title":"Attribute — Attribute","text":"Attribute Class","code":""},{"path":"/reference/Attribute.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Attribute — Attribute","text":"R6Class generator object","code":""},{"path":"/reference/Attribute.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Attribute — Attribute","text":"name character type Datatype filterPipeline FilterPipeline cellValNum integer fillValue list( integer ) [optional]","code":""},{"path":[]},{"path":"/reference/Attribute.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Attribute — Attribute","text":"Attribute$new() Attribute$toJSON() Attribute$fromJSON() Attribute$toJSONString() Attribute$fromJSONString() Attribute$clone()","code":""},{"path":[]},{"path":"/reference/Attribute.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attribute — Attribute","text":"","code":"Attribute$new(name, type, filterPipeline, cellValNum, fillValue = NULL, ...)"},{"path":[]},{"path":"/reference/Attribute.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Attribute — Attribute","text":"","code":"Attribute$toJSON()"},{"path":[]},{"path":"/reference/Attribute.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Attribute — Attribute","text":"","code":"Attribute$fromJSON(AttributeJson)"},{"path":[]},{"path":"/reference/Attribute.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Attribute — Attribute","text":"","code":"Attribute$toJSONString()"},{"path":[]},{"path":"/reference/Attribute.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Attribute — Attribute","text":"","code":"Attribute$fromJSONString(AttributeJson)"},{"path":"/reference/Attribute.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Attribute — Attribute","text":"objects class cloneable method.","code":""},{"path":"/reference/Attribute.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Attribute — Attribute","text":"","code":"Attribute$clone(deep = FALSE)"},{"path":"/reference/Attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attribute — Attribute","text":"deep Whether make deep clone.","code":""},{"path":"/reference/AttributeBufferHeader.html","id":null,"dir":"Reference","previous_headings":"","what":"AttributeBufferHeader — AttributeBufferHeader","title":"AttributeBufferHeader — AttributeBufferHeader","text":"AttributeBufferHeader Class","code":""},{"path":"/reference/AttributeBufferHeader.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"AttributeBufferHeader — AttributeBufferHeader","text":"R6Class generator object","code":""},{"path":"/reference/AttributeBufferHeader.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"AttributeBufferHeader — AttributeBufferHeader","text":"name character fixedLenBufferSizeInBytes integer varLenBufferSizeInBytes integer","code":""},{"path":[]},{"path":"/reference/AttributeBufferHeader.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"AttributeBufferHeader — AttributeBufferHeader","text":"AttributeBufferHeader$new() AttributeBufferHeader$toJSON() AttributeBufferHeader$fromJSON() AttributeBufferHeader$toJSONString() AttributeBufferHeader$fromJSONString() AttributeBufferHeader$clone()","code":""},{"path":[]},{"path":"/reference/AttributeBufferHeader.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AttributeBufferHeader — AttributeBufferHeader","text":"","code":"AttributeBufferHeader$new(   name,   fixedLenBufferSizeInBytes,   varLenBufferSizeInBytes,   ... )"},{"path":[]},{"path":"/reference/AttributeBufferHeader.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"AttributeBufferHeader — AttributeBufferHeader","text":"","code":"AttributeBufferHeader$toJSON()"},{"path":[]},{"path":"/reference/AttributeBufferHeader.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"AttributeBufferHeader — AttributeBufferHeader","text":"","code":"AttributeBufferHeader$fromJSON(AttributeBufferHeaderJson)"},{"path":[]},{"path":"/reference/AttributeBufferHeader.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"AttributeBufferHeader — AttributeBufferHeader","text":"","code":"AttributeBufferHeader$toJSONString()"},{"path":[]},{"path":"/reference/AttributeBufferHeader.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"AttributeBufferHeader — AttributeBufferHeader","text":"","code":"AttributeBufferHeader$fromJSONString(AttributeBufferHeaderJson)"},{"path":"/reference/AttributeBufferHeader.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"AttributeBufferHeader — AttributeBufferHeader","text":"objects class cloneable method.","code":""},{"path":"/reference/AttributeBufferHeader.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"AttributeBufferHeader — AttributeBufferHeader","text":"","code":"AttributeBufferHeader$clone(deep = FALSE)"},{"path":"/reference/AttributeBufferHeader.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AttributeBufferHeader — AttributeBufferHeader","text":"deep Whether make deep clone.","code":""},{"path":"/reference/AttributeBufferSize.html","id":null,"dir":"Reference","previous_headings":"","what":"AttributeBufferSize — AttributeBufferSize","title":"AttributeBufferSize — AttributeBufferSize","text":"AttributeBufferSize Class","code":""},{"path":"/reference/AttributeBufferSize.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"AttributeBufferSize — AttributeBufferSize","text":"R6Class generator object","code":""},{"path":"/reference/AttributeBufferSize.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"AttributeBufferSize — AttributeBufferSize","text":"attribute character offsetBytes integer dataBytes integer","code":""},{"path":[]},{"path":"/reference/AttributeBufferSize.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"AttributeBufferSize — AttributeBufferSize","text":"AttributeBufferSize$new() AttributeBufferSize$toJSON() AttributeBufferSize$fromJSON() AttributeBufferSize$toJSONString() AttributeBufferSize$fromJSONString() AttributeBufferSize$clone()","code":""},{"path":[]},{"path":"/reference/AttributeBufferSize.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AttributeBufferSize — AttributeBufferSize","text":"","code":"AttributeBufferSize$new(attribute, offsetBytes, dataBytes, ...)"},{"path":[]},{"path":"/reference/AttributeBufferSize.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"AttributeBufferSize — AttributeBufferSize","text":"","code":"AttributeBufferSize$toJSON()"},{"path":[]},{"path":"/reference/AttributeBufferSize.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"AttributeBufferSize — AttributeBufferSize","text":"","code":"AttributeBufferSize$fromJSON(AttributeBufferSizeJson)"},{"path":[]},{"path":"/reference/AttributeBufferSize.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"AttributeBufferSize — AttributeBufferSize","text":"","code":"AttributeBufferSize$toJSONString()"},{"path":[]},{"path":"/reference/AttributeBufferSize.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"AttributeBufferSize — AttributeBufferSize","text":"","code":"AttributeBufferSize$fromJSONString(AttributeBufferSizeJson)"},{"path":"/reference/AttributeBufferSize.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"AttributeBufferSize — AttributeBufferSize","text":"objects class cloneable method.","code":""},{"path":"/reference/AttributeBufferSize.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"AttributeBufferSize — AttributeBufferSize","text":"","code":"AttributeBufferSize$clone(deep = FALSE)"},{"path":"/reference/AttributeBufferSize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AttributeBufferSize — AttributeBufferSize","text":"deep Whether make deep clone.","code":""},{"path":"/reference/Datatype.html","id":null,"dir":"Reference","previous_headings":"","what":"Datatype — Datatype","title":"Datatype — Datatype","text":"Datatype Class","code":""},{"path":"/reference/Datatype.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Datatype — Datatype","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/Datatype.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Datatype — Datatype","text":"Datatype$new() Datatype$toJSON() Datatype$fromJSON() Datatype$toJSONString() Datatype$fromJSONString() Datatype$clone()","code":""},{"path":[]},{"path":"/reference/Datatype.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Datatype — Datatype","text":"","code":"Datatype$new(...)"},{"path":[]},{"path":"/reference/Datatype.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Datatype — Datatype","text":"","code":"Datatype$toJSON()"},{"path":[]},{"path":"/reference/Datatype.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Datatype — Datatype","text":"","code":"Datatype$fromJSON(DatatypeJson)"},{"path":[]},{"path":"/reference/Datatype.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Datatype — Datatype","text":"","code":"Datatype$toJSONString()"},{"path":[]},{"path":"/reference/Datatype.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Datatype — Datatype","text":"","code":"Datatype$fromJSONString(DatatypeJson)"},{"path":"/reference/Datatype.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Datatype — Datatype","text":"objects class cloneable method.","code":""},{"path":"/reference/Datatype.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Datatype — Datatype","text":"","code":"Datatype$clone(deep = FALSE)"},{"path":"/reference/Datatype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Datatype — Datatype","text":"deep Whether make deep clone.","code":""},{"path":"/reference/Dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimension — Dimension","title":"Dimension — Dimension","text":"Dimension Class","code":""},{"path":"/reference/Dimension.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dimension — Dimension","text":"R6Class generator object","code":""},{"path":"/reference/Dimension.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Dimension — Dimension","text":"name character [optional] type Datatype domain DomainArray nullTileExtent character tileExtent DimensionTileExtent [optional] filterPipeline FilterPipeline [optional]","code":""},{"path":[]},{"path":"/reference/Dimension.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Dimension — Dimension","text":"Dimension$new() Dimension$toJSON() Dimension$fromJSON() Dimension$toJSONString() Dimension$fromJSONString() Dimension$clone()","code":""},{"path":[]},{"path":"/reference/Dimension.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimension — Dimension","text":"","code":"Dimension$new(   type,   domain,   nullTileExtent,   name = NULL,   tileExtent = NULL,   filterPipeline = NULL,   ... )"},{"path":[]},{"path":"/reference/Dimension.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimension — Dimension","text":"","code":"Dimension$toJSON()"},{"path":[]},{"path":"/reference/Dimension.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimension — Dimension","text":"","code":"Dimension$fromJSON(DimensionJson)"},{"path":[]},{"path":"/reference/Dimension.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimension — Dimension","text":"","code":"Dimension$toJSONString()"},{"path":[]},{"path":"/reference/Dimension.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimension — Dimension","text":"","code":"Dimension$fromJSONString(DimensionJson)"},{"path":"/reference/Dimension.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Dimension — Dimension","text":"objects class cloneable method.","code":""},{"path":"/reference/Dimension.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimension — Dimension","text":"","code":"Dimension$clone(deep = FALSE)"},{"path":"/reference/Dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimension — Dimension","text":"deep Whether make deep clone.","code":""},{"path":"/reference/DimensionCoordinate.html","id":null,"dir":"Reference","previous_headings":"","what":"DimensionCoordinate — DimensionCoordinate","title":"DimensionCoordinate — DimensionCoordinate","text":"DimensionCoordinate Class","code":""},{"path":"/reference/DimensionCoordinate.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DimensionCoordinate — DimensionCoordinate","text":"R6Class generator object","code":""},{"path":"/reference/DimensionCoordinate.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"DimensionCoordinate — DimensionCoordinate","text":"int8 integer [optional] uint8 integer [optional] int16 integer [optional] uint16 integer [optional] int32 integer [optional] uint32 integer [optional] int64 integer [optional] uint64 integer [optional] float32 numeric [optional] float64 numeric [optional]","code":""},{"path":[]},{"path":"/reference/DimensionCoordinate.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"DimensionCoordinate — DimensionCoordinate","text":"DimensionCoordinate$new() DimensionCoordinate$toJSON() DimensionCoordinate$fromJSON() DimensionCoordinate$toJSONString() DimensionCoordinate$fromJSONString() DimensionCoordinate$clone()","code":""},{"path":[]},{"path":"/reference/DimensionCoordinate.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DimensionCoordinate — DimensionCoordinate","text":"","code":"DimensionCoordinate$new(   int8 = NULL,   uint8 = NULL,   int16 = NULL,   uint16 = NULL,   int32 = NULL,   uint32 = NULL,   int64 = NULL,   uint64 = NULL,   float32 = NULL,   float64 = NULL,   ... )"},{"path":[]},{"path":"/reference/DimensionCoordinate.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"DimensionCoordinate — DimensionCoordinate","text":"","code":"DimensionCoordinate$toJSON()"},{"path":[]},{"path":"/reference/DimensionCoordinate.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"DimensionCoordinate — DimensionCoordinate","text":"","code":"DimensionCoordinate$fromJSON(DimensionCoordinateJson)"},{"path":[]},{"path":"/reference/DimensionCoordinate.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"DimensionCoordinate — DimensionCoordinate","text":"","code":"DimensionCoordinate$toJSONString()"},{"path":[]},{"path":"/reference/DimensionCoordinate.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"DimensionCoordinate — DimensionCoordinate","text":"","code":"DimensionCoordinate$fromJSONString(DimensionCoordinateJson)"},{"path":"/reference/DimensionCoordinate.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"DimensionCoordinate — DimensionCoordinate","text":"objects class cloneable method.","code":""},{"path":"/reference/DimensionCoordinate.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"DimensionCoordinate — DimensionCoordinate","text":"","code":"DimensionCoordinate$clone(deep = FALSE)"},{"path":"/reference/DimensionCoordinate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DimensionCoordinate — DimensionCoordinate","text":"deep Whether make deep clone.","code":""},{"path":"/reference/DimensionTileExtent.html","id":null,"dir":"Reference","previous_headings":"","what":"DimensionTileExtent — DimensionTileExtent","title":"DimensionTileExtent — DimensionTileExtent","text":"DimensionTileExtent Class","code":""},{"path":"/reference/DimensionTileExtent.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DimensionTileExtent — DimensionTileExtent","text":"R6Class generator object","code":""},{"path":"/reference/DimensionTileExtent.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"DimensionTileExtent — DimensionTileExtent","text":"int8 integer [optional] uint8 integer [optional] int16 integer [optional] uint16 integer [optional] int32 integer [optional] uint32 integer [optional] int64 integer [optional] uint64 integer [optional] float32 integer [optional] float64 integer [optional]","code":""},{"path":[]},{"path":"/reference/DimensionTileExtent.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"DimensionTileExtent — DimensionTileExtent","text":"DimensionTileExtent$new() DimensionTileExtent$toJSON() DimensionTileExtent$fromJSON() DimensionTileExtent$toJSONString() DimensionTileExtent$fromJSONString() DimensionTileExtent$clone()","code":""},{"path":[]},{"path":"/reference/DimensionTileExtent.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DimensionTileExtent — DimensionTileExtent","text":"","code":"DimensionTileExtent$new(   int8 = NULL,   uint8 = NULL,   int16 = NULL,   uint16 = NULL,   int32 = NULL,   uint32 = NULL,   int64 = NULL,   uint64 = NULL,   float32 = NULL,   float64 = NULL,   ... )"},{"path":[]},{"path":"/reference/DimensionTileExtent.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"DimensionTileExtent — DimensionTileExtent","text":"","code":"DimensionTileExtent$toJSON()"},{"path":[]},{"path":"/reference/DimensionTileExtent.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"DimensionTileExtent — DimensionTileExtent","text":"","code":"DimensionTileExtent$fromJSON(DimensionTileExtentJson)"},{"path":[]},{"path":"/reference/DimensionTileExtent.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"DimensionTileExtent — DimensionTileExtent","text":"","code":"DimensionTileExtent$toJSONString()"},{"path":[]},{"path":"/reference/DimensionTileExtent.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"DimensionTileExtent — DimensionTileExtent","text":"","code":"DimensionTileExtent$fromJSONString(DimensionTileExtentJson)"},{"path":"/reference/DimensionTileExtent.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"DimensionTileExtent — DimensionTileExtent","text":"objects class cloneable method.","code":""},{"path":"/reference/DimensionTileExtent.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"DimensionTileExtent — DimensionTileExtent","text":"","code":"DimensionTileExtent$clone(deep = FALSE)"},{"path":"/reference/DimensionTileExtent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DimensionTileExtent — DimensionTileExtent","text":"deep Whether make deep clone.","code":""},{"path":"/reference/Domain.html","id":null,"dir":"Reference","previous_headings":"","what":"Domain — Domain","title":"Domain — Domain","text":"Domain Class","code":""},{"path":"/reference/Domain.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Domain — Domain","text":"R6Class generator object","code":""},{"path":"/reference/Domain.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Domain — Domain","text":"type Datatype tileOrder Layout cellOrder Layout dimensions list( Dimension )","code":""},{"path":[]},{"path":"/reference/Domain.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Domain — Domain","text":"Domain$new() Domain$toJSON() Domain$fromJSON() Domain$toJSONString() Domain$fromJSONString() Domain$clone()","code":""},{"path":[]},{"path":"/reference/Domain.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Domain — Domain","text":"","code":"Domain$new(type, tileOrder, cellOrder, dimensions, ...)"},{"path":[]},{"path":"/reference/Domain.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Domain — Domain","text":"","code":"Domain$toJSON()"},{"path":[]},{"path":"/reference/Domain.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Domain — Domain","text":"","code":"Domain$fromJSON(DomainJson)"},{"path":[]},{"path":"/reference/Domain.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Domain — Domain","text":"","code":"Domain$toJSONString()"},{"path":[]},{"path":"/reference/Domain.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Domain — Domain","text":"","code":"Domain$fromJSONString(DomainJson)"},{"path":"/reference/Domain.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Domain — Domain","text":"objects class cloneable method.","code":""},{"path":"/reference/Domain.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Domain — Domain","text":"","code":"Domain$clone(deep = FALSE)"},{"path":"/reference/Domain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Domain — Domain","text":"deep Whether make deep clone.","code":""},{"path":"/reference/DomainArray.html","id":null,"dir":"Reference","previous_headings":"","what":"DomainArray — DomainArray","title":"DomainArray — DomainArray","text":"DomainArray Class","code":""},{"path":"/reference/DomainArray.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DomainArray — DomainArray","text":"R6Class generator object","code":""},{"path":"/reference/DomainArray.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"DomainArray — DomainArray","text":"int8 list( integer ) [optional] uint8 list( integer ) [optional] int16 list( integer ) [optional] uint16 list( integer ) [optional] int32 list( integer ) [optional] uint32 list( integer ) [optional] int64 list( integer ) [optional] uint64 list( integer ) [optional] float32 list( numeric ) [optional] float64 list( numeric ) [optional]","code":""},{"path":[]},{"path":"/reference/DomainArray.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"DomainArray — DomainArray","text":"DomainArray$new() DomainArray$toJSON() DomainArray$fromJSON() DomainArray$toJSONString() DomainArray$fromJSONString() DomainArray$clone()","code":""},{"path":[]},{"path":"/reference/DomainArray.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DomainArray — DomainArray","text":"","code":"DomainArray$new(   int8 = NULL,   uint8 = NULL,   int16 = NULL,   uint16 = NULL,   int32 = NULL,   uint32 = NULL,   int64 = NULL,   uint64 = NULL,   float32 = NULL,   float64 = NULL,   ... )"},{"path":[]},{"path":"/reference/DomainArray.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"DomainArray — DomainArray","text":"","code":"DomainArray$toJSON()"},{"path":[]},{"path":"/reference/DomainArray.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"DomainArray — DomainArray","text":"","code":"DomainArray$fromJSON(DomainArrayJson)"},{"path":[]},{"path":"/reference/DomainArray.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"DomainArray — DomainArray","text":"","code":"DomainArray$toJSONString()"},{"path":[]},{"path":"/reference/DomainArray.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"DomainArray — DomainArray","text":"","code":"DomainArray$fromJSONString(DomainArrayJson)"},{"path":"/reference/DomainArray.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"DomainArray — DomainArray","text":"objects class cloneable method.","code":""},{"path":"/reference/DomainArray.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"DomainArray — DomainArray","text":"","code":"DomainArray$clone(deep = FALSE)"},{"path":"/reference/DomainArray.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DomainArray — DomainArray","text":"deep Whether make deep clone.","code":""},{"path":"/reference/Error.html","id":null,"dir":"Reference","previous_headings":"","what":"Error — Error","title":"Error — Error","text":"Error Class","code":""},{"path":"/reference/Error.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Error — Error","text":"R6Class generator object","code":""},{"path":"/reference/Error.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Error — Error","text":"code integer [optional] message character [optional] request_id character [optional]","code":""},{"path":[]},{"path":"/reference/Error.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Error — Error","text":"Error$new() Error$toJSON() Error$fromJSON() Error$toJSONString() Error$fromJSONString() Error$clone()","code":""},{"path":[]},{"path":"/reference/Error.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error — Error","text":"","code":"Error$new(code = NULL, message = NULL, request_id = NULL, ...)"},{"path":[]},{"path":"/reference/Error.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Error — Error","text":"","code":"Error$toJSON()"},{"path":[]},{"path":"/reference/Error.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Error — Error","text":"","code":"Error$fromJSON(ErrorJson)"},{"path":[]},{"path":"/reference/Error.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Error — Error","text":"","code":"Error$toJSONString()"},{"path":[]},{"path":"/reference/Error.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Error — Error","text":"","code":"Error$fromJSONString(ErrorJson)"},{"path":"/reference/Error.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Error — Error","text":"objects class cloneable method.","code":""},{"path":"/reference/Error.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Error — Error","text":"","code":"Error$clone(deep = FALSE)"},{"path":"/reference/Error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error — Error","text":"deep Whether make deep clone.","code":""},{"path":"/reference/FavoriteCreate.html","id":null,"dir":"Reference","previous_headings":"","what":"FavoriteCreate — FavoriteCreate","title":"FavoriteCreate — FavoriteCreate","text":"FavoriteCreate Class","code":""},{"path":"/reference/FavoriteCreate.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"FavoriteCreate — FavoriteCreate","text":"R6Class generator object","code":""},{"path":"/reference/FavoriteCreate.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"FavoriteCreate — FavoriteCreate","text":"name character namespace character","code":""},{"path":[]},{"path":"/reference/FavoriteCreate.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FavoriteCreate — FavoriteCreate","text":"FavoriteCreate$new() FavoriteCreate$toJSON() FavoriteCreate$fromJSON() FavoriteCreate$toJSONString() FavoriteCreate$fromJSONString() FavoriteCreate$clone()","code":""},{"path":[]},{"path":"/reference/FavoriteCreate.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FavoriteCreate — FavoriteCreate","text":"","code":"FavoriteCreate$new(name, namespace, ...)"},{"path":[]},{"path":"/reference/FavoriteCreate.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FavoriteCreate — FavoriteCreate","text":"","code":"FavoriteCreate$toJSON()"},{"path":[]},{"path":"/reference/FavoriteCreate.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FavoriteCreate — FavoriteCreate","text":"","code":"FavoriteCreate$fromJSON(FavoriteCreateJson)"},{"path":[]},{"path":"/reference/FavoriteCreate.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"FavoriteCreate — FavoriteCreate","text":"","code":"FavoriteCreate$toJSONString()"},{"path":[]},{"path":"/reference/FavoriteCreate.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"FavoriteCreate — FavoriteCreate","text":"","code":"FavoriteCreate$fromJSONString(FavoriteCreateJson)"},{"path":"/reference/FavoriteCreate.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FavoriteCreate — FavoriteCreate","text":"objects class cloneable method.","code":""},{"path":"/reference/FavoriteCreate.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"FavoriteCreate — FavoriteCreate","text":"","code":"FavoriteCreate$clone(deep = FALSE)"},{"path":"/reference/FavoriteCreate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FavoriteCreate — FavoriteCreate","text":"deep Whether make deep clone.","code":""},{"path":"/reference/FavoritesApi.html","id":null,"dir":"Reference","previous_headings":"","what":"Favorites operations — FavoritesApi","title":"Favorites operations — FavoritesApi","text":"tiledbcloud.Favorites","code":""},{"path":"/reference/FavoritesApi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Favorites operations — FavoritesApi","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Favorites operations — FavoritesApi","text":"apiClient Handles client-server communication.","code":""},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Favorites operations — FavoritesApi","text":"FavoritesApi$new() FavoritesApi$AddArrayFavorite() FavoritesApi$AddArrayFavoriteWithHttpInfo() FavoritesApi$AddMLModelFavorite() FavoritesApi$AddMLModelFavoriteWithHttpInfo() FavoritesApi$AddNotebookFavorite() FavoritesApi$AddNotebookFavoriteWithHttpInfo() FavoritesApi$AddUDFFavorite() FavoritesApi$AddUDFFavoriteWithHttpInfo() FavoritesApi$DeleteArrayFavorite() FavoritesApi$DeleteArrayFavoriteWithHttpInfo() FavoritesApi$DeleteMLModelFavorite() FavoritesApi$DeleteMLModelFavoriteWithHttpInfo() FavoritesApi$DeleteNotebookFavorite() FavoritesApi$DeleteNotebookFavoriteWithHttpInfo() FavoritesApi$DeleteUDFFavorite() FavoritesApi$DeleteUDFFavoriteWithHttpInfo() FavoritesApi$GetArrayFavorite() FavoritesApi$GetArrayFavoriteWithHttpInfo() FavoritesApi$GetArrayFavoriteForArray() FavoritesApi$GetArrayFavoriteForArrayWithHttpInfo() FavoritesApi$GetMLModelFavorite() FavoritesApi$GetMLModelFavoriteWithHttpInfo() FavoritesApi$GetMLModelFavoriteForMLModel() FavoritesApi$GetMLModelFavoriteForMLModelWithHttpInfo() FavoritesApi$GetNotebookFavorite() FavoritesApi$GetNotebookFavoriteWithHttpInfo() FavoritesApi$GetNotebookFavoriteForNotebook() FavoritesApi$GetNotebookFavoriteForNotebookWithHttpInfo() FavoritesApi$GetUDFFavorite() FavoritesApi$GetUDFFavoriteWithHttpInfo() FavoritesApi$GetUDFFavoriteForUDF() FavoritesApi$GetUDFFavoriteForUDFWithHttpInfo() FavoritesApi$ListArrayFavorites() FavoritesApi$ListArrayFavoritesWithHttpInfo() FavoritesApi$ListArrayFavoritesUUIDs() FavoritesApi$ListArrayFavoritesUUIDsWithHttpInfo() FavoritesApi$ListMLModelFavorites() FavoritesApi$ListMLModelFavoritesWithHttpInfo() FavoritesApi$ListMLModelFavoritesUUIDs() FavoritesApi$ListMLModelFavoritesUUIDsWithHttpInfo() FavoritesApi$ListNotebookFavorites() FavoritesApi$ListNotebookFavoritesWithHttpInfo() FavoritesApi$ListNotebookFavoritesUUIDs() FavoritesApi$ListNotebookFavoritesUUIDsWithHttpInfo() FavoritesApi$ListUDFFavorites() FavoritesApi$ListUDFFavoritesWithHttpInfo() FavoritesApi$ListUDFFavoritesUUIDs() FavoritesApi$ListUDFFavoritesUUIDsWithHttpInfo() FavoritesApi$clone()","code":""},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$new(apiClient)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$AddArrayFavorite(body = NULL, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$AddArrayFavoriteWithHttpInfo(body = NULL, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$AddMLModelFavorite(body = NULL, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$AddMLModelFavoriteWithHttpInfo(body = NULL, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$AddNotebookFavorite(body = NULL, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$AddNotebookFavoriteWithHttpInfo(body = NULL, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$AddUDFFavorite(body = NULL, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$AddUDFFavoriteWithHttpInfo(body = NULL, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$DeleteArrayFavorite(id, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$DeleteArrayFavoriteWithHttpInfo(id, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$DeleteMLModelFavorite(id, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$DeleteMLModelFavoriteWithHttpInfo(id, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$DeleteNotebookFavorite(id, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$DeleteNotebookFavoriteWithHttpInfo(id, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$DeleteUDFFavorite(id, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$DeleteUDFFavoriteWithHttpInfo(id, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$GetArrayFavorite(id, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$GetArrayFavoriteWithHttpInfo(id, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$GetArrayFavoriteForArray(namespace, name, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$GetArrayFavoriteForArrayWithHttpInfo(namespace, name, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$GetMLModelFavorite(id, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$GetMLModelFavoriteWithHttpInfo(id, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$GetMLModelFavoriteForMLModel(namespace, name, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$GetMLModelFavoriteForMLModelWithHttpInfo(namespace, name, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-25","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$GetNotebookFavorite(id, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-26","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$GetNotebookFavoriteWithHttpInfo(id, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-27","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$GetNotebookFavoriteForNotebook(namespace, name, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-28","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$GetNotebookFavoriteForNotebookWithHttpInfo(namespace, name, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-29","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$GetUDFFavorite(id, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-30","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$GetUDFFavoriteWithHttpInfo(id, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-31","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$GetUDFFavoriteForUDF(namespace, name, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-32","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$GetUDFFavoriteForUDFWithHttpInfo(namespace, name, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-33","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$ListArrayFavorites(page = NULL, per.page = NULL, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-34","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$ListArrayFavoritesWithHttpInfo(page = NULL, per.page = NULL, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-35","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$ListArrayFavoritesUUIDs(...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-36","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$ListArrayFavoritesUUIDsWithHttpInfo(...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-37","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$ListMLModelFavorites(page = NULL, per.page = NULL, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-38","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$ListMLModelFavoritesWithHttpInfo(   page = NULL,   per.page = NULL,   ... )"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-39","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$ListMLModelFavoritesUUIDs(...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-40","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$ListMLModelFavoritesUUIDsWithHttpInfo(...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-41","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$ListNotebookFavorites(page = NULL, per.page = NULL, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-42","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$ListNotebookFavoritesWithHttpInfo(   page = NULL,   per.page = NULL,   ... )"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-43","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$ListNotebookFavoritesUUIDs(...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-44","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$ListNotebookFavoritesUUIDsWithHttpInfo(...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-45","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$ListUDFFavorites(page = NULL, per.page = NULL, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-46","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$ListUDFFavoritesWithHttpInfo(page = NULL, per.page = NULL, ...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-47","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$ListUDFFavoritesUUIDs(...)"},{"path":[]},{"path":"/reference/FavoritesApi.html","id":"usage-48","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$ListUDFFavoritesUUIDsWithHttpInfo(...)"},{"path":"/reference/FavoritesApi.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Favorites operations — FavoritesApi","text":"objects class cloneable method.","code":""},{"path":"/reference/FavoritesApi.html","id":"usage-49","dir":"Reference","previous_headings":"","what":"Usage","title":"Favorites operations — FavoritesApi","text":"","code":"FavoritesApi$clone(deep = FALSE)"},{"path":"/reference/FavoritesApi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Favorites operations — FavoritesApi","text":"deep Whether make deep clone.","code":""},{"path":"/reference/FavoritesApi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Favorites operations — FavoritesApi","text":"","code":"if (FALSE) { ####################  AddArrayFavorite  ####################  library(tiledbcloud) var.body <- FavoriteCreate$new() # FavoriteCreate |   api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$AddArrayFavorite(body=var.body)   ####################  AddMLModelFavorite  ####################  library(tiledbcloud) var.body <- FavoriteCreate$new() # FavoriteCreate |   api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$AddMLModelFavorite(body=var.body)   ####################  AddNotebookFavorite  ####################  library(tiledbcloud) var.body <- FavoriteCreate$new() # FavoriteCreate |   api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$AddNotebookFavorite(body=var.body)   ####################  AddUDFFavorite  ####################  library(tiledbcloud) var.body <- FavoriteCreate$new() # FavoriteCreate |   api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$AddUDFFavorite(body=var.body)   ####################  DeleteArrayFavorite  ####################  library(tiledbcloud) var.id <- 'id_example' # character | The uuid of the array favorite  api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$DeleteArrayFavorite(var.id)   ####################  DeleteMLModelFavorite  ####################  library(tiledbcloud) var.id <- 'id_example' # character | The uuid of the ML model favorite  api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$DeleteMLModelFavorite(var.id)   ####################  DeleteNotebookFavorite  ####################  library(tiledbcloud) var.id <- 'id_example' # character | The uuid of the notebook favorite  api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$DeleteNotebookFavorite(var.id)   ####################  DeleteUDFFavorite  ####################  library(tiledbcloud) var.id <- 'id_example' # character | The uuid of the UDF favorite  api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$DeleteUDFFavorite(var.id)   ####################  GetArrayFavorite  ####################  library(tiledbcloud) var.id <- 'id_example' # character | The uuid of the array favorite  api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetArrayFavorite(var.id)   ####################  GetArrayFavoriteForArray  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | The namespace of the array var.name <- 'name_example' # character | The name of the array  api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetArrayFavoriteForArray(var.namespace, var.name)   ####################  GetMLModelFavorite  ####################  library(tiledbcloud) var.id <- 'id_example' # character | The uuid of the ML model favorite  api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetMLModelFavorite(var.id)   ####################  GetMLModelFavoriteForMLModel  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | The namespace of the ML model var.name <- 'name_example' # character | The name of the ML model  api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetMLModelFavoriteForMLModel(var.namespace, var.name)   ####################  GetNotebookFavorite  ####################  library(tiledbcloud) var.id <- 'id_example' # character | The uuid of the notebook favorite  api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetNotebookFavorite(var.id)   ####################  GetNotebookFavoriteForNotebook  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | The namespace of the notebook var.name <- 'name_example' # character | The name of the notebook  api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetNotebookFavoriteForNotebook(var.namespace, var.name)   ####################  GetUDFFavorite  ####################  library(tiledbcloud) var.id <- 'id_example' # character | The uuid of the UDF favorite  api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetUDFFavorite(var.id)   ####################  GetUDFFavoriteForUDF  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | The namespace of the UDF var.name <- 'name_example' # character | The name of the UDF  api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetUDFFavoriteForUDF(var.namespace, var.name)   ####################  ListArrayFavorites  ####################  library(tiledbcloud) var.page <- 56 # integer | pagination offset var.per.page <- 56 # integer | pagination limit  api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$ListArrayFavorites(page=var.page, per.page=var.per.page)   ####################  ListArrayFavoritesUUIDs  ####################  library(tiledbcloud)  api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$ListArrayFavoritesUUIDs()   ####################  ListMLModelFavorites  ####################  library(tiledbcloud) var.page <- 56 # integer | pagination offset var.per.page <- 56 # integer | pagination limit  api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$ListMLModelFavorites(page=var.page, per.page=var.per.page)   ####################  ListMLModelFavoritesUUIDs  ####################  library(tiledbcloud)  api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$ListMLModelFavoritesUUIDs()   ####################  ListNotebookFavorites  ####################  library(tiledbcloud) var.page <- 56 # integer | pagination offset var.per.page <- 56 # integer | pagination limit  api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$ListNotebookFavorites(page=var.page, per.page=var.per.page)   ####################  ListNotebookFavoritesUUIDs  ####################  library(tiledbcloud)  api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$ListNotebookFavoritesUUIDs()   ####################  ListUDFFavorites  ####################  library(tiledbcloud) var.page <- 56 # integer | pagination offset var.per.page <- 56 # integer | pagination limit  api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$ListUDFFavorites(page=var.page, per.page=var.per.page)   ####################  ListUDFFavoritesUUIDs  ####################  library(tiledbcloud)  api.instance <- FavoritesApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$ListUDFFavoritesUUIDs()   }"},{"path":"/reference/FilePropertyName.html","id":null,"dir":"Reference","previous_headings":"","what":"FilePropertyName — FilePropertyName","title":"FilePropertyName — FilePropertyName","text":"FilePropertyName Class","code":""},{"path":"/reference/FilePropertyName.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"FilePropertyName — FilePropertyName","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/FilePropertyName.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FilePropertyName — FilePropertyName","text":"FilePropertyName$new() FilePropertyName$toJSON() FilePropertyName$fromJSON() FilePropertyName$toJSONString() FilePropertyName$fromJSONString() FilePropertyName$clone()","code":""},{"path":[]},{"path":"/reference/FilePropertyName.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilePropertyName — FilePropertyName","text":"","code":"FilePropertyName$new(...)"},{"path":[]},{"path":"/reference/FilePropertyName.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FilePropertyName — FilePropertyName","text":"","code":"FilePropertyName$toJSON()"},{"path":[]},{"path":"/reference/FilePropertyName.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FilePropertyName — FilePropertyName","text":"","code":"FilePropertyName$fromJSON(FilePropertyNameJson)"},{"path":[]},{"path":"/reference/FilePropertyName.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"FilePropertyName — FilePropertyName","text":"","code":"FilePropertyName$toJSONString()"},{"path":[]},{"path":"/reference/FilePropertyName.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"FilePropertyName — FilePropertyName","text":"","code":"FilePropertyName$fromJSONString(FilePropertyNameJson)"},{"path":"/reference/FilePropertyName.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FilePropertyName — FilePropertyName","text":"objects class cloneable method.","code":""},{"path":"/reference/FilePropertyName.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"FilePropertyName — FilePropertyName","text":"","code":"FilePropertyName$clone(deep = FALSE)"},{"path":"/reference/FilePropertyName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilePropertyName — FilePropertyName","text":"deep Whether make deep clone.","code":""},{"path":"/reference/FileType.html","id":null,"dir":"Reference","previous_headings":"","what":"FileType — FileType","title":"FileType — FileType","text":"FileType Class","code":""},{"path":"/reference/FileType.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"FileType — FileType","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/FileType.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FileType — FileType","text":"FileType$new() FileType$toJSON() FileType$fromJSON() FileType$toJSONString() FileType$fromJSONString() FileType$clone()","code":""},{"path":[]},{"path":"/reference/FileType.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FileType — FileType","text":"","code":"FileType$new(...)"},{"path":[]},{"path":"/reference/FileType.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FileType — FileType","text":"","code":"FileType$toJSON()"},{"path":[]},{"path":"/reference/FileType.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FileType — FileType","text":"","code":"FileType$fromJSON(FileTypeJson)"},{"path":[]},{"path":"/reference/FileType.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"FileType — FileType","text":"","code":"FileType$toJSONString()"},{"path":[]},{"path":"/reference/FileType.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"FileType — FileType","text":"","code":"FileType$fromJSONString(FileTypeJson)"},{"path":"/reference/FileType.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FileType — FileType","text":"objects class cloneable method.","code":""},{"path":"/reference/FileType.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"FileType — FileType","text":"","code":"FileType$clone(deep = FALSE)"},{"path":"/reference/FileType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FileType — FileType","text":"deep Whether make deep clone.","code":""},{"path":"/reference/Filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter — Filter","title":"Filter — Filter","text":"Filter Class","code":""},{"path":"/reference/Filter.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Filter — Filter","text":"R6Class generator object","code":""},{"path":"/reference/Filter.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Filter — Filter","text":"type FilterType data FilterData [optional]","code":""},{"path":[]},{"path":"/reference/Filter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Filter — Filter","text":"Filter$new() Filter$toJSON() Filter$fromJSON() Filter$toJSONString() Filter$fromJSONString() Filter$clone()","code":""},{"path":[]},{"path":"/reference/Filter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter — Filter","text":"","code":"Filter$new(type, data = NULL, ...)"},{"path":[]},{"path":"/reference/Filter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter — Filter","text":"","code":"Filter$toJSON()"},{"path":[]},{"path":"/reference/Filter.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter — Filter","text":"","code":"Filter$fromJSON(FilterJson)"},{"path":[]},{"path":"/reference/Filter.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter — Filter","text":"","code":"Filter$toJSONString()"},{"path":[]},{"path":"/reference/Filter.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter — Filter","text":"","code":"Filter$fromJSONString(FilterJson)"},{"path":"/reference/Filter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Filter — Filter","text":"objects class cloneable method.","code":""},{"path":"/reference/Filter.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter — Filter","text":"","code":"Filter$clone(deep = FALSE)"},{"path":"/reference/Filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter — Filter","text":"deep Whether make deep clone.","code":""},{"path":"/reference/FilterData.html","id":null,"dir":"Reference","previous_headings":"","what":"FilterData — FilterData","title":"FilterData — FilterData","text":"FilterData Class","code":""},{"path":"/reference/FilterData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"FilterData — FilterData","text":"R6Class generator object","code":""},{"path":"/reference/FilterData.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"FilterData — FilterData","text":"int8 integer [optional] uint8 integer [optional] int16 integer [optional] uint16 integer [optional] int32 integer [optional] uint32 integer [optional] int64 integer [optional] uint64 integer [optional] float32 integer [optional] float64 integer [optional]","code":""},{"path":[]},{"path":"/reference/FilterData.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FilterData — FilterData","text":"FilterData$new() FilterData$toJSON() FilterData$fromJSON() FilterData$toJSONString() FilterData$fromJSONString() FilterData$clone()","code":""},{"path":[]},{"path":"/reference/FilterData.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterData — FilterData","text":"","code":"FilterData$new(   int8 = NULL,   uint8 = NULL,   int16 = NULL,   uint16 = NULL,   int32 = NULL,   uint32 = NULL,   int64 = NULL,   uint64 = NULL,   float32 = NULL,   float64 = NULL,   ... )"},{"path":[]},{"path":"/reference/FilterData.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterData — FilterData","text":"","code":"FilterData$toJSON()"},{"path":[]},{"path":"/reference/FilterData.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterData — FilterData","text":"","code":"FilterData$fromJSON(FilterDataJson)"},{"path":[]},{"path":"/reference/FilterData.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterData — FilterData","text":"","code":"FilterData$toJSONString()"},{"path":[]},{"path":"/reference/FilterData.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterData — FilterData","text":"","code":"FilterData$fromJSONString(FilterDataJson)"},{"path":"/reference/FilterData.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FilterData — FilterData","text":"objects class cloneable method.","code":""},{"path":"/reference/FilterData.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterData — FilterData","text":"","code":"FilterData$clone(deep = FALSE)"},{"path":"/reference/FilterData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterData — FilterData","text":"deep Whether make deep clone.","code":""},{"path":"/reference/FilterOption.html","id":null,"dir":"Reference","previous_headings":"","what":"FilterOption — FilterOption","title":"FilterOption — FilterOption","text":"FilterOption Class","code":""},{"path":"/reference/FilterOption.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"FilterOption — FilterOption","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/FilterOption.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FilterOption — FilterOption","text":"FilterOption$new() FilterOption$toJSON() FilterOption$fromJSON() FilterOption$toJSONString() FilterOption$fromJSONString() FilterOption$clone()","code":""},{"path":[]},{"path":"/reference/FilterOption.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterOption — FilterOption","text":"","code":"FilterOption$new(...)"},{"path":[]},{"path":"/reference/FilterOption.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterOption — FilterOption","text":"","code":"FilterOption$toJSON()"},{"path":[]},{"path":"/reference/FilterOption.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterOption — FilterOption","text":"","code":"FilterOption$fromJSON(FilterOptionJson)"},{"path":[]},{"path":"/reference/FilterOption.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterOption — FilterOption","text":"","code":"FilterOption$toJSONString()"},{"path":[]},{"path":"/reference/FilterOption.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterOption — FilterOption","text":"","code":"FilterOption$fromJSONString(FilterOptionJson)"},{"path":"/reference/FilterOption.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FilterOption — FilterOption","text":"objects class cloneable method.","code":""},{"path":"/reference/FilterOption.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterOption — FilterOption","text":"","code":"FilterOption$clone(deep = FALSE)"},{"path":"/reference/FilterOption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterOption — FilterOption","text":"deep Whether make deep clone.","code":""},{"path":"/reference/FilterPipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"FilterPipeline — FilterPipeline","title":"FilterPipeline — FilterPipeline","text":"FilterPipeline Class","code":""},{"path":"/reference/FilterPipeline.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"FilterPipeline — FilterPipeline","text":"R6Class generator object","code":""},{"path":"/reference/FilterPipeline.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"FilterPipeline — FilterPipeline","text":"filters list( Filter ) [optional]","code":""},{"path":[]},{"path":"/reference/FilterPipeline.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FilterPipeline — FilterPipeline","text":"FilterPipeline$new() FilterPipeline$toJSON() FilterPipeline$fromJSON() FilterPipeline$toJSONString() FilterPipeline$fromJSONString() FilterPipeline$clone()","code":""},{"path":[]},{"path":"/reference/FilterPipeline.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterPipeline — FilterPipeline","text":"","code":"FilterPipeline$new(filters = NULL, ...)"},{"path":[]},{"path":"/reference/FilterPipeline.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterPipeline — FilterPipeline","text":"","code":"FilterPipeline$toJSON()"},{"path":[]},{"path":"/reference/FilterPipeline.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterPipeline — FilterPipeline","text":"","code":"FilterPipeline$fromJSON(FilterPipelineJson)"},{"path":[]},{"path":"/reference/FilterPipeline.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterPipeline — FilterPipeline","text":"","code":"FilterPipeline$toJSONString()"},{"path":[]},{"path":"/reference/FilterPipeline.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterPipeline — FilterPipeline","text":"","code":"FilterPipeline$fromJSONString(FilterPipelineJson)"},{"path":"/reference/FilterPipeline.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FilterPipeline — FilterPipeline","text":"objects class cloneable method.","code":""},{"path":"/reference/FilterPipeline.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterPipeline — FilterPipeline","text":"","code":"FilterPipeline$clone(deep = FALSE)"},{"path":"/reference/FilterPipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterPipeline — FilterPipeline","text":"deep Whether make deep clone.","code":""},{"path":"/reference/FilterType.html","id":null,"dir":"Reference","previous_headings":"","what":"FilterType — FilterType","title":"FilterType — FilterType","text":"FilterType Class","code":""},{"path":"/reference/FilterType.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"FilterType — FilterType","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/FilterType.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FilterType — FilterType","text":"FilterType$new() FilterType$toJSON() FilterType$fromJSON() FilterType$toJSONString() FilterType$fromJSONString() FilterType$clone()","code":""},{"path":[]},{"path":"/reference/FilterType.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterType — FilterType","text":"","code":"FilterType$new(...)"},{"path":[]},{"path":"/reference/FilterType.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterType — FilterType","text":"","code":"FilterType$toJSON()"},{"path":[]},{"path":"/reference/FilterType.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterType — FilterType","text":"","code":"FilterType$fromJSON(FilterTypeJson)"},{"path":[]},{"path":"/reference/FilterType.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterType — FilterType","text":"","code":"FilterType$toJSONString()"},{"path":[]},{"path":"/reference/FilterType.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterType — FilterType","text":"","code":"FilterType$fromJSONString(FilterTypeJson)"},{"path":"/reference/FilterType.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FilterType — FilterType","text":"objects class cloneable method.","code":""},{"path":"/reference/FilterType.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterType — FilterType","text":"","code":"FilterType$clone(deep = FALSE)"},{"path":"/reference/FilterType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterType — FilterType","text":"deep Whether make deep clone.","code":""},{"path":"/reference/GenericUDF.html","id":null,"dir":"Reference","previous_headings":"","what":"GenericUDF — GenericUDF","title":"GenericUDF — GenericUDF","text":"GenericUDF Class","code":""},{"path":"/reference/GenericUDF.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GenericUDF — GenericUDF","text":"R6Class generator object","code":""},{"path":"/reference/GenericUDF.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"GenericUDF — GenericUDF","text":"udf_info_name character [optional] language UDFLanguage [optional] version character [optional] image_name character [optional] exec character [optional] exec_raw character [optional] argument character [optional] stored_param_uuids list( character ) [optional] result_format ResultFormat [optional] task_name character [optional] store_results character [optional]","code":""},{"path":[]},{"path":"/reference/GenericUDF.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"GenericUDF — GenericUDF","text":"GenericUDF$new() GenericUDF$toJSON() GenericUDF$fromJSON() GenericUDF$toJSONString() GenericUDF$fromJSONString() GenericUDF$clone()","code":""},{"path":[]},{"path":"/reference/GenericUDF.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GenericUDF — GenericUDF","text":"","code":"GenericUDF$new(   udf_info_name = NULL,   language = NULL,   version = NULL,   image_name = NULL,   exec = NULL,   exec_raw = NULL,   argument = NULL,   stored_param_uuids = NULL,   result_format = NULL,   task_name = NULL,   store_results = NULL,   ... )"},{"path":[]},{"path":"/reference/GenericUDF.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"GenericUDF — GenericUDF","text":"","code":"GenericUDF$toJSON()"},{"path":[]},{"path":"/reference/GenericUDF.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"GenericUDF — GenericUDF","text":"","code":"GenericUDF$fromJSON(GenericUDFJson)"},{"path":[]},{"path":"/reference/GenericUDF.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"GenericUDF — GenericUDF","text":"","code":"GenericUDF$toJSONString()"},{"path":[]},{"path":"/reference/GenericUDF.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"GenericUDF — GenericUDF","text":"","code":"GenericUDF$fromJSONString(GenericUDFJson)"},{"path":"/reference/GenericUDF.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"GenericUDF — GenericUDF","text":"objects class cloneable method.","code":""},{"path":"/reference/GenericUDF.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"GenericUDF — GenericUDF","text":"","code":"GenericUDF$clone(deep = FALSE)"},{"path":"/reference/GenericUDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GenericUDF — GenericUDF","text":"deep Whether make deep clone.","code":""},{"path":"/reference/InlineObject.html","id":null,"dir":"Reference","previous_headings":"","what":"InlineObject — InlineObject","title":"InlineObject — InlineObject","text":"InlineObject Class","code":""},{"path":"/reference/InlineObject.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"InlineObject — InlineObject","text":"R6Class generator object","code":""},{"path":"/reference/InlineObject.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"InlineObject — InlineObject","text":"password character [optional]","code":""},{"path":[]},{"path":"/reference/InlineObject.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"InlineObject — InlineObject","text":"InlineObject$new() InlineObject$toJSON() InlineObject$fromJSON() InlineObject$toJSONString() InlineObject$fromJSONString() InlineObject$clone()","code":""},{"path":[]},{"path":"/reference/InlineObject.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"InlineObject — InlineObject","text":"","code":"InlineObject$new(password = NULL, ...)"},{"path":[]},{"path":"/reference/InlineObject.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"InlineObject — InlineObject","text":"","code":"InlineObject$toJSON()"},{"path":[]},{"path":"/reference/InlineObject.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"InlineObject — InlineObject","text":"","code":"InlineObject$fromJSON(InlineObjectJson)"},{"path":[]},{"path":"/reference/InlineObject.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"InlineObject — InlineObject","text":"","code":"InlineObject$toJSONString()"},{"path":[]},{"path":"/reference/InlineObject.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"InlineObject — InlineObject","text":"","code":"InlineObject$fromJSONString(InlineObjectJson)"},{"path":"/reference/InlineObject.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"InlineObject — InlineObject","text":"objects class cloneable method.","code":""},{"path":"/reference/InlineObject.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"InlineObject — InlineObject","text":"","code":"InlineObject$clone(deep = FALSE)"},{"path":"/reference/InlineObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"InlineObject — InlineObject","text":"deep Whether make deep clone.","code":""},{"path":"/reference/InlineResponse200.html","id":null,"dir":"Reference","previous_headings":"","what":"InlineResponse200 — InlineResponse200","title":"InlineResponse200 — InlineResponse200","text":"InlineResponse200 Class","code":""},{"path":"/reference/InlineResponse200.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"InlineResponse200 — InlineResponse200","text":"R6Class generator object","code":""},{"path":"/reference/InlineResponse200.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"InlineResponse200 — InlineResponse200","text":"stats character [optional]","code":""},{"path":[]},{"path":"/reference/InlineResponse200.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"InlineResponse200 — InlineResponse200","text":"InlineResponse200$new() InlineResponse200$toJSON() InlineResponse200$fromJSON() InlineResponse200$toJSONString() InlineResponse200$fromJSONString() InlineResponse200$clone()","code":""},{"path":[]},{"path":"/reference/InlineResponse200.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"InlineResponse200 — InlineResponse200","text":"","code":"InlineResponse200$new(stats = NULL, ...)"},{"path":[]},{"path":"/reference/InlineResponse200.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"InlineResponse200 — InlineResponse200","text":"","code":"InlineResponse200$toJSON()"},{"path":[]},{"path":"/reference/InlineResponse200.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"InlineResponse200 — InlineResponse200","text":"","code":"InlineResponse200$fromJSON(InlineResponse200Json)"},{"path":[]},{"path":"/reference/InlineResponse200.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"InlineResponse200 — InlineResponse200","text":"","code":"InlineResponse200$toJSONString()"},{"path":[]},{"path":"/reference/InlineResponse200.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"InlineResponse200 — InlineResponse200","text":"","code":"InlineResponse200$fromJSONString(InlineResponse200Json)"},{"path":"/reference/InlineResponse200.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"InlineResponse200 — InlineResponse200","text":"objects class cloneable method.","code":""},{"path":"/reference/InlineResponse200.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"InlineResponse200 — InlineResponse200","text":"","code":"InlineResponse200$clone(deep = FALSE)"},{"path":"/reference/InlineResponse200.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"InlineResponse200 — InlineResponse200","text":"deep Whether make deep clone.","code":""},{"path":"/reference/Invitation.html","id":null,"dir":"Reference","previous_headings":"","what":"Invitation — Invitation","title":"Invitation — Invitation","text":"Invitation Class","code":""},{"path":"/reference/Invitation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Invitation — Invitation","text":"R6Class generator object","code":""},{"path":"/reference/Invitation.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Invitation — Invitation","text":"id character [optional] invitation_type InvitationType [optional] owner_namespace_uuid character [optional] user_namespace_uuid character [optional] organization_user_uuid character [optional] organization_name character [optional] organization_role OrganizationRoles [optional] array_uuid character [optional] array_name character [optional] email character [optional] actions character [optional] status InvitationStatus [optional] created_at character [optional] expires_at character [optional] accepted_at character [optional]","code":""},{"path":[]},{"path":"/reference/Invitation.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Invitation — Invitation","text":"Invitation$new() Invitation$toJSON() Invitation$fromJSON() Invitation$toJSONString() Invitation$fromJSONString() Invitation$clone()","code":""},{"path":[]},{"path":"/reference/Invitation.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Invitation — Invitation","text":"","code":"Invitation$new(   id = NULL,   invitation_type = NULL,   owner_namespace_uuid = NULL,   user_namespace_uuid = NULL,   organization_user_uuid = NULL,   organization_name = NULL,   organization_role = NULL,   array_uuid = NULL,   array_name = NULL,   email = NULL,   actions = NULL,   status = NULL,   created_at = NULL,   expires_at = NULL,   accepted_at = NULL,   ... )"},{"path":[]},{"path":"/reference/Invitation.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Invitation — Invitation","text":"","code":"Invitation$toJSON()"},{"path":[]},{"path":"/reference/Invitation.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Invitation — Invitation","text":"","code":"Invitation$fromJSON(InvitationJson)"},{"path":[]},{"path":"/reference/Invitation.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Invitation — Invitation","text":"","code":"Invitation$toJSONString()"},{"path":[]},{"path":"/reference/Invitation.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Invitation — Invitation","text":"","code":"Invitation$fromJSONString(InvitationJson)"},{"path":"/reference/Invitation.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Invitation — Invitation","text":"objects class cloneable method.","code":""},{"path":"/reference/Invitation.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Invitation — Invitation","text":"","code":"Invitation$clone(deep = FALSE)"},{"path":"/reference/Invitation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Invitation — Invitation","text":"deep Whether make deep clone.","code":""},{"path":"/reference/InvitationApi.html","id":null,"dir":"Reference","previous_headings":"","what":"Invitation operations — InvitationApi","title":"Invitation operations — InvitationApi","text":"tiledbcloud.Invitation","code":""},{"path":"/reference/InvitationApi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Invitation operations — InvitationApi","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/InvitationApi.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Invitation operations — InvitationApi","text":"apiClient Handles client-server communication.","code":""},{"path":[]},{"path":"/reference/InvitationApi.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Invitation operations — InvitationApi","text":"InvitationApi$new() InvitationApi$AcceptInvitation() InvitationApi$AcceptInvitationWithHttpInfo() InvitationApi$CancelJoinOrganization() InvitationApi$CancelJoinOrganizationWithHttpInfo() InvitationApi$CancelShareArrayByInvite() InvitationApi$CancelShareArrayByInviteWithHttpInfo() InvitationApi$FetchInvitations() InvitationApi$FetchInvitationsWithHttpInfo() InvitationApi$JoinOrganization() InvitationApi$JoinOrganizationWithHttpInfo() InvitationApi$ShareArrayByInvite() InvitationApi$ShareArrayByInviteWithHttpInfo() InvitationApi$clone()","code":""},{"path":[]},{"path":"/reference/InvitationApi.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Invitation operations — InvitationApi","text":"","code":"InvitationApi$new(apiClient)"},{"path":[]},{"path":"/reference/InvitationApi.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Invitation operations — InvitationApi","text":"","code":"InvitationApi$AcceptInvitation(invitation, ...)"},{"path":[]},{"path":"/reference/InvitationApi.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Invitation operations — InvitationApi","text":"","code":"InvitationApi$AcceptInvitationWithHttpInfo(invitation, ...)"},{"path":[]},{"path":"/reference/InvitationApi.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Invitation operations — InvitationApi","text":"","code":"InvitationApi$CancelJoinOrganization(invitation, organization, ...)"},{"path":[]},{"path":"/reference/InvitationApi.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Invitation operations — InvitationApi","text":"","code":"InvitationApi$CancelJoinOrganizationWithHttpInfo(invitation, organization, ...)"},{"path":[]},{"path":"/reference/InvitationApi.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Invitation operations — InvitationApi","text":"","code":"InvitationApi$CancelShareArrayByInvite(namespace, invitation, array, ...)"},{"path":[]},{"path":"/reference/InvitationApi.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Invitation operations — InvitationApi","text":"","code":"InvitationApi$CancelShareArrayByInviteWithHttpInfo(   namespace,   invitation,   array,   ... )"},{"path":[]},{"path":"/reference/InvitationApi.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Invitation operations — InvitationApi","text":"","code":"InvitationApi$FetchInvitations(   organization = NULL,   array = NULL,   start = NULL,   end = NULL,   page = NULL,   per.page = NULL,   type = NULL,   status = NULL,   orderby = NULL,   ... )"},{"path":[]},{"path":"/reference/InvitationApi.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Invitation operations — InvitationApi","text":"","code":"InvitationApi$FetchInvitationsWithHttpInfo(   organization = NULL,   array = NULL,   start = NULL,   end = NULL,   page = NULL,   per.page = NULL,   type = NULL,   status = NULL,   orderby = NULL,   ... )"},{"path":[]},{"path":"/reference/InvitationApi.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Invitation operations — InvitationApi","text":"","code":"InvitationApi$JoinOrganization(organization, email.invite, ...)"},{"path":[]},{"path":"/reference/InvitationApi.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Invitation operations — InvitationApi","text":"","code":"InvitationApi$JoinOrganizationWithHttpInfo(organization, email.invite, ...)"},{"path":[]},{"path":"/reference/InvitationApi.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Invitation operations — InvitationApi","text":"","code":"InvitationApi$ShareArrayByInvite(namespace, array, email.invite, ...)"},{"path":[]},{"path":"/reference/InvitationApi.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Invitation operations — InvitationApi","text":"","code":"InvitationApi$ShareArrayByInviteWithHttpInfo(   namespace,   array,   email.invite,   ... )"},{"path":"/reference/InvitationApi.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Invitation operations — InvitationApi","text":"objects class cloneable method.","code":""},{"path":"/reference/InvitationApi.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Invitation operations — InvitationApi","text":"","code":"InvitationApi$clone(deep = FALSE)"},{"path":"/reference/InvitationApi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Invitation operations — InvitationApi","text":"deep Whether make deep clone.","code":""},{"path":"/reference/InvitationApi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Invitation operations — InvitationApi","text":"","code":"if (FALSE) { ####################  AcceptInvitation  ####################  library(tiledbcloud) var.invitation <- 'invitation_example' # character | the id of invitation about to be accepted  api.instance <- InvitationApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$AcceptInvitation(var.invitation)   ####################  CancelJoinOrganization  ####################  library(tiledbcloud) var.invitation <- 'invitation_example' # character | the id of invitation about to be cancelled var.organization <- 'organization_example' # character | name or uuid of organization  api.instance <- InvitationApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$CancelJoinOrganization(var.invitation, var.organization)   ####################  CancelShareArrayByInvite  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace array is in (an organization name or user's username) var.invitation <- 'invitation_example' # character | the id of invitation about to be cancelled var.array <- 'array_example' # character | name/uri of array that is url-encoded  api.instance <- InvitationApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$CancelShareArrayByInvite(var.namespace, var.invitation, var.array)   ####################  FetchInvitations  ####################  library(tiledbcloud) var.organization <- 'organization_example' # character | name or id of organization to filter var.array <- 'array_example' # character | name/uri of array that is url-encoded to filter var.start <- 56 # integer | start time for tasks to filter by var.end <- 56 # integer | end time for tasks to filter by var.page <- 56 # integer | pagination offset var.per.page <- 56 # integer | pagination limit var.type <- 'type_example' # character | invitation type, \\\"ARRAY_SHARE\\\", \\\"JOIN_ORGANIZATION\\\" var.status <- 'status_example' # character | Filter to only return \\\"PENDING\\\", \\\"ACCEPTED\\\" var.orderby <- 'orderby_example' # character | sort by which field valid values include timestamp, array_name, organization_name  api.instance <- InvitationApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$FetchInvitations(organization=var.organization, array=var.array, start=var.start, end=var.end, page=var.page, per.page=var.per.page, type=var.type, status=var.status, orderby=var.orderby)   ####################  JoinOrganization  ####################  library(tiledbcloud) var.organization <- 'organization_example' # character | name or uuid of organization var.email.invite <- InvitationOrganizationJoinEmail$new() # InvitationOrganizationJoinEmail | list of email recipients  api.instance <- InvitationApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$JoinOrganization(var.organization, var.email.invite)   ####################  ShareArrayByInvite  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace array is in (an organization name or user's username) var.array <- 'array_example' # character | name/uri of array that is url-encoded var.email.invite <- InvitationArrayShareEmail$new() # InvitationArrayShareEmail | list of email recipients  api.instance <- InvitationApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$ShareArrayByInvite(var.namespace, var.array, var.email.invite)   }"},{"path":"/reference/InvitationArrayShareEmail.html","id":null,"dir":"Reference","previous_headings":"","what":"InvitationArrayShareEmail — InvitationArrayShareEmail","title":"InvitationArrayShareEmail — InvitationArrayShareEmail","text":"InvitationArrayShareEmail Class","code":""},{"path":"/reference/InvitationArrayShareEmail.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"InvitationArrayShareEmail — InvitationArrayShareEmail","text":"R6Class generator object","code":""},{"path":"/reference/InvitationArrayShareEmail.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"InvitationArrayShareEmail — InvitationArrayShareEmail","text":"actions list( ArrayActions ) invitee_email list( character )","code":""},{"path":[]},{"path":"/reference/InvitationArrayShareEmail.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"InvitationArrayShareEmail — InvitationArrayShareEmail","text":"InvitationArrayShareEmail$new() InvitationArrayShareEmail$toJSON() InvitationArrayShareEmail$fromJSON() InvitationArrayShareEmail$toJSONString() InvitationArrayShareEmail$fromJSONString() InvitationArrayShareEmail$clone()","code":""},{"path":[]},{"path":"/reference/InvitationArrayShareEmail.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationArrayShareEmail — InvitationArrayShareEmail","text":"","code":"InvitationArrayShareEmail$new(actions, invitee_email, ...)"},{"path":[]},{"path":"/reference/InvitationArrayShareEmail.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationArrayShareEmail — InvitationArrayShareEmail","text":"","code":"InvitationArrayShareEmail$toJSON()"},{"path":[]},{"path":"/reference/InvitationArrayShareEmail.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationArrayShareEmail — InvitationArrayShareEmail","text":"","code":"InvitationArrayShareEmail$fromJSON(InvitationArrayShareEmailJson)"},{"path":[]},{"path":"/reference/InvitationArrayShareEmail.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationArrayShareEmail — InvitationArrayShareEmail","text":"","code":"InvitationArrayShareEmail$toJSONString()"},{"path":[]},{"path":"/reference/InvitationArrayShareEmail.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationArrayShareEmail — InvitationArrayShareEmail","text":"","code":"InvitationArrayShareEmail$fromJSONString(InvitationArrayShareEmailJson)"},{"path":"/reference/InvitationArrayShareEmail.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"InvitationArrayShareEmail — InvitationArrayShareEmail","text":"objects class cloneable method.","code":""},{"path":"/reference/InvitationArrayShareEmail.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationArrayShareEmail — InvitationArrayShareEmail","text":"","code":"InvitationArrayShareEmail$clone(deep = FALSE)"},{"path":"/reference/InvitationArrayShareEmail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"InvitationArrayShareEmail — InvitationArrayShareEmail","text":"deep Whether make deep clone.","code":""},{"path":"/reference/InvitationData.html","id":null,"dir":"Reference","previous_headings":"","what":"InvitationData — InvitationData","title":"InvitationData — InvitationData","text":"InvitationData Class","code":""},{"path":"/reference/InvitationData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"InvitationData — InvitationData","text":"R6Class generator object","code":""},{"path":"/reference/InvitationData.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"InvitationData — InvitationData","text":"invitations list( Invitation ) [optional] pagination_metadata PaginationMetadata [optional]","code":""},{"path":[]},{"path":"/reference/InvitationData.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"InvitationData — InvitationData","text":"InvitationData$new() InvitationData$toJSON() InvitationData$fromJSON() InvitationData$toJSONString() InvitationData$fromJSONString() InvitationData$clone()","code":""},{"path":[]},{"path":"/reference/InvitationData.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationData — InvitationData","text":"","code":"InvitationData$new(invitations = NULL, pagination_metadata = NULL, ...)"},{"path":[]},{"path":"/reference/InvitationData.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationData — InvitationData","text":"","code":"InvitationData$toJSON()"},{"path":[]},{"path":"/reference/InvitationData.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationData — InvitationData","text":"","code":"InvitationData$fromJSON(InvitationDataJson)"},{"path":[]},{"path":"/reference/InvitationData.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationData — InvitationData","text":"","code":"InvitationData$toJSONString()"},{"path":[]},{"path":"/reference/InvitationData.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationData — InvitationData","text":"","code":"InvitationData$fromJSONString(InvitationDataJson)"},{"path":"/reference/InvitationData.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"InvitationData — InvitationData","text":"objects class cloneable method.","code":""},{"path":"/reference/InvitationData.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationData — InvitationData","text":"","code":"InvitationData$clone(deep = FALSE)"},{"path":"/reference/InvitationData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"InvitationData — InvitationData","text":"deep Whether make deep clone.","code":""},{"path":"/reference/InvitationOrganizationJoinEmail.html","id":null,"dir":"Reference","previous_headings":"","what":"InvitationOrganizationJoinEmail — InvitationOrganizationJoinEmail","title":"InvitationOrganizationJoinEmail — InvitationOrganizationJoinEmail","text":"InvitationOrganizationJoinEmail Class","code":""},{"path":"/reference/InvitationOrganizationJoinEmail.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"InvitationOrganizationJoinEmail — InvitationOrganizationJoinEmail","text":"R6Class generator object","code":""},{"path":"/reference/InvitationOrganizationJoinEmail.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"InvitationOrganizationJoinEmail — InvitationOrganizationJoinEmail","text":"actions list( NamespaceActions ) [optional] organization_role OrganizationRoles invitee_email list( character )","code":""},{"path":[]},{"path":"/reference/InvitationOrganizationJoinEmail.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"InvitationOrganizationJoinEmail — InvitationOrganizationJoinEmail","text":"InvitationOrganizationJoinEmail$new() InvitationOrganizationJoinEmail$toJSON() InvitationOrganizationJoinEmail$fromJSON() InvitationOrganizationJoinEmail$toJSONString() InvitationOrganizationJoinEmail$fromJSONString() InvitationOrganizationJoinEmail$clone()","code":""},{"path":[]},{"path":"/reference/InvitationOrganizationJoinEmail.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationOrganizationJoinEmail — InvitationOrganizationJoinEmail","text":"","code":"InvitationOrganizationJoinEmail$new(   organization_role,   invitee_email,   actions = NULL,   ... )"},{"path":[]},{"path":"/reference/InvitationOrganizationJoinEmail.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationOrganizationJoinEmail — InvitationOrganizationJoinEmail","text":"","code":"InvitationOrganizationJoinEmail$toJSON()"},{"path":[]},{"path":"/reference/InvitationOrganizationJoinEmail.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationOrganizationJoinEmail — InvitationOrganizationJoinEmail","text":"","code":"InvitationOrganizationJoinEmail$fromJSON(InvitationOrganizationJoinEmailJson)"},{"path":[]},{"path":"/reference/InvitationOrganizationJoinEmail.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationOrganizationJoinEmail — InvitationOrganizationJoinEmail","text":"","code":"InvitationOrganizationJoinEmail$toJSONString()"},{"path":[]},{"path":"/reference/InvitationOrganizationJoinEmail.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationOrganizationJoinEmail — InvitationOrganizationJoinEmail","text":"","code":"InvitationOrganizationJoinEmail$fromJSONString(   InvitationOrganizationJoinEmailJson )"},{"path":"/reference/InvitationOrganizationJoinEmail.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"InvitationOrganizationJoinEmail — InvitationOrganizationJoinEmail","text":"objects class cloneable method.","code":""},{"path":"/reference/InvitationOrganizationJoinEmail.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationOrganizationJoinEmail — InvitationOrganizationJoinEmail","text":"","code":"InvitationOrganizationJoinEmail$clone(deep = FALSE)"},{"path":"/reference/InvitationOrganizationJoinEmail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"InvitationOrganizationJoinEmail — InvitationOrganizationJoinEmail","text":"deep Whether make deep clone.","code":""},{"path":"/reference/InvitationStatus.html","id":null,"dir":"Reference","previous_headings":"","what":"InvitationStatus — InvitationStatus","title":"InvitationStatus — InvitationStatus","text":"InvitationStatus Class","code":""},{"path":"/reference/InvitationStatus.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"InvitationStatus — InvitationStatus","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/InvitationStatus.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"InvitationStatus — InvitationStatus","text":"InvitationStatus$new() InvitationStatus$toJSON() InvitationStatus$fromJSON() InvitationStatus$toJSONString() InvitationStatus$fromJSONString() InvitationStatus$clone()","code":""},{"path":[]},{"path":"/reference/InvitationStatus.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationStatus — InvitationStatus","text":"","code":"InvitationStatus$new(...)"},{"path":[]},{"path":"/reference/InvitationStatus.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationStatus — InvitationStatus","text":"","code":"InvitationStatus$toJSON()"},{"path":[]},{"path":"/reference/InvitationStatus.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationStatus — InvitationStatus","text":"","code":"InvitationStatus$fromJSON(InvitationStatusJson)"},{"path":[]},{"path":"/reference/InvitationStatus.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationStatus — InvitationStatus","text":"","code":"InvitationStatus$toJSONString()"},{"path":[]},{"path":"/reference/InvitationStatus.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationStatus — InvitationStatus","text":"","code":"InvitationStatus$fromJSONString(InvitationStatusJson)"},{"path":"/reference/InvitationStatus.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"InvitationStatus — InvitationStatus","text":"objects class cloneable method.","code":""},{"path":"/reference/InvitationStatus.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationStatus — InvitationStatus","text":"","code":"InvitationStatus$clone(deep = FALSE)"},{"path":"/reference/InvitationStatus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"InvitationStatus — InvitationStatus","text":"deep Whether make deep clone.","code":""},{"path":"/reference/InvitationType.html","id":null,"dir":"Reference","previous_headings":"","what":"InvitationType — InvitationType","title":"InvitationType — InvitationType","text":"InvitationType Class","code":""},{"path":"/reference/InvitationType.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"InvitationType — InvitationType","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/InvitationType.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"InvitationType — InvitationType","text":"InvitationType$new() InvitationType$toJSON() InvitationType$fromJSON() InvitationType$toJSONString() InvitationType$fromJSONString() InvitationType$clone()","code":""},{"path":[]},{"path":"/reference/InvitationType.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationType — InvitationType","text":"","code":"InvitationType$new(...)"},{"path":[]},{"path":"/reference/InvitationType.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationType — InvitationType","text":"","code":"InvitationType$toJSON()"},{"path":[]},{"path":"/reference/InvitationType.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationType — InvitationType","text":"","code":"InvitationType$fromJSON(InvitationTypeJson)"},{"path":[]},{"path":"/reference/InvitationType.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationType — InvitationType","text":"","code":"InvitationType$toJSONString()"},{"path":[]},{"path":"/reference/InvitationType.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationType — InvitationType","text":"","code":"InvitationType$fromJSONString(InvitationTypeJson)"},{"path":"/reference/InvitationType.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"InvitationType — InvitationType","text":"objects class cloneable method.","code":""},{"path":"/reference/InvitationType.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"InvitationType — InvitationType","text":"","code":"InvitationType$clone(deep = FALSE)"},{"path":"/reference/InvitationType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"InvitationType — InvitationType","text":"deep Whether make deep clone.","code":""},{"path":"/reference/LastAccessedArray.html","id":null,"dir":"Reference","previous_headings":"","what":"LastAccessedArray — LastAccessedArray","title":"LastAccessedArray — LastAccessedArray","text":"LastAccessedArray Class","code":""},{"path":"/reference/LastAccessedArray.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"LastAccessedArray — LastAccessedArray","text":"R6Class generator object","code":""},{"path":"/reference/LastAccessedArray.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"LastAccessedArray — LastAccessedArray","text":"array_id character [optional] array_name character [optional] namespace character [optional] accessed_time numeric [optional] access_type ActivityEventType [optional]","code":""},{"path":[]},{"path":"/reference/LastAccessedArray.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"LastAccessedArray — LastAccessedArray","text":"LastAccessedArray$new() LastAccessedArray$toJSON() LastAccessedArray$fromJSON() LastAccessedArray$toJSONString() LastAccessedArray$fromJSONString() LastAccessedArray$clone()","code":""},{"path":[]},{"path":"/reference/LastAccessedArray.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LastAccessedArray — LastAccessedArray","text":"","code":"LastAccessedArray$new(   array_id = NULL,   array_name = NULL,   namespace = NULL,   accessed_time = NULL,   access_type = NULL,   ... )"},{"path":[]},{"path":"/reference/LastAccessedArray.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"LastAccessedArray — LastAccessedArray","text":"","code":"LastAccessedArray$toJSON()"},{"path":[]},{"path":"/reference/LastAccessedArray.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"LastAccessedArray — LastAccessedArray","text":"","code":"LastAccessedArray$fromJSON(LastAccessedArrayJson)"},{"path":[]},{"path":"/reference/LastAccessedArray.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"LastAccessedArray — LastAccessedArray","text":"","code":"LastAccessedArray$toJSONString()"},{"path":[]},{"path":"/reference/LastAccessedArray.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"LastAccessedArray — LastAccessedArray","text":"","code":"LastAccessedArray$fromJSONString(LastAccessedArrayJson)"},{"path":"/reference/LastAccessedArray.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"LastAccessedArray — LastAccessedArray","text":"objects class cloneable method.","code":""},{"path":"/reference/LastAccessedArray.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"LastAccessedArray — LastAccessedArray","text":"","code":"LastAccessedArray$clone(deep = FALSE)"},{"path":"/reference/LastAccessedArray.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LastAccessedArray — LastAccessedArray","text":"deep Whether make deep clone.","code":""},{"path":"/reference/Layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Layout — Layout","title":"Layout — Layout","text":"Layout Class","code":""},{"path":"/reference/Layout.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Layout — Layout","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/Layout.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Layout — Layout","text":"Layout$new() Layout$toJSON() Layout$fromJSON() Layout$toJSONString() Layout$fromJSONString() Layout$clone()","code":""},{"path":[]},{"path":"/reference/Layout.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layout — Layout","text":"","code":"Layout$new(...)"},{"path":[]},{"path":"/reference/Layout.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Layout — Layout","text":"","code":"Layout$toJSON()"},{"path":[]},{"path":"/reference/Layout.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Layout — Layout","text":"","code":"Layout$fromJSON(LayoutJson)"},{"path":[]},{"path":"/reference/Layout.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Layout — Layout","text":"","code":"Layout$toJSONString()"},{"path":[]},{"path":"/reference/Layout.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Layout — Layout","text":"","code":"Layout$fromJSONString(LayoutJson)"},{"path":"/reference/Layout.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Layout — Layout","text":"objects class cloneable method.","code":""},{"path":"/reference/Layout.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Layout — Layout","text":"","code":"Layout$clone(deep = FALSE)"},{"path":"/reference/Layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layout — Layout","text":"deep Whether make deep clone.","code":""},{"path":"/reference/MLModelFavorite.html","id":null,"dir":"Reference","previous_headings":"","what":"MLModelFavorite — MLModelFavorite","title":"MLModelFavorite — MLModelFavorite","text":"MLModelFavorite Class","code":""},{"path":"/reference/MLModelFavorite.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"MLModelFavorite — MLModelFavorite","text":"R6Class generator object","code":""},{"path":"/reference/MLModelFavorite.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"MLModelFavorite — MLModelFavorite","text":"id character [optional] created_at character [optional] mlmodel_uuid character [optional]","code":""},{"path":[]},{"path":"/reference/MLModelFavorite.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"MLModelFavorite — MLModelFavorite","text":"MLModelFavorite$new() MLModelFavorite$toJSON() MLModelFavorite$fromJSON() MLModelFavorite$toJSONString() MLModelFavorite$fromJSONString() MLModelFavorite$clone()","code":""},{"path":[]},{"path":"/reference/MLModelFavorite.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MLModelFavorite — MLModelFavorite","text":"","code":"MLModelFavorite$new(id = NULL, created_at = NULL, mlmodel_uuid = NULL, ...)"},{"path":[]},{"path":"/reference/MLModelFavorite.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"MLModelFavorite — MLModelFavorite","text":"","code":"MLModelFavorite$toJSON()"},{"path":[]},{"path":"/reference/MLModelFavorite.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"MLModelFavorite — MLModelFavorite","text":"","code":"MLModelFavorite$fromJSON(MLModelFavoriteJson)"},{"path":[]},{"path":"/reference/MLModelFavorite.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"MLModelFavorite — MLModelFavorite","text":"","code":"MLModelFavorite$toJSONString()"},{"path":[]},{"path":"/reference/MLModelFavorite.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"MLModelFavorite — MLModelFavorite","text":"","code":"MLModelFavorite$fromJSONString(MLModelFavoriteJson)"},{"path":"/reference/MLModelFavorite.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"MLModelFavorite — MLModelFavorite","text":"objects class cloneable method.","code":""},{"path":"/reference/MLModelFavorite.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"MLModelFavorite — MLModelFavorite","text":"","code":"MLModelFavorite$clone(deep = FALSE)"},{"path":"/reference/MLModelFavorite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MLModelFavorite — MLModelFavorite","text":"deep Whether make deep clone.","code":""},{"path":"/reference/MLModelFavoritesData.html","id":null,"dir":"Reference","previous_headings":"","what":"MLModelFavoritesData — MLModelFavoritesData","title":"MLModelFavoritesData — MLModelFavoritesData","text":"MLModelFavoritesData Class","code":""},{"path":"/reference/MLModelFavoritesData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"MLModelFavoritesData — MLModelFavoritesData","text":"R6Class generator object","code":""},{"path":"/reference/MLModelFavoritesData.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"MLModelFavoritesData — MLModelFavoritesData","text":"mlmodels list( ArrayInfo ) [optional] pagination_metadata PaginationMetadata [optional]","code":""},{"path":[]},{"path":"/reference/MLModelFavoritesData.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"MLModelFavoritesData — MLModelFavoritesData","text":"MLModelFavoritesData$new() MLModelFavoritesData$toJSON() MLModelFavoritesData$fromJSON() MLModelFavoritesData$toJSONString() MLModelFavoritesData$fromJSONString() MLModelFavoritesData$clone()","code":""},{"path":[]},{"path":"/reference/MLModelFavoritesData.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MLModelFavoritesData — MLModelFavoritesData","text":"","code":"MLModelFavoritesData$new(mlmodels = NULL, pagination_metadata = NULL, ...)"},{"path":[]},{"path":"/reference/MLModelFavoritesData.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"MLModelFavoritesData — MLModelFavoritesData","text":"","code":"MLModelFavoritesData$toJSON()"},{"path":[]},{"path":"/reference/MLModelFavoritesData.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"MLModelFavoritesData — MLModelFavoritesData","text":"","code":"MLModelFavoritesData$fromJSON(MLModelFavoritesDataJson)"},{"path":[]},{"path":"/reference/MLModelFavoritesData.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"MLModelFavoritesData — MLModelFavoritesData","text":"","code":"MLModelFavoritesData$toJSONString()"},{"path":[]},{"path":"/reference/MLModelFavoritesData.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"MLModelFavoritesData — MLModelFavoritesData","text":"","code":"MLModelFavoritesData$fromJSONString(MLModelFavoritesDataJson)"},{"path":"/reference/MLModelFavoritesData.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"MLModelFavoritesData — MLModelFavoritesData","text":"objects class cloneable method.","code":""},{"path":"/reference/MLModelFavoritesData.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"MLModelFavoritesData — MLModelFavoritesData","text":"","code":"MLModelFavoritesData$clone(deep = FALSE)"},{"path":"/reference/MLModelFavoritesData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MLModelFavoritesData — MLModelFavoritesData","text":"deep Whether make deep clone.","code":""},{"path":"/reference/MaxBufferSizes.html","id":null,"dir":"Reference","previous_headings":"","what":"MaxBufferSizes — MaxBufferSizes","title":"MaxBufferSizes — MaxBufferSizes","text":"MaxBufferSizes Class","code":""},{"path":"/reference/MaxBufferSizes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"MaxBufferSizes — MaxBufferSizes","text":"R6Class generator object","code":""},{"path":"/reference/MaxBufferSizes.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"MaxBufferSizes — MaxBufferSizes","text":"maxBufferSizes list( AttributeBufferSize ) [optional]","code":""},{"path":[]},{"path":"/reference/MaxBufferSizes.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"MaxBufferSizes — MaxBufferSizes","text":"MaxBufferSizes$new() MaxBufferSizes$toJSON() MaxBufferSizes$fromJSON() MaxBufferSizes$toJSONString() MaxBufferSizes$fromJSONString() MaxBufferSizes$clone()","code":""},{"path":[]},{"path":"/reference/MaxBufferSizes.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MaxBufferSizes — MaxBufferSizes","text":"","code":"MaxBufferSizes$new(maxBufferSizes = NULL, ...)"},{"path":[]},{"path":"/reference/MaxBufferSizes.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"MaxBufferSizes — MaxBufferSizes","text":"","code":"MaxBufferSizes$toJSON()"},{"path":[]},{"path":"/reference/MaxBufferSizes.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"MaxBufferSizes — MaxBufferSizes","text":"","code":"MaxBufferSizes$fromJSON(MaxBufferSizesJson)"},{"path":[]},{"path":"/reference/MaxBufferSizes.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"MaxBufferSizes — MaxBufferSizes","text":"","code":"MaxBufferSizes$toJSONString()"},{"path":[]},{"path":"/reference/MaxBufferSizes.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"MaxBufferSizes — MaxBufferSizes","text":"","code":"MaxBufferSizes$fromJSONString(MaxBufferSizesJson)"},{"path":"/reference/MaxBufferSizes.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"MaxBufferSizes — MaxBufferSizes","text":"objects class cloneable method.","code":""},{"path":"/reference/MaxBufferSizes.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"MaxBufferSizes — MaxBufferSizes","text":"","code":"MaxBufferSizes$clone(deep = FALSE)"},{"path":"/reference/MaxBufferSizes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MaxBufferSizes — MaxBufferSizes","text":"deep Whether make deep clone.","code":""},{"path":"/reference/MultiArrayUDF.html","id":null,"dir":"Reference","previous_headings":"","what":"MultiArrayUDF — MultiArrayUDF","title":"MultiArrayUDF — MultiArrayUDF","text":"MultiArrayUDF Class","code":""},{"path":"/reference/MultiArrayUDF.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"MultiArrayUDF — MultiArrayUDF","text":"R6Class generator object","code":""},{"path":"/reference/MultiArrayUDF.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"MultiArrayUDF — MultiArrayUDF","text":"udf_info_name character [optional] language UDFLanguage [optional] version character [optional] image_name character [optional] exec character [optional] exec_raw character [optional] result_format ResultFormat [optional] task_name character [optional] argument character [optional] stored_param_uuids list( character ) [optional] store_results character [optional] ranges QueryRanges [optional] subarray UDFSubarray [optional] buffers list( character ) [optional] arrays list( UDFArrayDetails ) [optional]","code":""},{"path":[]},{"path":"/reference/MultiArrayUDF.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"MultiArrayUDF — MultiArrayUDF","text":"MultiArrayUDF$new() MultiArrayUDF$toJSON() MultiArrayUDF$fromJSON() MultiArrayUDF$toJSONString() MultiArrayUDF$fromJSONString() MultiArrayUDF$clone()","code":""},{"path":[]},{"path":"/reference/MultiArrayUDF.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiArrayUDF — MultiArrayUDF","text":"","code":"MultiArrayUDF$new(   udf_info_name = NULL,   language = NULL,   version = NULL,   image_name = NULL,   exec = NULL,   exec_raw = NULL,   result_format = NULL,   task_name = NULL,   argument = NULL,   stored_param_uuids = NULL,   store_results = NULL,   ranges = NULL,   subarray = NULL,   buffers = NULL,   arrays = NULL,   ... )"},{"path":[]},{"path":"/reference/MultiArrayUDF.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiArrayUDF — MultiArrayUDF","text":"","code":"MultiArrayUDF$toJSON()"},{"path":[]},{"path":"/reference/MultiArrayUDF.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiArrayUDF — MultiArrayUDF","text":"","code":"MultiArrayUDF$fromJSON(MultiArrayUDFJson)"},{"path":[]},{"path":"/reference/MultiArrayUDF.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiArrayUDF — MultiArrayUDF","text":"","code":"MultiArrayUDF$toJSONString()"},{"path":[]},{"path":"/reference/MultiArrayUDF.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiArrayUDF — MultiArrayUDF","text":"","code":"MultiArrayUDF$fromJSONString(MultiArrayUDFJson)"},{"path":"/reference/MultiArrayUDF.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"MultiArrayUDF — MultiArrayUDF","text":"objects class cloneable method.","code":""},{"path":"/reference/MultiArrayUDF.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiArrayUDF — MultiArrayUDF","text":"","code":"MultiArrayUDF$clone(deep = FALSE)"},{"path":"/reference/MultiArrayUDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiArrayUDF — MultiArrayUDF","text":"deep Whether make deep clone.","code":""},{"path":"/reference/NamespaceActions.html","id":null,"dir":"Reference","previous_headings":"","what":"NamespaceActions — NamespaceActions","title":"NamespaceActions — NamespaceActions","text":"NamespaceActions Class","code":""},{"path":"/reference/NamespaceActions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NamespaceActions — NamespaceActions","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/NamespaceActions.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"NamespaceActions — NamespaceActions","text":"NamespaceActions$new() NamespaceActions$toJSON() NamespaceActions$fromJSON() NamespaceActions$toJSONString() NamespaceActions$fromJSONString() NamespaceActions$clone()","code":""},{"path":[]},{"path":"/reference/NamespaceActions.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NamespaceActions — NamespaceActions","text":"","code":"NamespaceActions$new(...)"},{"path":[]},{"path":"/reference/NamespaceActions.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"NamespaceActions — NamespaceActions","text":"","code":"NamespaceActions$toJSON()"},{"path":[]},{"path":"/reference/NamespaceActions.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"NamespaceActions — NamespaceActions","text":"","code":"NamespaceActions$fromJSON(NamespaceActionsJson)"},{"path":[]},{"path":"/reference/NamespaceActions.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"NamespaceActions — NamespaceActions","text":"","code":"NamespaceActions$toJSONString()"},{"path":[]},{"path":"/reference/NamespaceActions.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"NamespaceActions — NamespaceActions","text":"","code":"NamespaceActions$fromJSONString(NamespaceActionsJson)"},{"path":"/reference/NamespaceActions.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"NamespaceActions — NamespaceActions","text":"objects class cloneable method.","code":""},{"path":"/reference/NamespaceActions.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"NamespaceActions — NamespaceActions","text":"","code":"NamespaceActions$clone(deep = FALSE)"},{"path":"/reference/NamespaceActions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NamespaceActions — NamespaceActions","text":"deep Whether make deep clone.","code":""},{"path":"/reference/NonEmptyDomain.html","id":null,"dir":"Reference","previous_headings":"","what":"NonEmptyDomain — NonEmptyDomain","title":"NonEmptyDomain — NonEmptyDomain","text":"NonEmptyDomain Class","code":""},{"path":"/reference/NonEmptyDomain.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NonEmptyDomain — NonEmptyDomain","text":"R6Class generator object","code":""},{"path":"/reference/NonEmptyDomain.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"NonEmptyDomain — NonEmptyDomain","text":"nonEmptyDomain DomainArray isEmpty character","code":""},{"path":[]},{"path":"/reference/NonEmptyDomain.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"NonEmptyDomain — NonEmptyDomain","text":"NonEmptyDomain$new() NonEmptyDomain$toJSON() NonEmptyDomain$fromJSON() NonEmptyDomain$toJSONString() NonEmptyDomain$fromJSONString() NonEmptyDomain$clone()","code":""},{"path":[]},{"path":"/reference/NonEmptyDomain.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NonEmptyDomain — NonEmptyDomain","text":"","code":"NonEmptyDomain$new(nonEmptyDomain, isEmpty, ...)"},{"path":[]},{"path":"/reference/NonEmptyDomain.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"NonEmptyDomain — NonEmptyDomain","text":"","code":"NonEmptyDomain$toJSON()"},{"path":[]},{"path":"/reference/NonEmptyDomain.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"NonEmptyDomain — NonEmptyDomain","text":"","code":"NonEmptyDomain$fromJSON(NonEmptyDomainJson)"},{"path":[]},{"path":"/reference/NonEmptyDomain.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"NonEmptyDomain — NonEmptyDomain","text":"","code":"NonEmptyDomain$toJSONString()"},{"path":[]},{"path":"/reference/NonEmptyDomain.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"NonEmptyDomain — NonEmptyDomain","text":"","code":"NonEmptyDomain$fromJSONString(NonEmptyDomainJson)"},{"path":"/reference/NonEmptyDomain.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"NonEmptyDomain — NonEmptyDomain","text":"objects class cloneable method.","code":""},{"path":"/reference/NonEmptyDomain.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"NonEmptyDomain — NonEmptyDomain","text":"","code":"NonEmptyDomain$clone(deep = FALSE)"},{"path":"/reference/NonEmptyDomain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NonEmptyDomain — NonEmptyDomain","text":"deep Whether make deep clone.","code":""},{"path":"/reference/NotebookApi.html","id":null,"dir":"Reference","previous_headings":"","what":"Notebook operations — NotebookApi","title":"Notebook operations — NotebookApi","text":"tiledbcloud.Notebook","code":""},{"path":"/reference/NotebookApi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Notebook operations — NotebookApi","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/NotebookApi.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Notebook operations — NotebookApi","text":"apiClient Handles client-server communication.","code":""},{"path":[]},{"path":"/reference/NotebookApi.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Notebook operations — NotebookApi","text":"NotebookApi$new() NotebookApi$GetNotebookServerStatus() NotebookApi$GetNotebookServerStatusWithHttpInfo() NotebookApi$ShutdownNotebookServer() NotebookApi$ShutdownNotebookServerWithHttpInfo() NotebookApi$UpdateNotebookName() NotebookApi$UpdateNotebookNameWithHttpInfo() NotebookApi$clone()","code":""},{"path":[]},{"path":"/reference/NotebookApi.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Notebook operations — NotebookApi","text":"","code":"NotebookApi$new(apiClient)"},{"path":[]},{"path":"/reference/NotebookApi.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Notebook operations — NotebookApi","text":"","code":"NotebookApi$GetNotebookServerStatus(namespace, ...)"},{"path":[]},{"path":"/reference/NotebookApi.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Notebook operations — NotebookApi","text":"","code":"NotebookApi$GetNotebookServerStatusWithHttpInfo(namespace, ...)"},{"path":[]},{"path":"/reference/NotebookApi.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Notebook operations — NotebookApi","text":"","code":"NotebookApi$ShutdownNotebookServer(namespace, ...)"},{"path":[]},{"path":"/reference/NotebookApi.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Notebook operations — NotebookApi","text":"","code":"NotebookApi$ShutdownNotebookServerWithHttpInfo(namespace, ...)"},{"path":[]},{"path":"/reference/NotebookApi.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Notebook operations — NotebookApi","text":"","code":"NotebookApi$UpdateNotebookName(namespace, array, notebook.metadata, ...)"},{"path":[]},{"path":"/reference/NotebookApi.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Notebook operations — NotebookApi","text":"","code":"NotebookApi$UpdateNotebookNameWithHttpInfo(   namespace,   array,   notebook.metadata,   ... )"},{"path":"/reference/NotebookApi.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Notebook operations — NotebookApi","text":"objects class cloneable method.","code":""},{"path":"/reference/NotebookApi.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Notebook operations — NotebookApi","text":"","code":"NotebookApi$clone(deep = FALSE)"},{"path":"/reference/NotebookApi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Notebook operations — NotebookApi","text":"deep Whether make deep clone.","code":""},{"path":"/reference/NotebookApi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Notebook operations — NotebookApi","text":"","code":"if (FALSE) { ####################  GetNotebookServerStatus  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace notebook is in (an organization name or user's username)  api.instance <- NotebookApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetNotebookServerStatus(var.namespace)   ####################  ShutdownNotebookServer  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace notebook is in (an organization name or user's username)  api.instance <- NotebookApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$ShutdownNotebookServer(var.namespace)   ####################  UpdateNotebookName  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace array is in (an organization name or user's username) var.array <- 'array_example' # character | name/uri of notebook (array) that is url-encoded var.notebook.metadata <- ArrayInfoUpdate$new() # ArrayInfoUpdate | notebook (array) metadata to update  api.instance <- NotebookApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$UpdateNotebookName(var.namespace, var.array, var.notebook.metadata)   }"},{"path":"/reference/NotebookFavorite.html","id":null,"dir":"Reference","previous_headings":"","what":"NotebookFavorite — NotebookFavorite","title":"NotebookFavorite — NotebookFavorite","text":"NotebookFavorite Class","code":""},{"path":"/reference/NotebookFavorite.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NotebookFavorite — NotebookFavorite","text":"R6Class generator object","code":""},{"path":"/reference/NotebookFavorite.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"NotebookFavorite — NotebookFavorite","text":"id character [optional] created_at character [optional] notebook_uuid character [optional]","code":""},{"path":[]},{"path":"/reference/NotebookFavorite.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"NotebookFavorite — NotebookFavorite","text":"NotebookFavorite$new() NotebookFavorite$toJSON() NotebookFavorite$fromJSON() NotebookFavorite$toJSONString() NotebookFavorite$fromJSONString() NotebookFavorite$clone()","code":""},{"path":[]},{"path":"/reference/NotebookFavorite.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NotebookFavorite — NotebookFavorite","text":"","code":"NotebookFavorite$new(id = NULL, created_at = NULL, notebook_uuid = NULL, ...)"},{"path":[]},{"path":"/reference/NotebookFavorite.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"NotebookFavorite — NotebookFavorite","text":"","code":"NotebookFavorite$toJSON()"},{"path":[]},{"path":"/reference/NotebookFavorite.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"NotebookFavorite — NotebookFavorite","text":"","code":"NotebookFavorite$fromJSON(NotebookFavoriteJson)"},{"path":[]},{"path":"/reference/NotebookFavorite.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"NotebookFavorite — NotebookFavorite","text":"","code":"NotebookFavorite$toJSONString()"},{"path":[]},{"path":"/reference/NotebookFavorite.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"NotebookFavorite — NotebookFavorite","text":"","code":"NotebookFavorite$fromJSONString(NotebookFavoriteJson)"},{"path":"/reference/NotebookFavorite.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"NotebookFavorite — NotebookFavorite","text":"objects class cloneable method.","code":""},{"path":"/reference/NotebookFavorite.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"NotebookFavorite — NotebookFavorite","text":"","code":"NotebookFavorite$clone(deep = FALSE)"},{"path":"/reference/NotebookFavorite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NotebookFavorite — NotebookFavorite","text":"deep Whether make deep clone.","code":""},{"path":"/reference/NotebookFavoritesData.html","id":null,"dir":"Reference","previous_headings":"","what":"NotebookFavoritesData — NotebookFavoritesData","title":"NotebookFavoritesData — NotebookFavoritesData","text":"NotebookFavoritesData Class","code":""},{"path":"/reference/NotebookFavoritesData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NotebookFavoritesData — NotebookFavoritesData","text":"R6Class generator object","code":""},{"path":"/reference/NotebookFavoritesData.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"NotebookFavoritesData — NotebookFavoritesData","text":"notebooks list( ArrayInfo ) [optional] pagination_metadata PaginationMetadata [optional]","code":""},{"path":[]},{"path":"/reference/NotebookFavoritesData.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"NotebookFavoritesData — NotebookFavoritesData","text":"NotebookFavoritesData$new() NotebookFavoritesData$toJSON() NotebookFavoritesData$fromJSON() NotebookFavoritesData$toJSONString() NotebookFavoritesData$fromJSONString() NotebookFavoritesData$clone()","code":""},{"path":[]},{"path":"/reference/NotebookFavoritesData.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NotebookFavoritesData — NotebookFavoritesData","text":"","code":"NotebookFavoritesData$new(notebooks = NULL, pagination_metadata = NULL, ...)"},{"path":[]},{"path":"/reference/NotebookFavoritesData.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"NotebookFavoritesData — NotebookFavoritesData","text":"","code":"NotebookFavoritesData$toJSON()"},{"path":[]},{"path":"/reference/NotebookFavoritesData.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"NotebookFavoritesData — NotebookFavoritesData","text":"","code":"NotebookFavoritesData$fromJSON(NotebookFavoritesDataJson)"},{"path":[]},{"path":"/reference/NotebookFavoritesData.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"NotebookFavoritesData — NotebookFavoritesData","text":"","code":"NotebookFavoritesData$toJSONString()"},{"path":[]},{"path":"/reference/NotebookFavoritesData.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"NotebookFavoritesData — NotebookFavoritesData","text":"","code":"NotebookFavoritesData$fromJSONString(NotebookFavoritesDataJson)"},{"path":"/reference/NotebookFavoritesData.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"NotebookFavoritesData — NotebookFavoritesData","text":"objects class cloneable method.","code":""},{"path":"/reference/NotebookFavoritesData.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"NotebookFavoritesData — NotebookFavoritesData","text":"","code":"NotebookFavoritesData$clone(deep = FALSE)"},{"path":"/reference/NotebookFavoritesData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NotebookFavoritesData — NotebookFavoritesData","text":"deep Whether make deep clone.","code":""},{"path":"/reference/NotebookStatus.html","id":null,"dir":"Reference","previous_headings":"","what":"NotebookStatus — NotebookStatus","title":"NotebookStatus — NotebookStatus","text":"NotebookStatus Class","code":""},{"path":"/reference/NotebookStatus.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NotebookStatus — NotebookStatus","text":"R6Class generator object","code":""},{"path":"/reference/NotebookStatus.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"NotebookStatus — NotebookStatus","text":"namespace character [optional] uptime integer [optional] cpu_usage integer [optional] memory_usage integer [optional] memory_limit integer [optional] cpu_count integer [optional]","code":""},{"path":[]},{"path":"/reference/NotebookStatus.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"NotebookStatus — NotebookStatus","text":"NotebookStatus$new() NotebookStatus$toJSON() NotebookStatus$fromJSON() NotebookStatus$toJSONString() NotebookStatus$fromJSONString() NotebookStatus$clone()","code":""},{"path":[]},{"path":"/reference/NotebookStatus.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NotebookStatus — NotebookStatus","text":"","code":"NotebookStatus$new(   namespace = NULL,   uptime = NULL,   cpu_usage = NULL,   memory_usage = NULL,   memory_limit = NULL,   cpu_count = NULL,   ... )"},{"path":[]},{"path":"/reference/NotebookStatus.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"NotebookStatus — NotebookStatus","text":"","code":"NotebookStatus$toJSON()"},{"path":[]},{"path":"/reference/NotebookStatus.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"NotebookStatus — NotebookStatus","text":"","code":"NotebookStatus$fromJSON(NotebookStatusJson)"},{"path":[]},{"path":"/reference/NotebookStatus.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"NotebookStatus — NotebookStatus","text":"","code":"NotebookStatus$toJSONString()"},{"path":[]},{"path":"/reference/NotebookStatus.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"NotebookStatus — NotebookStatus","text":"","code":"NotebookStatus$fromJSONString(NotebookStatusJson)"},{"path":"/reference/NotebookStatus.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"NotebookStatus — NotebookStatus","text":"objects class cloneable method.","code":""},{"path":"/reference/NotebookStatus.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"NotebookStatus — NotebookStatus","text":"","code":"NotebookStatus$clone(deep = FALSE)"},{"path":"/reference/NotebookStatus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NotebookStatus — NotebookStatus","text":"deep Whether make deep clone.","code":""},{"path":"/reference/NotebooksApi.html","id":null,"dir":"Reference","previous_headings":"","what":"Notebooks operations — NotebooksApi","title":"Notebooks operations — NotebooksApi","text":"tiledbcloud.Notebooks","code":""},{"path":"/reference/NotebooksApi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Notebooks operations — NotebooksApi","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/NotebooksApi.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Notebooks operations — NotebooksApi","text":"apiClient Handles client-server communication.","code":""},{"path":[]},{"path":"/reference/NotebooksApi.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Notebooks operations — NotebooksApi","text":"NotebooksApi$new() NotebooksApi$NotebooksNamespaceArrayEndTimestampsGet() NotebooksApi$NotebooksNamespaceArrayEndTimestampsGetWithHttpInfo() NotebooksApi$clone()","code":""},{"path":[]},{"path":"/reference/NotebooksApi.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Notebooks operations — NotebooksApi","text":"","code":"NotebooksApi$new(apiClient)"},{"path":[]},{"path":"/reference/NotebooksApi.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Notebooks operations — NotebooksApi","text":"","code":"NotebooksApi$NotebooksNamespaceArrayEndTimestampsGet(   namespace,   array,   page = NULL,   per.page = NULL,   ... )"},{"path":[]},{"path":"/reference/NotebooksApi.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Notebooks operations — NotebooksApi","text":"","code":"NotebooksApi$NotebooksNamespaceArrayEndTimestampsGetWithHttpInfo(   namespace,   array,   page = NULL,   per.page = NULL,   ... )"},{"path":"/reference/NotebooksApi.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Notebooks operations — NotebooksApi","text":"objects class cloneable method.","code":""},{"path":"/reference/NotebooksApi.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Notebooks operations — NotebooksApi","text":"","code":"NotebooksApi$clone(deep = FALSE)"},{"path":"/reference/NotebooksApi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Notebooks operations — NotebooksApi","text":"deep Whether make deep clone.","code":""},{"path":"/reference/NotebooksApi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Notebooks operations — NotebooksApi","text":"","code":"if (FALSE) { ####################  NotebooksNamespaceArrayEndTimestampsGet  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace array is in (an organization name or user's username) var.array <- 'array_example' # character | name/uri of array that is url-encoded var.page <- 56 # integer | pagination offset var.per.page <- 56 # integer | pagination limit  api.instance <- NotebooksApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$NotebooksNamespaceArrayEndTimestampsGet(var.namespace, var.array, page=var.page, per.page=var.per.page)   }"},{"path":"/reference/Organization.html","id":null,"dir":"Reference","previous_headings":"","what":"Organization — Organization","title":"Organization — Organization","text":"Organization Class","code":""},{"path":"/reference/Organization.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Organization — Organization","text":"R6Class generator object","code":""},{"path":"/reference/Organization.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Organization — Organization","text":"id character [optional] role OrganizationRoles [optional] name character created_at character [optional] updated_at character [optional] logo character [optional] description character [optional] users list( OrganizationUser ) [optional] allowed_actions list( NamespaceActions ) [optional] num_of_arrays numeric [optional] enabled_features list( character ) [optional] unpaid_subscription character [optional] default_s3_path character [optional] default_s3_path_credentials_name character [optional] stripe_connect character [optional]","code":""},{"path":[]},{"path":"/reference/Organization.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Organization — Organization","text":"Organization$new() Organization$toJSON() Organization$fromJSON() Organization$toJSONString() Organization$fromJSONString() Organization$clone()","code":""},{"path":[]},{"path":"/reference/Organization.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization — Organization","text":"","code":"Organization$new(   name,   id = NULL,   role = NULL,   created_at = NULL,   updated_at = NULL,   logo = NULL,   description = NULL,   users = NULL,   allowed_actions = NULL,   num_of_arrays = NULL,   enabled_features = NULL,   unpaid_subscription = NULL,   default_s3_path = NULL,   default_s3_path_credentials_name = NULL,   stripe_connect = NULL,   ... )"},{"path":[]},{"path":"/reference/Organization.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization — Organization","text":"","code":"Organization$toJSON()"},{"path":[]},{"path":"/reference/Organization.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization — Organization","text":"","code":"Organization$fromJSON(OrganizationJson)"},{"path":[]},{"path":"/reference/Organization.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization — Organization","text":"","code":"Organization$toJSONString()"},{"path":[]},{"path":"/reference/Organization.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization — Organization","text":"","code":"Organization$fromJSONString(OrganizationJson)"},{"path":"/reference/Organization.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Organization — Organization","text":"objects class cloneable method.","code":""},{"path":"/reference/Organization.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization — Organization","text":"","code":"Organization$clone(deep = FALSE)"},{"path":"/reference/Organization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Organization — Organization","text":"deep Whether make deep clone.","code":""},{"path":"/reference/OrganizationApi.html","id":null,"dir":"Reference","previous_headings":"","what":"Organization operations — OrganizationApi","title":"Organization operations — OrganizationApi","text":"tiledbcloud.Organization","code":""},{"path":"/reference/OrganizationApi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Organization operations — OrganizationApi","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Organization operations — OrganizationApi","text":"apiClient Handles client-server communication.","code":""},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Organization operations — OrganizationApi","text":"OrganizationApi$new() OrganizationApi$AddAWSAccessCredentials() OrganizationApi$AddAWSAccessCredentialsWithHttpInfo() OrganizationApi$AddUserToOrganization() OrganizationApi$AddUserToOrganizationWithHttpInfo() OrganizationApi$CheckAWSAccessCredentials() OrganizationApi$CheckAWSAccessCredentialsWithHttpInfo() OrganizationApi$CheckAWSAccessCredentialsByName() OrganizationApi$CheckAWSAccessCredentialsByNameWithHttpInfo() OrganizationApi$CreateOrganization() OrganizationApi$CreateOrganizationWithHttpInfo() OrganizationApi$DeleteAWSAccessCredentials() OrganizationApi$DeleteAWSAccessCredentialsWithHttpInfo() OrganizationApi$DeleteOrganization() OrganizationApi$DeleteOrganizationWithHttpInfo() OrganizationApi$DeleteUserFromOrganization() OrganizationApi$DeleteUserFromOrganizationWithHttpInfo() OrganizationApi$GetAllOrganizations() OrganizationApi$GetAllOrganizationsWithHttpInfo() OrganizationApi$GetOrganization() OrganizationApi$GetOrganizationWithHttpInfo() OrganizationApi$GetOrganizationUser() OrganizationApi$GetOrganizationUserWithHttpInfo() OrganizationApi$UpdateAWSAccessCredentials() OrganizationApi$UpdateAWSAccessCredentialsWithHttpInfo() OrganizationApi$UpdateOrganization() OrganizationApi$UpdateOrganizationWithHttpInfo() OrganizationApi$UpdateUserInOrganization() OrganizationApi$UpdateUserInOrganizationWithHttpInfo() OrganizationApi$clone()","code":""},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$new(apiClient)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$AddAWSAccessCredentials(namespace, aws.access.credentials, ...)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$AddAWSAccessCredentialsWithHttpInfo(   namespace,   aws.access.credentials,   ... )"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$AddUserToOrganization(organization, user, ...)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$AddUserToOrganizationWithHttpInfo(organization, user, ...)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$CheckAWSAccessCredentials(namespace, ...)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$CheckAWSAccessCredentialsWithHttpInfo(namespace, ...)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$CheckAWSAccessCredentialsByName(namespace, name, ...)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$CheckAWSAccessCredentialsByNameWithHttpInfo(   namespace,   name,   ... )"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$CreateOrganization(organization, ...)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$CreateOrganizationWithHttpInfo(organization, ...)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$DeleteAWSAccessCredentials(namespace, name, ...)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$DeleteAWSAccessCredentialsWithHttpInfo(namespace, name, ...)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$DeleteOrganization(organization, ...)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$DeleteOrganizationWithHttpInfo(organization, ...)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$DeleteUserFromOrganization(organization, username, ...)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$DeleteUserFromOrganizationWithHttpInfo(   organization,   username,   ... )"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$GetAllOrganizations(...)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$GetAllOrganizationsWithHttpInfo(...)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$GetOrganization(organization, ...)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$GetOrganizationWithHttpInfo(organization, ...)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$GetOrganizationUser(organization, username, ...)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$GetOrganizationUserWithHttpInfo(organization, username, ...)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$UpdateAWSAccessCredentials(   namespace,   name,   aws.access.credentials,   ... )"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$UpdateAWSAccessCredentialsWithHttpInfo(   namespace,   name,   aws.access.credentials,   ... )"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-25","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$UpdateOrganization(organization, organization.details, ...)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-26","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$UpdateOrganizationWithHttpInfo(   organization,   organization.details,   ... )"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-27","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$UpdateUserInOrganization(organization, username, user, ...)"},{"path":[]},{"path":"/reference/OrganizationApi.html","id":"usage-28","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$UpdateUserInOrganizationWithHttpInfo(   organization,   username,   user,   ... )"},{"path":"/reference/OrganizationApi.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Organization operations — OrganizationApi","text":"objects class cloneable method.","code":""},{"path":"/reference/OrganizationApi.html","id":"usage-29","dir":"Reference","previous_headings":"","what":"Usage","title":"Organization operations — OrganizationApi","text":"","code":"OrganizationApi$clone(deep = FALSE)"},{"path":"/reference/OrganizationApi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Organization operations — OrganizationApi","text":"deep Whether make deep clone.","code":""},{"path":"/reference/OrganizationApi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Organization operations — OrganizationApi","text":"","code":"if (FALSE) { ####################  AddAWSAccessCredentials  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace var.aws.access.credentials <- AWSAccessCredentials$new() # AWSAccessCredentials | aws access credentials to store for a namespace  api.instance <- OrganizationApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$AddAWSAccessCredentials(var.namespace, var.aws.access.credentials)   ####################  AddUserToOrganization  ####################  library(tiledbcloud) var.organization <- 'organization_example' # character | organization name var.user <- OrganizationUser$new() # OrganizationUser | user to add  api.instance <- OrganizationApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$AddUserToOrganization(var.organization, var.user)   ####################  CheckAWSAccessCredentials  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace  api.instance <- OrganizationApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$CheckAWSAccessCredentials(var.namespace)   ####################  CheckAWSAccessCredentialsByName  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace var.name <- 'name_example' # character | name  api.instance <- OrganizationApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$CheckAWSAccessCredentialsByName(var.namespace, var.name)   ####################  CreateOrganization  ####################  library(tiledbcloud) var.organization <- Organization$new() # Organization | organization to create  api.instance <- OrganizationApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$CreateOrganization(var.organization)   ####################  DeleteAWSAccessCredentials  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace var.name <- 'name_example' # character | name  api.instance <- OrganizationApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$DeleteAWSAccessCredentials(var.namespace, var.name)   ####################  DeleteOrganization  ####################  library(tiledbcloud) var.organization <- 'organization_example' # character | organization name or id  api.instance <- OrganizationApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$DeleteOrganization(var.organization)   ####################  DeleteUserFromOrganization  ####################  library(tiledbcloud) var.organization <- 'organization_example' # character | organization name var.username <- 'username_example' # character | username to manipulate  api.instance <- OrganizationApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$DeleteUserFromOrganization(var.organization, var.username)   ####################  GetAllOrganizations  ####################  library(tiledbcloud)  api.instance <- OrganizationApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetAllOrganizations()   ####################  GetOrganization  ####################  library(tiledbcloud) var.organization <- 'organization_example' # character | organization name or id  api.instance <- OrganizationApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetOrganization(var.organization)   ####################  GetOrganizationUser  ####################  library(tiledbcloud) var.organization <- 'organization_example' # character | organization name var.username <- 'username_example' # character | username to manipulate  api.instance <- OrganizationApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetOrganizationUser(var.organization, var.username)   ####################  UpdateAWSAccessCredentials  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace var.name <- 'name_example' # character | name var.aws.access.credentials <- AWSAccessCredentials$new() # AWSAccessCredentials | aws credentials to update  api.instance <- OrganizationApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$UpdateAWSAccessCredentials(var.namespace, var.name, var.aws.access.credentials)   ####################  UpdateOrganization  ####################  library(tiledbcloud) var.organization <- 'organization_example' # character | organization name or id var.organization.details <- Organization$new() # Organization | organization details to update  api.instance <- OrganizationApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$UpdateOrganization(var.organization, var.organization.details)   ####################  UpdateUserInOrganization  ####################  library(tiledbcloud) var.organization <- 'organization_example' # character | organization name var.username <- 'username_example' # character | username to manipulate var.user <- OrganizationUser$new() # OrganizationUser | user details to update  api.instance <- OrganizationApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$UpdateUserInOrganization(var.organization, var.username, var.user)   }"},{"path":"/reference/OrganizationRoles.html","id":null,"dir":"Reference","previous_headings":"","what":"OrganizationRoles — OrganizationRoles","title":"OrganizationRoles — OrganizationRoles","text":"OrganizationRoles Class","code":""},{"path":"/reference/OrganizationRoles.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OrganizationRoles — OrganizationRoles","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/OrganizationRoles.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"OrganizationRoles — OrganizationRoles","text":"OrganizationRoles$new() OrganizationRoles$toJSON() OrganizationRoles$fromJSON() OrganizationRoles$toJSONString() OrganizationRoles$fromJSONString() OrganizationRoles$clone()","code":""},{"path":[]},{"path":"/reference/OrganizationRoles.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OrganizationRoles — OrganizationRoles","text":"","code":"OrganizationRoles$new(...)"},{"path":[]},{"path":"/reference/OrganizationRoles.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"OrganizationRoles — OrganizationRoles","text":"","code":"OrganizationRoles$toJSON()"},{"path":[]},{"path":"/reference/OrganizationRoles.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"OrganizationRoles — OrganizationRoles","text":"","code":"OrganizationRoles$fromJSON(OrganizationRolesJson)"},{"path":[]},{"path":"/reference/OrganizationRoles.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"OrganizationRoles — OrganizationRoles","text":"","code":"OrganizationRoles$toJSONString()"},{"path":[]},{"path":"/reference/OrganizationRoles.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"OrganizationRoles — OrganizationRoles","text":"","code":"OrganizationRoles$fromJSONString(OrganizationRolesJson)"},{"path":"/reference/OrganizationRoles.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"OrganizationRoles — OrganizationRoles","text":"objects class cloneable method.","code":""},{"path":"/reference/OrganizationRoles.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"OrganizationRoles — OrganizationRoles","text":"","code":"OrganizationRoles$clone(deep = FALSE)"},{"path":"/reference/OrganizationRoles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OrganizationRoles — OrganizationRoles","text":"deep Whether make deep clone.","code":""},{"path":"/reference/OrganizationUser.html","id":null,"dir":"Reference","previous_headings":"","what":"OrganizationUser — OrganizationUser","title":"OrganizationUser — OrganizationUser","text":"OrganizationUser Class","code":""},{"path":"/reference/OrganizationUser.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OrganizationUser — OrganizationUser","text":"R6Class generator object","code":""},{"path":"/reference/OrganizationUser.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"OrganizationUser — OrganizationUser","text":"user_id character [optional] organization_id character [optional] username character [optional] organization_name character [optional] role OrganizationRoles [optional] allowed_actions list( NamespaceActions ) [optional]","code":""},{"path":[]},{"path":"/reference/OrganizationUser.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"OrganizationUser — OrganizationUser","text":"OrganizationUser$new() OrganizationUser$toJSON() OrganizationUser$fromJSON() OrganizationUser$toJSONString() OrganizationUser$fromJSONString() OrganizationUser$clone()","code":""},{"path":[]},{"path":"/reference/OrganizationUser.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OrganizationUser — OrganizationUser","text":"","code":"OrganizationUser$new(   user_id = NULL,   organization_id = NULL,   username = NULL,   organization_name = NULL,   role = NULL,   allowed_actions = NULL,   ... )"},{"path":[]},{"path":"/reference/OrganizationUser.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"OrganizationUser — OrganizationUser","text":"","code":"OrganizationUser$toJSON()"},{"path":[]},{"path":"/reference/OrganizationUser.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"OrganizationUser — OrganizationUser","text":"","code":"OrganizationUser$fromJSON(OrganizationUserJson)"},{"path":[]},{"path":"/reference/OrganizationUser.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"OrganizationUser — OrganizationUser","text":"","code":"OrganizationUser$toJSONString()"},{"path":[]},{"path":"/reference/OrganizationUser.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"OrganizationUser — OrganizationUser","text":"","code":"OrganizationUser$fromJSONString(OrganizationUserJson)"},{"path":"/reference/OrganizationUser.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"OrganizationUser — OrganizationUser","text":"objects class cloneable method.","code":""},{"path":"/reference/OrganizationUser.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"OrganizationUser — OrganizationUser","text":"","code":"OrganizationUser$clone(deep = FALSE)"},{"path":"/reference/OrganizationUser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OrganizationUser — OrganizationUser","text":"deep Whether make deep clone.","code":""},{"path":"/reference/PaginationMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"PaginationMetadata — PaginationMetadata","title":"PaginationMetadata — PaginationMetadata","text":"PaginationMetadata Class","code":""},{"path":"/reference/PaginationMetadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PaginationMetadata — PaginationMetadata","text":"R6Class generator object","code":""},{"path":"/reference/PaginationMetadata.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"PaginationMetadata — PaginationMetadata","text":"page numeric [optional] per_page numeric [optional] total_pages numeric [optional] total_items numeric [optional]","code":""},{"path":[]},{"path":"/reference/PaginationMetadata.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PaginationMetadata — PaginationMetadata","text":"PaginationMetadata$new() PaginationMetadata$toJSON() PaginationMetadata$fromJSON() PaginationMetadata$toJSONString() PaginationMetadata$fromJSONString() PaginationMetadata$clone()","code":""},{"path":[]},{"path":"/reference/PaginationMetadata.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PaginationMetadata — PaginationMetadata","text":"","code":"PaginationMetadata$new(   page = NULL,   per_page = NULL,   total_pages = NULL,   total_items = NULL,   ... )"},{"path":[]},{"path":"/reference/PaginationMetadata.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PaginationMetadata — PaginationMetadata","text":"","code":"PaginationMetadata$toJSON()"},{"path":[]},{"path":"/reference/PaginationMetadata.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PaginationMetadata — PaginationMetadata","text":"","code":"PaginationMetadata$fromJSON(PaginationMetadataJson)"},{"path":[]},{"path":"/reference/PaginationMetadata.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"PaginationMetadata — PaginationMetadata","text":"","code":"PaginationMetadata$toJSONString()"},{"path":[]},{"path":"/reference/PaginationMetadata.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"PaginationMetadata — PaginationMetadata","text":"","code":"PaginationMetadata$fromJSONString(PaginationMetadataJson)"},{"path":"/reference/PaginationMetadata.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PaginationMetadata — PaginationMetadata","text":"objects class cloneable method.","code":""},{"path":"/reference/PaginationMetadata.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"PaginationMetadata — PaginationMetadata","text":"","code":"PaginationMetadata$clone(deep = FALSE)"},{"path":"/reference/PaginationMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PaginationMetadata — PaginationMetadata","text":"deep Whether make deep clone.","code":""},{"path":"/reference/Pricing.html","id":null,"dir":"Reference","previous_headings":"","what":"Pricing — Pricing","title":"Pricing — Pricing","text":"Pricing Class","code":""},{"path":"/reference/Pricing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pricing — Pricing","text":"R6Class generator object","code":""},{"path":"/reference/Pricing.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Pricing — Pricing","text":"id character [optional] array_uuid character [optional] pricing_name character [optional] pricing_type PricingType [optional] product_name character [optional] product_statement_descriptor character [optional] product_unit_label PricingUnitLabel [optional] currency PricingCurrency [optional] aggregate_usage PricingAggregateUsage [optional] interval PricingInterval [optional] divided_by integer [optional] charge numeric [optional] activated character [optional]","code":""},{"path":[]},{"path":"/reference/Pricing.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Pricing — Pricing","text":"Pricing$new() Pricing$toJSON() Pricing$fromJSON() Pricing$toJSONString() Pricing$fromJSONString() Pricing$clone()","code":""},{"path":[]},{"path":"/reference/Pricing.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pricing — Pricing","text":"","code":"Pricing$new(   id = NULL,   array_uuid = NULL,   pricing_name = NULL,   pricing_type = NULL,   product_name = NULL,   product_statement_descriptor = NULL,   product_unit_label = NULL,   currency = NULL,   aggregate_usage = NULL,   interval = NULL,   divided_by = NULL,   charge = NULL,   activated = NULL,   ... )"},{"path":[]},{"path":"/reference/Pricing.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Pricing — Pricing","text":"","code":"Pricing$toJSON()"},{"path":[]},{"path":"/reference/Pricing.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Pricing — Pricing","text":"","code":"Pricing$fromJSON(PricingJson)"},{"path":[]},{"path":"/reference/Pricing.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Pricing — Pricing","text":"","code":"Pricing$toJSONString()"},{"path":[]},{"path":"/reference/Pricing.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Pricing — Pricing","text":"","code":"Pricing$fromJSONString(PricingJson)"},{"path":"/reference/Pricing.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Pricing — Pricing","text":"objects class cloneable method.","code":""},{"path":"/reference/Pricing.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Pricing — Pricing","text":"","code":"Pricing$clone(deep = FALSE)"},{"path":"/reference/Pricing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pricing — Pricing","text":"deep Whether make deep clone.","code":""},{"path":"/reference/PricingAggregateUsage.html","id":null,"dir":"Reference","previous_headings":"","what":"PricingAggregateUsage — PricingAggregateUsage","title":"PricingAggregateUsage — PricingAggregateUsage","text":"PricingAggregateUsage Class","code":""},{"path":"/reference/PricingAggregateUsage.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PricingAggregateUsage — PricingAggregateUsage","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/PricingAggregateUsage.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PricingAggregateUsage — PricingAggregateUsage","text":"PricingAggregateUsage$new() PricingAggregateUsage$toJSON() PricingAggregateUsage$fromJSON() PricingAggregateUsage$toJSONString() PricingAggregateUsage$fromJSONString() PricingAggregateUsage$clone()","code":""},{"path":[]},{"path":"/reference/PricingAggregateUsage.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingAggregateUsage — PricingAggregateUsage","text":"","code":"PricingAggregateUsage$new(...)"},{"path":[]},{"path":"/reference/PricingAggregateUsage.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingAggregateUsage — PricingAggregateUsage","text":"","code":"PricingAggregateUsage$toJSON()"},{"path":[]},{"path":"/reference/PricingAggregateUsage.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingAggregateUsage — PricingAggregateUsage","text":"","code":"PricingAggregateUsage$fromJSON(PricingAggregateUsageJson)"},{"path":[]},{"path":"/reference/PricingAggregateUsage.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingAggregateUsage — PricingAggregateUsage","text":"","code":"PricingAggregateUsage$toJSONString()"},{"path":[]},{"path":"/reference/PricingAggregateUsage.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingAggregateUsage — PricingAggregateUsage","text":"","code":"PricingAggregateUsage$fromJSONString(PricingAggregateUsageJson)"},{"path":"/reference/PricingAggregateUsage.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PricingAggregateUsage — PricingAggregateUsage","text":"objects class cloneable method.","code":""},{"path":"/reference/PricingAggregateUsage.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingAggregateUsage — PricingAggregateUsage","text":"","code":"PricingAggregateUsage$clone(deep = FALSE)"},{"path":"/reference/PricingAggregateUsage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PricingAggregateUsage — PricingAggregateUsage","text":"deep Whether make deep clone.","code":""},{"path":"/reference/PricingCurrency.html","id":null,"dir":"Reference","previous_headings":"","what":"PricingCurrency — PricingCurrency","title":"PricingCurrency — PricingCurrency","text":"PricingCurrency Class","code":""},{"path":"/reference/PricingCurrency.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PricingCurrency — PricingCurrency","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/PricingCurrency.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PricingCurrency — PricingCurrency","text":"PricingCurrency$new() PricingCurrency$toJSON() PricingCurrency$fromJSON() PricingCurrency$toJSONString() PricingCurrency$fromJSONString() PricingCurrency$clone()","code":""},{"path":[]},{"path":"/reference/PricingCurrency.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingCurrency — PricingCurrency","text":"","code":"PricingCurrency$new(...)"},{"path":[]},{"path":"/reference/PricingCurrency.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingCurrency — PricingCurrency","text":"","code":"PricingCurrency$toJSON()"},{"path":[]},{"path":"/reference/PricingCurrency.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingCurrency — PricingCurrency","text":"","code":"PricingCurrency$fromJSON(PricingCurrencyJson)"},{"path":[]},{"path":"/reference/PricingCurrency.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingCurrency — PricingCurrency","text":"","code":"PricingCurrency$toJSONString()"},{"path":[]},{"path":"/reference/PricingCurrency.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingCurrency — PricingCurrency","text":"","code":"PricingCurrency$fromJSONString(PricingCurrencyJson)"},{"path":"/reference/PricingCurrency.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PricingCurrency — PricingCurrency","text":"objects class cloneable method.","code":""},{"path":"/reference/PricingCurrency.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingCurrency — PricingCurrency","text":"","code":"PricingCurrency$clone(deep = FALSE)"},{"path":"/reference/PricingCurrency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PricingCurrency — PricingCurrency","text":"deep Whether make deep clone.","code":""},{"path":"/reference/PricingInterval.html","id":null,"dir":"Reference","previous_headings":"","what":"PricingInterval — PricingInterval","title":"PricingInterval — PricingInterval","text":"PricingInterval Class","code":""},{"path":"/reference/PricingInterval.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PricingInterval — PricingInterval","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/PricingInterval.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PricingInterval — PricingInterval","text":"PricingInterval$new() PricingInterval$toJSON() PricingInterval$fromJSON() PricingInterval$toJSONString() PricingInterval$fromJSONString() PricingInterval$clone()","code":""},{"path":[]},{"path":"/reference/PricingInterval.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingInterval — PricingInterval","text":"","code":"PricingInterval$new(...)"},{"path":[]},{"path":"/reference/PricingInterval.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingInterval — PricingInterval","text":"","code":"PricingInterval$toJSON()"},{"path":[]},{"path":"/reference/PricingInterval.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingInterval — PricingInterval","text":"","code":"PricingInterval$fromJSON(PricingIntervalJson)"},{"path":[]},{"path":"/reference/PricingInterval.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingInterval — PricingInterval","text":"","code":"PricingInterval$toJSONString()"},{"path":[]},{"path":"/reference/PricingInterval.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingInterval — PricingInterval","text":"","code":"PricingInterval$fromJSONString(PricingIntervalJson)"},{"path":"/reference/PricingInterval.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PricingInterval — PricingInterval","text":"objects class cloneable method.","code":""},{"path":"/reference/PricingInterval.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingInterval — PricingInterval","text":"","code":"PricingInterval$clone(deep = FALSE)"},{"path":"/reference/PricingInterval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PricingInterval — PricingInterval","text":"deep Whether make deep clone.","code":""},{"path":"/reference/PricingType.html","id":null,"dir":"Reference","previous_headings":"","what":"PricingType — PricingType","title":"PricingType — PricingType","text":"PricingType Class","code":""},{"path":"/reference/PricingType.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PricingType — PricingType","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/PricingType.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PricingType — PricingType","text":"PricingType$new() PricingType$toJSON() PricingType$fromJSON() PricingType$toJSONString() PricingType$fromJSONString() PricingType$clone()","code":""},{"path":[]},{"path":"/reference/PricingType.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingType — PricingType","text":"","code":"PricingType$new(...)"},{"path":[]},{"path":"/reference/PricingType.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingType — PricingType","text":"","code":"PricingType$toJSON()"},{"path":[]},{"path":"/reference/PricingType.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingType — PricingType","text":"","code":"PricingType$fromJSON(PricingTypeJson)"},{"path":[]},{"path":"/reference/PricingType.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingType — PricingType","text":"","code":"PricingType$toJSONString()"},{"path":[]},{"path":"/reference/PricingType.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingType — PricingType","text":"","code":"PricingType$fromJSONString(PricingTypeJson)"},{"path":"/reference/PricingType.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PricingType — PricingType","text":"objects class cloneable method.","code":""},{"path":"/reference/PricingType.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingType — PricingType","text":"","code":"PricingType$clone(deep = FALSE)"},{"path":"/reference/PricingType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PricingType — PricingType","text":"deep Whether make deep clone.","code":""},{"path":"/reference/PricingUnitLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"PricingUnitLabel — PricingUnitLabel","title":"PricingUnitLabel — PricingUnitLabel","text":"PricingUnitLabel Class","code":""},{"path":"/reference/PricingUnitLabel.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PricingUnitLabel — PricingUnitLabel","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/PricingUnitLabel.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PricingUnitLabel — PricingUnitLabel","text":"PricingUnitLabel$new() PricingUnitLabel$toJSON() PricingUnitLabel$fromJSON() PricingUnitLabel$toJSONString() PricingUnitLabel$fromJSONString() PricingUnitLabel$clone()","code":""},{"path":[]},{"path":"/reference/PricingUnitLabel.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingUnitLabel — PricingUnitLabel","text":"","code":"PricingUnitLabel$new(...)"},{"path":[]},{"path":"/reference/PricingUnitLabel.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingUnitLabel — PricingUnitLabel","text":"","code":"PricingUnitLabel$toJSON()"},{"path":[]},{"path":"/reference/PricingUnitLabel.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingUnitLabel — PricingUnitLabel","text":"","code":"PricingUnitLabel$fromJSON(PricingUnitLabelJson)"},{"path":[]},{"path":"/reference/PricingUnitLabel.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingUnitLabel — PricingUnitLabel","text":"","code":"PricingUnitLabel$toJSONString()"},{"path":[]},{"path":"/reference/PricingUnitLabel.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingUnitLabel — PricingUnitLabel","text":"","code":"PricingUnitLabel$fromJSONString(PricingUnitLabelJson)"},{"path":"/reference/PricingUnitLabel.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PricingUnitLabel — PricingUnitLabel","text":"objects class cloneable method.","code":""},{"path":"/reference/PricingUnitLabel.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"PricingUnitLabel — PricingUnitLabel","text":"","code":"PricingUnitLabel$clone(deep = FALSE)"},{"path":"/reference/PricingUnitLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PricingUnitLabel — PricingUnitLabel","text":"deep Whether make deep clone.","code":""},{"path":"/reference/PublicShareFilter.html","id":null,"dir":"Reference","previous_headings":"","what":"PublicShareFilter — PublicShareFilter","title":"PublicShareFilter — PublicShareFilter","text":"PublicShareFilter Class","code":""},{"path":"/reference/PublicShareFilter.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PublicShareFilter — PublicShareFilter","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/PublicShareFilter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PublicShareFilter — PublicShareFilter","text":"PublicShareFilter$new() PublicShareFilter$toJSON() PublicShareFilter$fromJSON() PublicShareFilter$toJSONString() PublicShareFilter$fromJSONString() PublicShareFilter$clone()","code":""},{"path":[]},{"path":"/reference/PublicShareFilter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PublicShareFilter — PublicShareFilter","text":"","code":"PublicShareFilter$new(...)"},{"path":[]},{"path":"/reference/PublicShareFilter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PublicShareFilter — PublicShareFilter","text":"","code":"PublicShareFilter$toJSON()"},{"path":[]},{"path":"/reference/PublicShareFilter.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PublicShareFilter — PublicShareFilter","text":"","code":"PublicShareFilter$fromJSON(PublicShareFilterJson)"},{"path":[]},{"path":"/reference/PublicShareFilter.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"PublicShareFilter — PublicShareFilter","text":"","code":"PublicShareFilter$toJSONString()"},{"path":[]},{"path":"/reference/PublicShareFilter.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"PublicShareFilter — PublicShareFilter","text":"","code":"PublicShareFilter$fromJSONString(PublicShareFilterJson)"},{"path":"/reference/PublicShareFilter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PublicShareFilter — PublicShareFilter","text":"objects class cloneable method.","code":""},{"path":"/reference/PublicShareFilter.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"PublicShareFilter — PublicShareFilter","text":"","code":"PublicShareFilter$clone(deep = FALSE)"},{"path":"/reference/PublicShareFilter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PublicShareFilter — PublicShareFilter","text":"deep Whether make deep clone.","code":""},{"path":"/reference/Query.html","id":null,"dir":"Reference","previous_headings":"","what":"Query — Query","title":"Query — Query","text":"Query Class","code":""},{"path":"/reference/Query.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Query — Query","text":"R6Class generator object","code":""},{"path":"/reference/Query.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Query — Query","text":"type Querytype layout Layout status Querystatus attributeBufferHeaders list( AttributeBufferHeader ) writer Writer [optional] reader QueryReader [optional] array Array totalFixedLengthBufferBytes integer totalVarLenBufferBytes integer","code":""},{"path":[]},{"path":"/reference/Query.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Query — Query","text":"Query$new() Query$toJSON() Query$fromJSON() Query$toJSONString() Query$fromJSONString() Query$clone()","code":""},{"path":[]},{"path":"/reference/Query.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query — Query","text":"","code":"Query$new(   type,   layout,   status,   attributeBufferHeaders,   array,   totalFixedLengthBufferBytes,   totalVarLenBufferBytes,   writer = NULL,   reader = NULL,   ... )"},{"path":[]},{"path":"/reference/Query.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Query — Query","text":"","code":"Query$toJSON()"},{"path":[]},{"path":"/reference/Query.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Query — Query","text":"","code":"Query$fromJSON(QueryJson)"},{"path":[]},{"path":"/reference/Query.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Query — Query","text":"","code":"Query$toJSONString()"},{"path":[]},{"path":"/reference/Query.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Query — Query","text":"","code":"Query$fromJSONString(QueryJson)"},{"path":"/reference/Query.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Query — Query","text":"objects class cloneable method.","code":""},{"path":"/reference/Query.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Query — Query","text":"","code":"Query$clone(deep = FALSE)"},{"path":"/reference/Query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query — Query","text":"deep Whether make deep clone.","code":""},{"path":"/reference/QueryApi.html","id":null,"dir":"Reference","previous_headings":"","what":"Query operations — QueryApi","title":"Query operations — QueryApi","text":"tiledbcloud.Query","code":""},{"path":"/reference/QueryApi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Query operations — QueryApi","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/QueryApi.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Query operations — QueryApi","text":"apiClient Handles client-server communication.","code":""},{"path":[]},{"path":"/reference/QueryApi.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Query operations — QueryApi","text":"QueryApi$new() QueryApi$FinalizeQuery() QueryApi$FinalizeQueryWithHttpInfo() QueryApi$GetEstResultSizes() QueryApi$GetEstResultSizesWithHttpInfo() QueryApi$GetFile() QueryApi$GetFileWithHttpInfo() QueryApi$SubmitQuery() QueryApi$SubmitQueryWithHttpInfo() QueryApi$SubmitQueryJson() QueryApi$SubmitQueryJsonWithHttpInfo() QueryApi$clone()","code":""},{"path":[]},{"path":"/reference/QueryApi.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query operations — QueryApi","text":"","code":"QueryApi$new(apiClient)"},{"path":[]},{"path":"/reference/QueryApi.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Query operations — QueryApi","text":"","code":"QueryApi$FinalizeQuery(   namespace,   array,   type,   content.type,   query,   x.payer = NULL,   open.at = NULL,   ... )"},{"path":[]},{"path":"/reference/QueryApi.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Query operations — QueryApi","text":"","code":"QueryApi$FinalizeQueryWithHttpInfo(   namespace,   array,   type,   content.type,   query,   x.payer = NULL,   open.at = NULL,   ... )"},{"path":[]},{"path":"/reference/QueryApi.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Query operations — QueryApi","text":"","code":"QueryApi$GetEstResultSizes(   namespace,   array,   type,   content.type,   query,   x.payer = NULL,   open.at = NULL,   ... )"},{"path":[]},{"path":"/reference/QueryApi.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Query operations — QueryApi","text":"","code":"QueryApi$GetEstResultSizesWithHttpInfo(   namespace,   array,   type,   content.type,   query,   x.payer = NULL,   open.at = NULL,   ... )"},{"path":[]},{"path":"/reference/QueryApi.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Query operations — QueryApi","text":"","code":"QueryApi$GetFile(namespace, array, content.type, x.payer = NULL, ...)"},{"path":[]},{"path":"/reference/QueryApi.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Query operations — QueryApi","text":"","code":"QueryApi$GetFileWithHttpInfo(   namespace,   array,   content.type,   x.payer = NULL,   ... )"},{"path":[]},{"path":"/reference/QueryApi.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Query operations — QueryApi","text":"","code":"QueryApi$SubmitQuery(   namespace,   array,   type,   content.type,   query,   x.payer = NULL,   open.at = NULL,   ... )"},{"path":[]},{"path":"/reference/QueryApi.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Query operations — QueryApi","text":"","code":"QueryApi$SubmitQueryWithHttpInfo(   namespace,   array,   type,   content.type,   query,   x.payer = NULL,   open.at = NULL,   ... )"},{"path":[]},{"path":"/reference/QueryApi.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Query operations — QueryApi","text":"","code":"QueryApi$SubmitQueryJson(   namespace,   array,   content.type,   query.json,   x.payer = NULL,   ... )"},{"path":[]},{"path":"/reference/QueryApi.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Query operations — QueryApi","text":"","code":"QueryApi$SubmitQueryJsonWithHttpInfo(   namespace,   array,   content.type,   query.json,   x.payer = NULL,   ... )"},{"path":"/reference/QueryApi.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Query operations — QueryApi","text":"objects class cloneable method.","code":""},{"path":"/reference/QueryApi.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Query operations — QueryApi","text":"","code":"QueryApi$clone(deep = FALSE)"},{"path":"/reference/QueryApi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query operations — QueryApi","text":"deep Whether make deep clone.","code":""},{"path":"/reference/QueryApi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query operations — QueryApi","text":"","code":"if (FALSE) { ####################  FinalizeQuery  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace array is in (an organization name or user's username) var.array <- 'array_example' # character | name/uri of array that is url-encoded var.type <- 'type_example' # character | type of query var.content.type <- 'application/json' # character | Content Type of input and return mime var.query <- Query$new() # Query | query to run var.x.payer <- 'x.payer_example' # character | Name of organization or user who should be charged for this request var.open.at <- 56 # integer | open_at for array in unix epoch  api.instance <- QueryApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$FinalizeQuery(var.namespace, var.array, var.type, var.content.type, var.query, x.payer=var.x.payer, open.at=var.open.at)   ####################  GetEstResultSizes  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace array is in (an organization name or user's username) var.array <- 'array_example' # character | name/uri of array that is url-encoded var.type <- 'type_example' # character | type of query var.content.type <- 'application/json' # character | Content Type of input and return mime var.query <- Query$new() # Query | query to run var.x.payer <- 'x.payer_example' # character | Name of organization or user who should be charged for this request var.open.at <- 56 # integer | open_at for array in unix epoch  api.instance <- QueryApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetEstResultSizes(var.namespace, var.array, var.type, var.content.type, var.query, x.payer=var.x.payer, open.at=var.open.at)   ####################  GetFile  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace array is in (an organization name or user's username) var.array <- 'array_example' # character | name/uri of array that is url-encoded var.content.type <- 'application/json' # character | Content Type of input and return mime var.x.payer <- 'x.payer_example' # character | Name of organization or user who should be charged for this request  api.instance <- QueryApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetFile(var.namespace, var.array, var.content.type, x.payer=var.x.payer)   ####################  SubmitQuery  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace array is in (an organization name or user's username) var.array <- 'array_example' # character | name/uri of array that is url-encoded var.type <- 'type_example' # character | type of query var.content.type <- 'application/json' # character | Content Type of input and return mime var.query <- Query$new() # Query | query to run var.x.payer <- 'x.payer_example' # character | Name of organization or user who should be charged for this request var.open.at <- 56 # integer | open_at for array in unix epoch  api.instance <- QueryApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$SubmitQuery(var.namespace, var.array, var.type, var.content.type, var.query, x.payer=var.x.payer, open.at=var.open.at)   ####################  SubmitQueryJson  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace array is in (an organization name or user's username) var.array <- 'array_example' # character | name/uri of array that is url-encoded var.content.type <- 'application/json' # character | Content Type of input and return mime var.query.json <- QueryJson$new() # QueryJson | query to run var.x.payer <- 'x.payer_example' # character | Name of organization or user who should be charged for this request  api.instance <- QueryApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$SubmitQueryJson(var.namespace, var.array, var.content.type, var.query.json, x.payer=var.x.payer)   }"},{"path":"/reference/QueryJson.html","id":null,"dir":"Reference","previous_headings":"","what":"QueryJson — QueryJson","title":"QueryJson — QueryJson","text":"QueryJson Class","code":""},{"path":"/reference/QueryJson.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"QueryJson — QueryJson","text":"R6Class generator object","code":""},{"path":"/reference/QueryJson.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"QueryJson — QueryJson","text":"query_ranges QueryRanges [optional] fields list( character ) [optional]","code":""},{"path":[]},{"path":"/reference/QueryJson.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"QueryJson — QueryJson","text":"QueryJson$new() QueryJson$toJSON() QueryJson$fromJSON() QueryJson$toJSONString() QueryJson$fromJSONString() QueryJson$clone()","code":""},{"path":[]},{"path":"/reference/QueryJson.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QueryJson — QueryJson","text":"","code":"QueryJson$new(query_ranges = NULL, fields = NULL, ...)"},{"path":[]},{"path":"/reference/QueryJson.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"QueryJson — QueryJson","text":"","code":"QueryJson$toJSON()"},{"path":[]},{"path":"/reference/QueryJson.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"QueryJson — QueryJson","text":"","code":"QueryJson$fromJSON(QueryJsonJson)"},{"path":[]},{"path":"/reference/QueryJson.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"QueryJson — QueryJson","text":"","code":"QueryJson$toJSONString()"},{"path":[]},{"path":"/reference/QueryJson.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"QueryJson — QueryJson","text":"","code":"QueryJson$fromJSONString(QueryJsonJson)"},{"path":"/reference/QueryJson.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"QueryJson — QueryJson","text":"objects class cloneable method.","code":""},{"path":"/reference/QueryJson.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"QueryJson — QueryJson","text":"","code":"QueryJson$clone(deep = FALSE)"},{"path":"/reference/QueryJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"QueryJson — QueryJson","text":"deep Whether make deep clone.","code":""},{"path":"/reference/QueryRanges.html","id":null,"dir":"Reference","previous_headings":"","what":"QueryRanges — QueryRanges","title":"QueryRanges — QueryRanges","text":"QueryRanges Class","code":""},{"path":"/reference/QueryRanges.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"QueryRanges — QueryRanges","text":"R6Class generator object","code":""},{"path":"/reference/QueryRanges.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"QueryRanges — QueryRanges","text":"layout Layout [optional] ranges list( array[numeric] ) [optional]","code":""},{"path":[]},{"path":"/reference/QueryRanges.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"QueryRanges — QueryRanges","text":"QueryRanges$new() QueryRanges$toJSON() QueryRanges$fromJSON() QueryRanges$toJSONString() QueryRanges$fromJSONString() QueryRanges$clone()","code":""},{"path":[]},{"path":"/reference/QueryRanges.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QueryRanges — QueryRanges","text":"","code":"QueryRanges$new(layout = NULL, ranges = NULL, ...)"},{"path":[]},{"path":"/reference/QueryRanges.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"QueryRanges — QueryRanges","text":"","code":"QueryRanges$toJSON()"},{"path":[]},{"path":"/reference/QueryRanges.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"QueryRanges — QueryRanges","text":"","code":"QueryRanges$fromJSON(QueryRangesJson)"},{"path":[]},{"path":"/reference/QueryRanges.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"QueryRanges — QueryRanges","text":"","code":"QueryRanges$toJSONString()"},{"path":[]},{"path":"/reference/QueryRanges.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"QueryRanges — QueryRanges","text":"","code":"QueryRanges$fromJSONString(QueryRangesJson)"},{"path":"/reference/QueryRanges.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"QueryRanges — QueryRanges","text":"objects class cloneable method.","code":""},{"path":"/reference/QueryRanges.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"QueryRanges — QueryRanges","text":"","code":"QueryRanges$clone(deep = FALSE)"},{"path":"/reference/QueryRanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"QueryRanges — QueryRanges","text":"deep Whether make deep clone.","code":""},{"path":"/reference/QueryReader.html","id":null,"dir":"Reference","previous_headings":"","what":"QueryReader — QueryReader","title":"QueryReader — QueryReader","text":"QueryReader Class","code":""},{"path":"/reference/QueryReader.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"QueryReader — QueryReader","text":"R6Class generator object","code":""},{"path":"/reference/QueryReader.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"QueryReader — QueryReader","text":"layout Layout [optional] subarray Subarray [optional] readState ReadState [optional] varOffsetsMode character [optional] varOffsetsAddExtraElement character [optional] varOffsetsBitsize integer [optional]","code":""},{"path":[]},{"path":"/reference/QueryReader.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"QueryReader — QueryReader","text":"QueryReader$new() QueryReader$toJSON() QueryReader$fromJSON() QueryReader$toJSONString() QueryReader$fromJSONString() QueryReader$clone()","code":""},{"path":[]},{"path":"/reference/QueryReader.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QueryReader — QueryReader","text":"","code":"QueryReader$new(   layout = NULL,   subarray = NULL,   readState = NULL,   varOffsetsMode = NULL,   varOffsetsAddExtraElement = NULL,   varOffsetsBitsize = NULL,   ... )"},{"path":[]},{"path":"/reference/QueryReader.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"QueryReader — QueryReader","text":"","code":"QueryReader$toJSON()"},{"path":[]},{"path":"/reference/QueryReader.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"QueryReader — QueryReader","text":"","code":"QueryReader$fromJSON(QueryReaderJson)"},{"path":[]},{"path":"/reference/QueryReader.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"QueryReader — QueryReader","text":"","code":"QueryReader$toJSONString()"},{"path":[]},{"path":"/reference/QueryReader.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"QueryReader — QueryReader","text":"","code":"QueryReader$fromJSONString(QueryReaderJson)"},{"path":"/reference/QueryReader.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"QueryReader — QueryReader","text":"objects class cloneable method.","code":""},{"path":"/reference/QueryReader.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"QueryReader — QueryReader","text":"","code":"QueryReader$clone(deep = FALSE)"},{"path":"/reference/QueryReader.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"QueryReader — QueryReader","text":"deep Whether make deep clone.","code":""},{"path":"/reference/Querystatus.html","id":null,"dir":"Reference","previous_headings":"","what":"Querystatus — Querystatus","title":"Querystatus — Querystatus","text":"Querystatus Class","code":""},{"path":"/reference/Querystatus.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Querystatus — Querystatus","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/Querystatus.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Querystatus — Querystatus","text":"Querystatus$new() Querystatus$toJSON() Querystatus$fromJSON() Querystatus$toJSONString() Querystatus$fromJSONString() Querystatus$clone()","code":""},{"path":[]},{"path":"/reference/Querystatus.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Querystatus — Querystatus","text":"","code":"Querystatus$new(...)"},{"path":[]},{"path":"/reference/Querystatus.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Querystatus — Querystatus","text":"","code":"Querystatus$toJSON()"},{"path":[]},{"path":"/reference/Querystatus.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Querystatus — Querystatus","text":"","code":"Querystatus$fromJSON(QuerystatusJson)"},{"path":[]},{"path":"/reference/Querystatus.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Querystatus — Querystatus","text":"","code":"Querystatus$toJSONString()"},{"path":[]},{"path":"/reference/Querystatus.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Querystatus — Querystatus","text":"","code":"Querystatus$fromJSONString(QuerystatusJson)"},{"path":"/reference/Querystatus.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Querystatus — Querystatus","text":"objects class cloneable method.","code":""},{"path":"/reference/Querystatus.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Querystatus — Querystatus","text":"","code":"Querystatus$clone(deep = FALSE)"},{"path":"/reference/Querystatus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Querystatus — Querystatus","text":"deep Whether make deep clone.","code":""},{"path":"/reference/Querytype.html","id":null,"dir":"Reference","previous_headings":"","what":"Querytype — Querytype","title":"Querytype — Querytype","text":"Querytype Class","code":""},{"path":"/reference/Querytype.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Querytype — Querytype","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/Querytype.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Querytype — Querytype","text":"Querytype$new() Querytype$toJSON() Querytype$fromJSON() Querytype$toJSONString() Querytype$fromJSONString() Querytype$clone()","code":""},{"path":[]},{"path":"/reference/Querytype.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Querytype — Querytype","text":"","code":"Querytype$new(...)"},{"path":[]},{"path":"/reference/Querytype.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Querytype — Querytype","text":"","code":"Querytype$toJSON()"},{"path":[]},{"path":"/reference/Querytype.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Querytype — Querytype","text":"","code":"Querytype$fromJSON(QuerytypeJson)"},{"path":[]},{"path":"/reference/Querytype.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Querytype — Querytype","text":"","code":"Querytype$toJSONString()"},{"path":[]},{"path":"/reference/Querytype.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Querytype — Querytype","text":"","code":"Querytype$fromJSONString(QuerytypeJson)"},{"path":"/reference/Querytype.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Querytype — Querytype","text":"objects class cloneable method.","code":""},{"path":"/reference/Querytype.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Querytype — Querytype","text":"","code":"Querytype$clone(deep = FALSE)"},{"path":"/reference/Querytype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Querytype — Querytype","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ReadState.html","id":null,"dir":"Reference","previous_headings":"","what":"ReadState — ReadState","title":"ReadState — ReadState","text":"ReadState Class","code":""},{"path":"/reference/ReadState.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ReadState — ReadState","text":"R6Class generator object","code":""},{"path":"/reference/ReadState.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ReadState — ReadState","text":"initialized character [optional] overflowed character [optional] unsplittable character [optional] subarrayPartitioner SubarrayPartitioner [optional]","code":""},{"path":[]},{"path":"/reference/ReadState.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ReadState — ReadState","text":"ReadState$new() ReadState$toJSON() ReadState$fromJSON() ReadState$toJSONString() ReadState$fromJSONString() ReadState$clone()","code":""},{"path":[]},{"path":"/reference/ReadState.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ReadState — ReadState","text":"","code":"ReadState$new(   initialized = NULL,   overflowed = NULL,   unsplittable = NULL,   subarrayPartitioner = NULL,   ... )"},{"path":[]},{"path":"/reference/ReadState.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ReadState — ReadState","text":"","code":"ReadState$toJSON()"},{"path":[]},{"path":"/reference/ReadState.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ReadState — ReadState","text":"","code":"ReadState$fromJSON(ReadStateJson)"},{"path":[]},{"path":"/reference/ReadState.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ReadState — ReadState","text":"","code":"ReadState$toJSONString()"},{"path":[]},{"path":"/reference/ReadState.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ReadState — ReadState","text":"","code":"ReadState$fromJSONString(ReadStateJson)"},{"path":"/reference/ReadState.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ReadState — ReadState","text":"objects class cloneable method.","code":""},{"path":"/reference/ReadState.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ReadState — ReadState","text":"","code":"ReadState$clone(deep = FALSE)"},{"path":"/reference/ReadState.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReadState — ReadState","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ResultFormat.html","id":null,"dir":"Reference","previous_headings":"","what":"ResultFormat — ResultFormat","title":"ResultFormat — ResultFormat","text":"ResultFormat Class","code":""},{"path":"/reference/ResultFormat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ResultFormat — ResultFormat","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/ResultFormat.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ResultFormat — ResultFormat","text":"ResultFormat$new() ResultFormat$toJSON() ResultFormat$fromJSON() ResultFormat$toJSONString() ResultFormat$fromJSONString() ResultFormat$clone()","code":""},{"path":[]},{"path":"/reference/ResultFormat.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultFormat — ResultFormat","text":"","code":"ResultFormat$new(...)"},{"path":[]},{"path":"/reference/ResultFormat.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultFormat — ResultFormat","text":"","code":"ResultFormat$toJSON()"},{"path":[]},{"path":"/reference/ResultFormat.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultFormat — ResultFormat","text":"","code":"ResultFormat$fromJSON(ResultFormatJson)"},{"path":[]},{"path":"/reference/ResultFormat.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultFormat — ResultFormat","text":"","code":"ResultFormat$toJSONString()"},{"path":[]},{"path":"/reference/ResultFormat.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultFormat — ResultFormat","text":"","code":"ResultFormat$fromJSONString(ResultFormatJson)"},{"path":"/reference/ResultFormat.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ResultFormat — ResultFormat","text":"objects class cloneable method.","code":""},{"path":"/reference/ResultFormat.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultFormat — ResultFormat","text":"","code":"ResultFormat$clone(deep = FALSE)"},{"path":"/reference/ResultFormat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ResultFormat — ResultFormat","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SQLParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"SQLParameters — SQLParameters","title":"SQLParameters — SQLParameters","text":"SQLParameters Class","code":""},{"path":"/reference/SQLParameters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SQLParameters — SQLParameters","text":"R6Class generator object","code":""},{"path":"/reference/SQLParameters.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"SQLParameters — SQLParameters","text":"name character [optional] query character [optional] output_uri character [optional] store_results character [optional] result_format ResultFormat [optional] init_commands list( character ) [optional] parameters list( object ) [optional]","code":""},{"path":[]},{"path":"/reference/SQLParameters.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SQLParameters — SQLParameters","text":"SQLParameters$new() SQLParameters$toJSON() SQLParameters$fromJSON() SQLParameters$toJSONString() SQLParameters$fromJSONString() SQLParameters$clone()","code":""},{"path":[]},{"path":"/reference/SQLParameters.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SQLParameters — SQLParameters","text":"","code":"SQLParameters$new(   name = NULL,   query = NULL,   output_uri = NULL,   store_results = NULL,   result_format = NULL,   init_commands = NULL,   parameters = NULL,   ... )"},{"path":[]},{"path":"/reference/SQLParameters.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SQLParameters — SQLParameters","text":"","code":"SQLParameters$toJSON()"},{"path":[]},{"path":"/reference/SQLParameters.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SQLParameters — SQLParameters","text":"","code":"SQLParameters$fromJSON(SQLParametersJson)"},{"path":[]},{"path":"/reference/SQLParameters.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SQLParameters — SQLParameters","text":"","code":"SQLParameters$toJSONString()"},{"path":[]},{"path":"/reference/SQLParameters.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"SQLParameters — SQLParameters","text":"","code":"SQLParameters$fromJSONString(SQLParametersJson)"},{"path":"/reference/SQLParameters.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SQLParameters — SQLParameters","text":"objects class cloneable method.","code":""},{"path":"/reference/SQLParameters.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"SQLParameters — SQLParameters","text":"","code":"SQLParameters$clone(deep = FALSE)"},{"path":"/reference/SQLParameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SQLParameters — SQLParameters","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SSOProvider.html","id":null,"dir":"Reference","previous_headings":"","what":"SSOProvider — SSOProvider","title":"SSOProvider — SSOProvider","text":"SSOProvider Class","code":""},{"path":"/reference/SSOProvider.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SSOProvider — SSOProvider","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/SSOProvider.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SSOProvider — SSOProvider","text":"SSOProvider$new() SSOProvider$toJSON() SSOProvider$fromJSON() SSOProvider$toJSONString() SSOProvider$fromJSONString() SSOProvider$clone()","code":""},{"path":[]},{"path":"/reference/SSOProvider.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SSOProvider — SSOProvider","text":"","code":"SSOProvider$new(...)"},{"path":[]},{"path":"/reference/SSOProvider.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SSOProvider — SSOProvider","text":"","code":"SSOProvider$toJSON()"},{"path":[]},{"path":"/reference/SSOProvider.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SSOProvider — SSOProvider","text":"","code":"SSOProvider$fromJSON(SSOProviderJson)"},{"path":[]},{"path":"/reference/SSOProvider.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SSOProvider — SSOProvider","text":"","code":"SSOProvider$toJSONString()"},{"path":[]},{"path":"/reference/SSOProvider.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"SSOProvider — SSOProvider","text":"","code":"SSOProvider$fromJSONString(SSOProviderJson)"},{"path":"/reference/SSOProvider.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SSOProvider — SSOProvider","text":"objects class cloneable method.","code":""},{"path":"/reference/SSOProvider.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"SSOProvider — SSOProvider","text":"","code":"SSOProvider$clone(deep = FALSE)"},{"path":"/reference/SSOProvider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SSOProvider — SSOProvider","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SqlApi.html","id":null,"dir":"Reference","previous_headings":"","what":"Sql operations — SqlApi","title":"Sql operations — SqlApi","text":"tiledbcloud.Sql","code":""},{"path":"/reference/SqlApi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sql operations — SqlApi","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/SqlApi.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Sql operations — SqlApi","text":"apiClient Handles client-server communication.","code":""},{"path":[]},{"path":"/reference/SqlApi.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Sql operations — SqlApi","text":"SqlApi$new() SqlApi$RunSQL() SqlApi$RunSQLWithHttpInfo() SqlApi$clone()","code":""},{"path":[]},{"path":"/reference/SqlApi.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sql operations — SqlApi","text":"","code":"SqlApi$new(apiClient)"},{"path":[]},{"path":"/reference/SqlApi.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Sql operations — SqlApi","text":"","code":"SqlApi$RunSQL(namespace, sql, accept.encoding = NULL, ...)"},{"path":[]},{"path":"/reference/SqlApi.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Sql operations — SqlApi","text":"","code":"SqlApi$RunSQLWithHttpInfo(namespace, sql, accept.encoding = NULL, ...)"},{"path":"/reference/SqlApi.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Sql operations — SqlApi","text":"objects class cloneable method.","code":""},{"path":"/reference/SqlApi.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Sql operations — SqlApi","text":"","code":"SqlApi$clone(deep = FALSE)"},{"path":"/reference/SqlApi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sql operations — SqlApi","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SqlApi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sql operations — SqlApi","text":"","code":"if (FALSE) { ####################  RunSQL  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace to run task under is in (an organization name or user's username) var.sql <- SQLParameters$new() # SQLParameters | sql being submitted var.accept.encoding <- 'accept.encoding_example' # character | Encoding to use  api.instance <- SqlApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$RunSQL(var.namespace, var.sql, accept.encoding=var.accept.encoding)   }"},{"path":"/reference/StatsApi.html","id":null,"dir":"Reference","previous_headings":"","what":"Stats operations — StatsApi","title":"Stats operations — StatsApi","text":"tiledbcloud.Stats","code":""},{"path":"/reference/StatsApi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stats operations — StatsApi","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/StatsApi.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Stats operations — StatsApi","text":"apiClient Handles client-server communication.","code":""},{"path":[]},{"path":"/reference/StatsApi.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Stats operations — StatsApi","text":"StatsApi$new() StatsApi$GetTiledbStats() StatsApi$GetTiledbStatsWithHttpInfo() StatsApi$clone()","code":""},{"path":[]},{"path":"/reference/StatsApi.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stats operations — StatsApi","text":"","code":"StatsApi$new(apiClient)"},{"path":[]},{"path":"/reference/StatsApi.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Stats operations — StatsApi","text":"","code":"StatsApi$GetTiledbStats(...)"},{"path":[]},{"path":"/reference/StatsApi.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Stats operations — StatsApi","text":"","code":"StatsApi$GetTiledbStatsWithHttpInfo(...)"},{"path":"/reference/StatsApi.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Stats operations — StatsApi","text":"objects class cloneable method.","code":""},{"path":"/reference/StatsApi.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Stats operations — StatsApi","text":"","code":"StatsApi$clone(deep = FALSE)"},{"path":"/reference/StatsApi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stats operations — StatsApi","text":"deep Whether make deep clone.","code":""},{"path":"/reference/StatsApi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stats operations — StatsApi","text":"","code":"if (FALSE) { ####################  GetTiledbStats  ####################  library(tiledbcloud)  api.instance <- StatsApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetTiledbStats()   }"},{"path":"/reference/Subarray.html","id":null,"dir":"Reference","previous_headings":"","what":"Subarray — Subarray","title":"Subarray — Subarray","text":"Subarray Class","code":""},{"path":"/reference/Subarray.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Subarray — Subarray","text":"R6Class generator object","code":""},{"path":"/reference/Subarray.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Subarray — Subarray","text":"layout Layout [optional] ranges list( SubarrayRanges ) [optional]","code":""},{"path":[]},{"path":"/reference/Subarray.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Subarray — Subarray","text":"Subarray$new() Subarray$toJSON() Subarray$fromJSON() Subarray$toJSONString() Subarray$fromJSONString() Subarray$clone()","code":""},{"path":[]},{"path":"/reference/Subarray.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subarray — Subarray","text":"","code":"Subarray$new(layout = NULL, ranges = NULL, ...)"},{"path":[]},{"path":"/reference/Subarray.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Subarray — Subarray","text":"","code":"Subarray$toJSON()"},{"path":[]},{"path":"/reference/Subarray.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Subarray — Subarray","text":"","code":"Subarray$fromJSON(SubarrayJson)"},{"path":[]},{"path":"/reference/Subarray.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Subarray — Subarray","text":"","code":"Subarray$toJSONString()"},{"path":[]},{"path":"/reference/Subarray.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Subarray — Subarray","text":"","code":"Subarray$fromJSONString(SubarrayJson)"},{"path":"/reference/Subarray.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Subarray — Subarray","text":"objects class cloneable method.","code":""},{"path":"/reference/Subarray.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Subarray — Subarray","text":"","code":"Subarray$clone(deep = FALSE)"},{"path":"/reference/Subarray.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subarray — Subarray","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SubarrayPartitioner.html","id":null,"dir":"Reference","previous_headings":"","what":"SubarrayPartitioner — SubarrayPartitioner","title":"SubarrayPartitioner — SubarrayPartitioner","text":"SubarrayPartitioner Class","code":""},{"path":"/reference/SubarrayPartitioner.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SubarrayPartitioner — SubarrayPartitioner","text":"R6Class generator object","code":""},{"path":"/reference/SubarrayPartitioner.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"SubarrayPartitioner — SubarrayPartitioner","text":"subarray Subarray [optional] budget list( AttributeBufferSize ) [optional] current SubarrayPartitionerCurrent [optional] state SubarrayPartitionerState [optional] memoryBudget integer [optional] memoryBudgetVar integer [optional]","code":""},{"path":[]},{"path":"/reference/SubarrayPartitioner.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SubarrayPartitioner — SubarrayPartitioner","text":"SubarrayPartitioner$new() SubarrayPartitioner$toJSON() SubarrayPartitioner$fromJSON() SubarrayPartitioner$toJSONString() SubarrayPartitioner$fromJSONString() SubarrayPartitioner$clone()","code":""},{"path":[]},{"path":"/reference/SubarrayPartitioner.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayPartitioner — SubarrayPartitioner","text":"","code":"SubarrayPartitioner$new(   subarray = NULL,   budget = NULL,   current = NULL,   state = NULL,   memoryBudget = NULL,   memoryBudgetVar = NULL,   ... )"},{"path":[]},{"path":"/reference/SubarrayPartitioner.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayPartitioner — SubarrayPartitioner","text":"","code":"SubarrayPartitioner$toJSON()"},{"path":[]},{"path":"/reference/SubarrayPartitioner.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayPartitioner — SubarrayPartitioner","text":"","code":"SubarrayPartitioner$fromJSON(SubarrayPartitionerJson)"},{"path":[]},{"path":"/reference/SubarrayPartitioner.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayPartitioner — SubarrayPartitioner","text":"","code":"SubarrayPartitioner$toJSONString()"},{"path":[]},{"path":"/reference/SubarrayPartitioner.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayPartitioner — SubarrayPartitioner","text":"","code":"SubarrayPartitioner$fromJSONString(SubarrayPartitionerJson)"},{"path":"/reference/SubarrayPartitioner.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SubarrayPartitioner — SubarrayPartitioner","text":"objects class cloneable method.","code":""},{"path":"/reference/SubarrayPartitioner.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayPartitioner — SubarrayPartitioner","text":"","code":"SubarrayPartitioner$clone(deep = FALSE)"},{"path":"/reference/SubarrayPartitioner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SubarrayPartitioner — SubarrayPartitioner","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SubarrayPartitionerCurrent.html","id":null,"dir":"Reference","previous_headings":"","what":"SubarrayPartitionerCurrent — SubarrayPartitionerCurrent","title":"SubarrayPartitionerCurrent — SubarrayPartitionerCurrent","text":"SubarrayPartitionerCurrent Class","code":""},{"path":"/reference/SubarrayPartitionerCurrent.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SubarrayPartitionerCurrent — SubarrayPartitionerCurrent","text":"R6Class generator object","code":""},{"path":"/reference/SubarrayPartitionerCurrent.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"SubarrayPartitionerCurrent — SubarrayPartitionerCurrent","text":"subarray Subarray [optional] start integer [optional] end integer [optional] splitMultiRange character [optional]","code":""},{"path":[]},{"path":"/reference/SubarrayPartitionerCurrent.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SubarrayPartitionerCurrent — SubarrayPartitionerCurrent","text":"SubarrayPartitionerCurrent$new() SubarrayPartitionerCurrent$toJSON() SubarrayPartitionerCurrent$fromJSON() SubarrayPartitionerCurrent$toJSONString() SubarrayPartitionerCurrent$fromJSONString() SubarrayPartitionerCurrent$clone()","code":""},{"path":[]},{"path":"/reference/SubarrayPartitionerCurrent.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayPartitionerCurrent — SubarrayPartitionerCurrent","text":"","code":"SubarrayPartitionerCurrent$new(   subarray = NULL,   start = NULL,   end = NULL,   splitMultiRange = NULL,   ... )"},{"path":[]},{"path":"/reference/SubarrayPartitionerCurrent.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayPartitionerCurrent — SubarrayPartitionerCurrent","text":"","code":"SubarrayPartitionerCurrent$toJSON()"},{"path":[]},{"path":"/reference/SubarrayPartitionerCurrent.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayPartitionerCurrent — SubarrayPartitionerCurrent","text":"","code":"SubarrayPartitionerCurrent$fromJSON(SubarrayPartitionerCurrentJson)"},{"path":[]},{"path":"/reference/SubarrayPartitionerCurrent.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayPartitionerCurrent — SubarrayPartitionerCurrent","text":"","code":"SubarrayPartitionerCurrent$toJSONString()"},{"path":[]},{"path":"/reference/SubarrayPartitionerCurrent.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayPartitionerCurrent — SubarrayPartitionerCurrent","text":"","code":"SubarrayPartitionerCurrent$fromJSONString(SubarrayPartitionerCurrentJson)"},{"path":"/reference/SubarrayPartitionerCurrent.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SubarrayPartitionerCurrent — SubarrayPartitionerCurrent","text":"objects class cloneable method.","code":""},{"path":"/reference/SubarrayPartitionerCurrent.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayPartitionerCurrent — SubarrayPartitionerCurrent","text":"","code":"SubarrayPartitionerCurrent$clone(deep = FALSE)"},{"path":"/reference/SubarrayPartitionerCurrent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SubarrayPartitionerCurrent — SubarrayPartitionerCurrent","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SubarrayPartitionerState.html","id":null,"dir":"Reference","previous_headings":"","what":"SubarrayPartitionerState — SubarrayPartitionerState","title":"SubarrayPartitionerState — SubarrayPartitionerState","text":"SubarrayPartitionerState Class","code":""},{"path":"/reference/SubarrayPartitionerState.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SubarrayPartitionerState — SubarrayPartitionerState","text":"R6Class generator object","code":""},{"path":"/reference/SubarrayPartitionerState.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"SubarrayPartitionerState — SubarrayPartitionerState","text":"start integer [optional] end integer [optional] singleRange list( Subarray ) [optional] multiRange list( Subarray ) [optional]","code":""},{"path":[]},{"path":"/reference/SubarrayPartitionerState.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SubarrayPartitionerState — SubarrayPartitionerState","text":"SubarrayPartitionerState$new() SubarrayPartitionerState$toJSON() SubarrayPartitionerState$fromJSON() SubarrayPartitionerState$toJSONString() SubarrayPartitionerState$fromJSONString() SubarrayPartitionerState$clone()","code":""},{"path":[]},{"path":"/reference/SubarrayPartitionerState.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayPartitionerState — SubarrayPartitionerState","text":"","code":"SubarrayPartitionerState$new(   start = NULL,   end = NULL,   singleRange = NULL,   multiRange = NULL,   ... )"},{"path":[]},{"path":"/reference/SubarrayPartitionerState.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayPartitionerState — SubarrayPartitionerState","text":"","code":"SubarrayPartitionerState$toJSON()"},{"path":[]},{"path":"/reference/SubarrayPartitionerState.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayPartitionerState — SubarrayPartitionerState","text":"","code":"SubarrayPartitionerState$fromJSON(SubarrayPartitionerStateJson)"},{"path":[]},{"path":"/reference/SubarrayPartitionerState.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayPartitionerState — SubarrayPartitionerState","text":"","code":"SubarrayPartitionerState$toJSONString()"},{"path":[]},{"path":"/reference/SubarrayPartitionerState.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayPartitionerState — SubarrayPartitionerState","text":"","code":"SubarrayPartitionerState$fromJSONString(SubarrayPartitionerStateJson)"},{"path":"/reference/SubarrayPartitionerState.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SubarrayPartitionerState — SubarrayPartitionerState","text":"objects class cloneable method.","code":""},{"path":"/reference/SubarrayPartitionerState.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayPartitionerState — SubarrayPartitionerState","text":"","code":"SubarrayPartitionerState$clone(deep = FALSE)"},{"path":"/reference/SubarrayPartitionerState.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SubarrayPartitionerState — SubarrayPartitionerState","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SubarrayRanges.html","id":null,"dir":"Reference","previous_headings":"","what":"SubarrayRanges — SubarrayRanges","title":"SubarrayRanges — SubarrayRanges","text":"SubarrayRanges Class","code":""},{"path":"/reference/SubarrayRanges.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SubarrayRanges — SubarrayRanges","text":"R6Class generator object","code":""},{"path":"/reference/SubarrayRanges.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"SubarrayRanges — SubarrayRanges","text":"type Datatype [optional] hasDefaultRange character [optional] buffer list( integer ) [optional]","code":""},{"path":[]},{"path":"/reference/SubarrayRanges.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SubarrayRanges — SubarrayRanges","text":"SubarrayRanges$new() SubarrayRanges$toJSON() SubarrayRanges$fromJSON() SubarrayRanges$toJSONString() SubarrayRanges$fromJSONString() SubarrayRanges$clone()","code":""},{"path":[]},{"path":"/reference/SubarrayRanges.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayRanges — SubarrayRanges","text":"","code":"SubarrayRanges$new(type = NULL, hasDefaultRange = NULL, buffer = NULL, ...)"},{"path":[]},{"path":"/reference/SubarrayRanges.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayRanges — SubarrayRanges","text":"","code":"SubarrayRanges$toJSON()"},{"path":[]},{"path":"/reference/SubarrayRanges.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayRanges — SubarrayRanges","text":"","code":"SubarrayRanges$fromJSON(SubarrayRangesJson)"},{"path":[]},{"path":"/reference/SubarrayRanges.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayRanges — SubarrayRanges","text":"","code":"SubarrayRanges$toJSONString()"},{"path":[]},{"path":"/reference/SubarrayRanges.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayRanges — SubarrayRanges","text":"","code":"SubarrayRanges$fromJSONString(SubarrayRangesJson)"},{"path":"/reference/SubarrayRanges.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SubarrayRanges — SubarrayRanges","text":"objects class cloneable method.","code":""},{"path":"/reference/SubarrayRanges.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"SubarrayRanges — SubarrayRanges","text":"","code":"SubarrayRanges$clone(deep = FALSE)"},{"path":"/reference/SubarrayRanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SubarrayRanges — SubarrayRanges","text":"deep Whether make deep clone.","code":""},{"path":"/reference/Subscription.html","id":null,"dir":"Reference","previous_headings":"","what":"Subscription — Subscription","title":"Subscription — Subscription","text":"Subscription Class","code":""},{"path":"/reference/Subscription.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Subscription — Subscription","text":"R6Class generator object","code":""},{"path":"/reference/Subscription.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Subscription — Subscription","text":"id character [optional] owner_namespace_uuid character [optional] customer_namespace_uuid character [optional] pricing list( Pricing ) [optional]","code":""},{"path":[]},{"path":"/reference/Subscription.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Subscription — Subscription","text":"Subscription$new() Subscription$toJSON() Subscription$fromJSON() Subscription$toJSONString() Subscription$fromJSONString() Subscription$clone()","code":""},{"path":[]},{"path":"/reference/Subscription.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subscription — Subscription","text":"","code":"Subscription$new(   id = NULL,   owner_namespace_uuid = NULL,   customer_namespace_uuid = NULL,   pricing = NULL,   ... )"},{"path":[]},{"path":"/reference/Subscription.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Subscription — Subscription","text":"","code":"Subscription$toJSON()"},{"path":[]},{"path":"/reference/Subscription.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Subscription — Subscription","text":"","code":"Subscription$fromJSON(SubscriptionJson)"},{"path":[]},{"path":"/reference/Subscription.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Subscription — Subscription","text":"","code":"Subscription$toJSONString()"},{"path":[]},{"path":"/reference/Subscription.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Subscription — Subscription","text":"","code":"Subscription$fromJSONString(SubscriptionJson)"},{"path":"/reference/Subscription.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Subscription — Subscription","text":"objects class cloneable method.","code":""},{"path":"/reference/Subscription.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Subscription — Subscription","text":"","code":"Subscription$clone(deep = FALSE)"},{"path":"/reference/Subscription.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subscription — Subscription","text":"deep Whether make deep clone.","code":""},{"path":"/reference/TasksApi.html","id":null,"dir":"Reference","previous_headings":"","what":"Tasks operations — TasksApi","title":"Tasks operations — TasksApi","text":"tiledbcloud.Tasks","code":""},{"path":"/reference/TasksApi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tasks operations — TasksApi","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/TasksApi.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Tasks operations — TasksApi","text":"apiClient Handles client-server communication.","code":""},{"path":[]},{"path":"/reference/TasksApi.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Tasks operations — TasksApi","text":"TasksApi$new() TasksApi$RunSQL() TasksApi$RunSQLWithHttpInfo() TasksApi$TaskIdGet() TasksApi$TaskIdGetWithHttpInfo() TasksApi$TaskIdResultGet() TasksApi$TaskIdResultGetWithHttpInfo() TasksApi$TasksGet() TasksApi$TasksGetWithHttpInfo() TasksApi$clone()","code":""},{"path":[]},{"path":"/reference/TasksApi.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tasks operations — TasksApi","text":"","code":"TasksApi$new(apiClient)"},{"path":[]},{"path":"/reference/TasksApi.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Tasks operations — TasksApi","text":"","code":"TasksApi$RunSQL(namespace, sql, accept.encoding = NULL, ...)"},{"path":[]},{"path":"/reference/TasksApi.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Tasks operations — TasksApi","text":"","code":"TasksApi$RunSQLWithHttpInfo(namespace, sql, accept.encoding = NULL, ...)"},{"path":[]},{"path":"/reference/TasksApi.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Tasks operations — TasksApi","text":"","code":"TasksApi$TaskIdGet(id, ...)"},{"path":[]},{"path":"/reference/TasksApi.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Tasks operations — TasksApi","text":"","code":"TasksApi$TaskIdGetWithHttpInfo(id, ...)"},{"path":[]},{"path":"/reference/TasksApi.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Tasks operations — TasksApi","text":"","code":"TasksApi$TaskIdResultGet(id, accept.encoding = NULL, ...)"},{"path":[]},{"path":"/reference/TasksApi.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Tasks operations — TasksApi","text":"","code":"TasksApi$TaskIdResultGetWithHttpInfo(id, accept.encoding = NULL, ...)"},{"path":[]},{"path":"/reference/TasksApi.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Tasks operations — TasksApi","text":"","code":"TasksApi$TasksGet(   namespace = NULL,   created.by = NULL,   array = NULL,   start = NULL,   end = NULL,   page = NULL,   per.page = NULL,   type = NULL,   exclude.type = NULL,   file.type = NULL,   exclude.file.type = NULL,   status = NULL,   search = NULL,   orderby = NULL,   ... )"},{"path":[]},{"path":"/reference/TasksApi.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Tasks operations — TasksApi","text":"","code":"TasksApi$TasksGetWithHttpInfo(   namespace = NULL,   created.by = NULL,   array = NULL,   start = NULL,   end = NULL,   page = NULL,   per.page = NULL,   type = NULL,   exclude.type = NULL,   file.type = NULL,   exclude.file.type = NULL,   status = NULL,   search = NULL,   orderby = NULL,   ... )"},{"path":"/reference/TasksApi.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Tasks operations — TasksApi","text":"objects class cloneable method.","code":""},{"path":"/reference/TasksApi.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Tasks operations — TasksApi","text":"","code":"TasksApi$clone(deep = FALSE)"},{"path":"/reference/TasksApi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tasks operations — TasksApi","text":"deep Whether make deep clone.","code":""},{"path":[]},{"path":"/reference/TileDBConfig.html","id":null,"dir":"Reference","previous_headings":"","what":"TileDBConfig — TileDBConfig","title":"TileDBConfig — TileDBConfig","text":"TileDBConfig Class","code":""},{"path":"/reference/TileDBConfig.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"TileDBConfig — TileDBConfig","text":"R6Class generator object","code":""},{"path":"/reference/TileDBConfig.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"TileDBConfig — TileDBConfig","text":"configs named list( character ) [optional]","code":""},{"path":[]},{"path":"/reference/TileDBConfig.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TileDBConfig — TileDBConfig","text":"TileDBConfig$new() TileDBConfig$toJSON() TileDBConfig$fromJSON() TileDBConfig$toJSONString() TileDBConfig$fromJSONString() TileDBConfig$clone()","code":""},{"path":[]},{"path":"/reference/TileDBConfig.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBConfig — TileDBConfig","text":"","code":"TileDBConfig$new(configs = NULL, ...)"},{"path":[]},{"path":"/reference/TileDBConfig.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBConfig — TileDBConfig","text":"","code":"TileDBConfig$toJSON()"},{"path":[]},{"path":"/reference/TileDBConfig.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBConfig — TileDBConfig","text":"","code":"TileDBConfig$fromJSON(TileDBConfigJson)"},{"path":[]},{"path":"/reference/TileDBConfig.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBConfig — TileDBConfig","text":"","code":"TileDBConfig$toJSONString()"},{"path":[]},{"path":"/reference/TileDBConfig.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBConfig — TileDBConfig","text":"","code":"TileDBConfig$fromJSONString(TileDBConfigJson)"},{"path":"/reference/TileDBConfig.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TileDBConfig — TileDBConfig","text":"objects class cloneable method.","code":""},{"path":"/reference/TileDBConfig.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBConfig — TileDBConfig","text":"","code":"TileDBConfig$clone(deep = FALSE)"},{"path":"/reference/TileDBConfig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDBConfig — TileDBConfig","text":"deep Whether make deep clone.","code":""},{"path":"/reference/Token.html","id":null,"dir":"Reference","previous_headings":"","what":"Token — Token","title":"Token — Token","text":"Token Class","code":""},{"path":"/reference/Token.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Token — Token","text":"R6Class generator object","code":""},{"path":"/reference/Token.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Token — Token","text":"token character [optional] name character [optional] issued_at character [optional] expires_at character [optional] scope character [optional]","code":""},{"path":[]},{"path":"/reference/Token.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Token — Token","text":"Token$new() Token$toJSON() Token$fromJSON() Token$toJSONString() Token$fromJSONString() Token$clone()","code":""},{"path":[]},{"path":"/reference/Token.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Token — Token","text":"","code":"Token$new(   token = NULL,   name = NULL,   issued_at = NULL,   expires_at = NULL,   scope = \"*\",   ... )"},{"path":[]},{"path":"/reference/Token.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Token — Token","text":"","code":"Token$toJSON()"},{"path":[]},{"path":"/reference/Token.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Token — Token","text":"","code":"Token$fromJSON(TokenJson)"},{"path":[]},{"path":"/reference/Token.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Token — Token","text":"","code":"Token$toJSONString()"},{"path":[]},{"path":"/reference/Token.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Token — Token","text":"","code":"Token$fromJSONString(TokenJson)"},{"path":"/reference/Token.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Token — Token","text":"objects class cloneable method.","code":""},{"path":"/reference/Token.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Token — Token","text":"","code":"Token$clone(deep = FALSE)"},{"path":"/reference/Token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Token — Token","text":"deep Whether make deep clone.","code":""},{"path":"/reference/TokenRequest.html","id":null,"dir":"Reference","previous_headings":"","what":"TokenRequest — TokenRequest","title":"TokenRequest — TokenRequest","text":"TokenRequest Class","code":""},{"path":"/reference/TokenRequest.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"TokenRequest — TokenRequest","text":"R6Class generator object","code":""},{"path":"/reference/TokenRequest.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"TokenRequest — TokenRequest","text":"expires character [optional] name character [optional] scope character [optional]","code":""},{"path":[]},{"path":"/reference/TokenRequest.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TokenRequest — TokenRequest","text":"TokenRequest$new() TokenRequest$toJSON() TokenRequest$fromJSON() TokenRequest$toJSONString() TokenRequest$fromJSONString() TokenRequest$clone()","code":""},{"path":[]},{"path":"/reference/TokenRequest.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TokenRequest — TokenRequest","text":"","code":"TokenRequest$new(expires = NULL, name = NULL, scope = \"*\", ...)"},{"path":[]},{"path":"/reference/TokenRequest.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TokenRequest — TokenRequest","text":"","code":"TokenRequest$toJSON()"},{"path":[]},{"path":"/reference/TokenRequest.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TokenRequest — TokenRequest","text":"","code":"TokenRequest$fromJSON(TokenRequestJson)"},{"path":[]},{"path":"/reference/TokenRequest.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TokenRequest — TokenRequest","text":"","code":"TokenRequest$toJSONString()"},{"path":[]},{"path":"/reference/TokenRequest.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"TokenRequest — TokenRequest","text":"","code":"TokenRequest$fromJSONString(TokenRequestJson)"},{"path":"/reference/TokenRequest.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TokenRequest — TokenRequest","text":"objects class cloneable method.","code":""},{"path":"/reference/TokenRequest.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"TokenRequest — TokenRequest","text":"","code":"TokenRequest$clone(deep = FALSE)"},{"path":"/reference/TokenRequest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TokenRequest — TokenRequest","text":"deep Whether make deep clone.","code":""},{"path":"/reference/TokenScope.html","id":null,"dir":"Reference","previous_headings":"","what":"TokenScope — TokenScope","title":"TokenScope — TokenScope","text":"TokenScope Class","code":""},{"path":"/reference/TokenScope.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"TokenScope — TokenScope","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/TokenScope.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TokenScope — TokenScope","text":"TokenScope$new() TokenScope$toJSON() TokenScope$fromJSON() TokenScope$toJSONString() TokenScope$fromJSONString() TokenScope$clone()","code":""},{"path":[]},{"path":"/reference/TokenScope.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TokenScope — TokenScope","text":"","code":"TokenScope$new(...)"},{"path":[]},{"path":"/reference/TokenScope.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TokenScope — TokenScope","text":"","code":"TokenScope$toJSON()"},{"path":[]},{"path":"/reference/TokenScope.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TokenScope — TokenScope","text":"","code":"TokenScope$fromJSON(TokenScopeJson)"},{"path":[]},{"path":"/reference/TokenScope.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TokenScope — TokenScope","text":"","code":"TokenScope$toJSONString()"},{"path":[]},{"path":"/reference/TokenScope.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"TokenScope — TokenScope","text":"","code":"TokenScope$fromJSONString(TokenScopeJson)"},{"path":"/reference/TokenScope.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TokenScope — TokenScope","text":"objects class cloneable method.","code":""},{"path":"/reference/TokenScope.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"TokenScope — TokenScope","text":"","code":"TokenScope$clone(deep = FALSE)"},{"path":"/reference/TokenScope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TokenScope — TokenScope","text":"deep Whether make deep clone.","code":""},{"path":"/reference/UDFActions.html","id":null,"dir":"Reference","previous_headings":"","what":"UDFActions — UDFActions","title":"UDFActions — UDFActions","text":"UDFActions Class","code":""},{"path":"/reference/UDFActions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UDFActions — UDFActions","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/UDFActions.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"UDFActions — UDFActions","text":"UDFActions$new() UDFActions$toJSON() UDFActions$fromJSON() UDFActions$toJSONString() UDFActions$fromJSONString() UDFActions$clone()","code":""},{"path":[]},{"path":"/reference/UDFActions.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFActions — UDFActions","text":"","code":"UDFActions$new(...)"},{"path":[]},{"path":"/reference/UDFActions.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFActions — UDFActions","text":"","code":"UDFActions$toJSON()"},{"path":[]},{"path":"/reference/UDFActions.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFActions — UDFActions","text":"","code":"UDFActions$fromJSON(UDFActionsJson)"},{"path":[]},{"path":"/reference/UDFActions.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFActions — UDFActions","text":"","code":"UDFActions$toJSONString()"},{"path":[]},{"path":"/reference/UDFActions.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFActions — UDFActions","text":"","code":"UDFActions$fromJSONString(UDFActionsJson)"},{"path":"/reference/UDFActions.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"UDFActions — UDFActions","text":"objects class cloneable method.","code":""},{"path":"/reference/UDFActions.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFActions — UDFActions","text":"","code":"UDFActions$clone(deep = FALSE)"},{"path":"/reference/UDFActions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UDFActions — UDFActions","text":"deep Whether make deep clone.","code":""},{"path":"/reference/UDFArrayDetails.html","id":null,"dir":"Reference","previous_headings":"","what":"UDFArrayDetails — UDFArrayDetails","title":"UDFArrayDetails — UDFArrayDetails","text":"UDFArrayDetails Class","code":""},{"path":"/reference/UDFArrayDetails.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UDFArrayDetails — UDFArrayDetails","text":"R6Class generator object","code":""},{"path":"/reference/UDFArrayDetails.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"UDFArrayDetails — UDFArrayDetails","text":"uri character [optional] ranges QueryRanges [optional] buffers list( character ) [optional]","code":""},{"path":[]},{"path":"/reference/UDFArrayDetails.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"UDFArrayDetails — UDFArrayDetails","text":"UDFArrayDetails$new() UDFArrayDetails$toJSON() UDFArrayDetails$fromJSON() UDFArrayDetails$toJSONString() UDFArrayDetails$fromJSONString() UDFArrayDetails$clone()","code":""},{"path":[]},{"path":"/reference/UDFArrayDetails.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFArrayDetails — UDFArrayDetails","text":"","code":"UDFArrayDetails$new(uri = NULL, ranges = NULL, buffers = NULL, ...)"},{"path":[]},{"path":"/reference/UDFArrayDetails.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFArrayDetails — UDFArrayDetails","text":"","code":"UDFArrayDetails$toJSON()"},{"path":[]},{"path":"/reference/UDFArrayDetails.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFArrayDetails — UDFArrayDetails","text":"","code":"UDFArrayDetails$fromJSON(UDFArrayDetailsJson)"},{"path":[]},{"path":"/reference/UDFArrayDetails.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFArrayDetails — UDFArrayDetails","text":"","code":"UDFArrayDetails$toJSONString()"},{"path":[]},{"path":"/reference/UDFArrayDetails.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFArrayDetails — UDFArrayDetails","text":"","code":"UDFArrayDetails$fromJSONString(UDFArrayDetailsJson)"},{"path":"/reference/UDFArrayDetails.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"UDFArrayDetails — UDFArrayDetails","text":"objects class cloneable method.","code":""},{"path":"/reference/UDFArrayDetails.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFArrayDetails — UDFArrayDetails","text":"","code":"UDFArrayDetails$clone(deep = FALSE)"},{"path":"/reference/UDFArrayDetails.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UDFArrayDetails — UDFArrayDetails","text":"deep Whether make deep clone.","code":""},{"path":"/reference/UDFFavorite.html","id":null,"dir":"Reference","previous_headings":"","what":"UDFFavorite — UDFFavorite","title":"UDFFavorite — UDFFavorite","text":"UDFFavorite Class","code":""},{"path":"/reference/UDFFavorite.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UDFFavorite — UDFFavorite","text":"R6Class generator object","code":""},{"path":"/reference/UDFFavorite.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"UDFFavorite — UDFFavorite","text":"id character [optional] created_at character [optional] udf_uuid character [optional]","code":""},{"path":[]},{"path":"/reference/UDFFavorite.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"UDFFavorite — UDFFavorite","text":"UDFFavorite$new() UDFFavorite$toJSON() UDFFavorite$fromJSON() UDFFavorite$toJSONString() UDFFavorite$fromJSONString() UDFFavorite$clone()","code":""},{"path":[]},{"path":"/reference/UDFFavorite.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFFavorite — UDFFavorite","text":"","code":"UDFFavorite$new(id = NULL, created_at = NULL, udf_uuid = NULL, ...)"},{"path":[]},{"path":"/reference/UDFFavorite.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFFavorite — UDFFavorite","text":"","code":"UDFFavorite$toJSON()"},{"path":[]},{"path":"/reference/UDFFavorite.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFFavorite — UDFFavorite","text":"","code":"UDFFavorite$fromJSON(UDFFavoriteJson)"},{"path":[]},{"path":"/reference/UDFFavorite.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFFavorite — UDFFavorite","text":"","code":"UDFFavorite$toJSONString()"},{"path":[]},{"path":"/reference/UDFFavorite.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFFavorite — UDFFavorite","text":"","code":"UDFFavorite$fromJSONString(UDFFavoriteJson)"},{"path":"/reference/UDFFavorite.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"UDFFavorite — UDFFavorite","text":"objects class cloneable method.","code":""},{"path":"/reference/UDFFavorite.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFFavorite — UDFFavorite","text":"","code":"UDFFavorite$clone(deep = FALSE)"},{"path":"/reference/UDFFavorite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UDFFavorite — UDFFavorite","text":"deep Whether make deep clone.","code":""},{"path":"/reference/UDFFavoritesData.html","id":null,"dir":"Reference","previous_headings":"","what":"UDFFavoritesData — UDFFavoritesData","title":"UDFFavoritesData — UDFFavoritesData","text":"UDFFavoritesData Class","code":""},{"path":"/reference/UDFFavoritesData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UDFFavoritesData — UDFFavoritesData","text":"R6Class generator object","code":""},{"path":"/reference/UDFFavoritesData.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"UDFFavoritesData — UDFFavoritesData","text":"udfs list( ArrayInfo ) [optional] pagination_metadata PaginationMetadata [optional]","code":""},{"path":[]},{"path":"/reference/UDFFavoritesData.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"UDFFavoritesData — UDFFavoritesData","text":"UDFFavoritesData$new() UDFFavoritesData$toJSON() UDFFavoritesData$fromJSON() UDFFavoritesData$toJSONString() UDFFavoritesData$fromJSONString() UDFFavoritesData$clone()","code":""},{"path":[]},{"path":"/reference/UDFFavoritesData.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFFavoritesData — UDFFavoritesData","text":"","code":"UDFFavoritesData$new(udfs = NULL, pagination_metadata = NULL, ...)"},{"path":[]},{"path":"/reference/UDFFavoritesData.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFFavoritesData — UDFFavoritesData","text":"","code":"UDFFavoritesData$toJSON()"},{"path":[]},{"path":"/reference/UDFFavoritesData.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFFavoritesData — UDFFavoritesData","text":"","code":"UDFFavoritesData$fromJSON(UDFFavoritesDataJson)"},{"path":[]},{"path":"/reference/UDFFavoritesData.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFFavoritesData — UDFFavoritesData","text":"","code":"UDFFavoritesData$toJSONString()"},{"path":[]},{"path":"/reference/UDFFavoritesData.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFFavoritesData — UDFFavoritesData","text":"","code":"UDFFavoritesData$fromJSONString(UDFFavoritesDataJson)"},{"path":"/reference/UDFFavoritesData.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"UDFFavoritesData — UDFFavoritesData","text":"objects class cloneable method.","code":""},{"path":"/reference/UDFFavoritesData.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFFavoritesData — UDFFavoritesData","text":"","code":"UDFFavoritesData$clone(deep = FALSE)"},{"path":"/reference/UDFFavoritesData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UDFFavoritesData — UDFFavoritesData","text":"deep Whether make deep clone.","code":""},{"path":"/reference/UDFImage.html","id":null,"dir":"Reference","previous_headings":"","what":"UDFImage — UDFImage","title":"UDFImage — UDFImage","text":"UDFImage Class","code":""},{"path":"/reference/UDFImage.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UDFImage — UDFImage","text":"R6Class generator object","code":""},{"path":"/reference/UDFImage.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"UDFImage — UDFImage","text":"id character [optional] name character [optional] language UDFLanguage [optional]","code":""},{"path":[]},{"path":"/reference/UDFImage.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"UDFImage — UDFImage","text":"UDFImage$new() UDFImage$toJSON() UDFImage$fromJSON() UDFImage$toJSONString() UDFImage$fromJSONString() UDFImage$clone()","code":""},{"path":[]},{"path":"/reference/UDFImage.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFImage — UDFImage","text":"","code":"UDFImage$new(id = NULL, name = NULL, language = NULL, ...)"},{"path":[]},{"path":"/reference/UDFImage.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFImage — UDFImage","text":"","code":"UDFImage$toJSON()"},{"path":[]},{"path":"/reference/UDFImage.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFImage — UDFImage","text":"","code":"UDFImage$fromJSON(UDFImageJson)"},{"path":[]},{"path":"/reference/UDFImage.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFImage — UDFImage","text":"","code":"UDFImage$toJSONString()"},{"path":[]},{"path":"/reference/UDFImage.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFImage — UDFImage","text":"","code":"UDFImage$fromJSONString(UDFImageJson)"},{"path":"/reference/UDFImage.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"UDFImage — UDFImage","text":"objects class cloneable method.","code":""},{"path":"/reference/UDFImage.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFImage — UDFImage","text":"","code":"UDFImage$clone(deep = FALSE)"},{"path":"/reference/UDFImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UDFImage — UDFImage","text":"deep Whether make deep clone.","code":""},{"path":"/reference/UDFImageVersion.html","id":null,"dir":"Reference","previous_headings":"","what":"UDFImageVersion — UDFImageVersion","title":"UDFImageVersion — UDFImageVersion","text":"UDFImageVersion Class","code":""},{"path":"/reference/UDFImageVersion.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UDFImageVersion — UDFImageVersion","text":"R6Class generator object","code":""},{"path":"/reference/UDFImageVersion.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"UDFImageVersion — UDFImageVersion","text":"id character [optional] name character [optional] udf_image_uuid character [optional] docker_image character [optional] version numeric [optional] default character [optional] latest character [optional]","code":""},{"path":[]},{"path":"/reference/UDFImageVersion.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"UDFImageVersion — UDFImageVersion","text":"UDFImageVersion$new() UDFImageVersion$toJSON() UDFImageVersion$fromJSON() UDFImageVersion$toJSONString() UDFImageVersion$fromJSONString() UDFImageVersion$clone()","code":""},{"path":[]},{"path":"/reference/UDFImageVersion.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFImageVersion — UDFImageVersion","text":"","code":"UDFImageVersion$new(   id = NULL,   name = NULL,   udf_image_uuid = NULL,   docker_image = NULL,   version = NULL,   default = NULL,   latest = NULL,   ... )"},{"path":[]},{"path":"/reference/UDFImageVersion.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFImageVersion — UDFImageVersion","text":"","code":"UDFImageVersion$toJSON()"},{"path":[]},{"path":"/reference/UDFImageVersion.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFImageVersion — UDFImageVersion","text":"","code":"UDFImageVersion$fromJSON(UDFImageVersionJson)"},{"path":[]},{"path":"/reference/UDFImageVersion.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFImageVersion — UDFImageVersion","text":"","code":"UDFImageVersion$toJSONString()"},{"path":[]},{"path":"/reference/UDFImageVersion.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFImageVersion — UDFImageVersion","text":"","code":"UDFImageVersion$fromJSONString(UDFImageVersionJson)"},{"path":"/reference/UDFImageVersion.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"UDFImageVersion — UDFImageVersion","text":"objects class cloneable method.","code":""},{"path":"/reference/UDFImageVersion.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFImageVersion — UDFImageVersion","text":"","code":"UDFImageVersion$clone(deep = FALSE)"},{"path":"/reference/UDFImageVersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UDFImageVersion — UDFImageVersion","text":"deep Whether make deep clone.","code":""},{"path":"/reference/UDFInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"UDFInfo — UDFInfo","title":"UDFInfo — UDFInfo","text":"UDFInfo Class","code":""},{"path":"/reference/UDFInfo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UDFInfo — UDFInfo","text":"R6Class generator object","code":""},{"path":"/reference/UDFInfo.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"UDFInfo — UDFInfo","text":"id character [optional] name character [optional] language UDFLanguage [optional] type UDFType [optional] readme character [optional] license_id character [optional] license_text character [optional] tags list( character ) [optional]","code":""},{"path":[]},{"path":"/reference/UDFInfo.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"UDFInfo — UDFInfo","text":"UDFInfo$new() UDFInfo$toJSON() UDFInfo$fromJSON() UDFInfo$toJSONString() UDFInfo$fromJSONString() UDFInfo$clone()","code":""},{"path":[]},{"path":"/reference/UDFInfo.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFInfo — UDFInfo","text":"","code":"UDFInfo$new(   id = NULL,   name = NULL,   language = NULL,   type = NULL,   readme = NULL,   license_id = NULL,   license_text = NULL,   tags = NULL,   ... )"},{"path":[]},{"path":"/reference/UDFInfo.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFInfo — UDFInfo","text":"","code":"UDFInfo$toJSON()"},{"path":[]},{"path":"/reference/UDFInfo.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFInfo — UDFInfo","text":"","code":"UDFInfo$fromJSON(UDFInfoJson)"},{"path":[]},{"path":"/reference/UDFInfo.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFInfo — UDFInfo","text":"","code":"UDFInfo$toJSONString()"},{"path":[]},{"path":"/reference/UDFInfo.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFInfo — UDFInfo","text":"","code":"UDFInfo$fromJSONString(UDFInfoJson)"},{"path":"/reference/UDFInfo.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"UDFInfo — UDFInfo","text":"objects class cloneable method.","code":""},{"path":"/reference/UDFInfo.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFInfo — UDFInfo","text":"","code":"UDFInfo$clone(deep = FALSE)"},{"path":"/reference/UDFInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UDFInfo — UDFInfo","text":"deep Whether make deep clone.","code":""},{"path":"/reference/UDFInfoUpdate.html","id":null,"dir":"Reference","previous_headings":"","what":"UDFInfoUpdate — UDFInfoUpdate","title":"UDFInfoUpdate — UDFInfoUpdate","text":"UDFInfoUpdate Class","code":""},{"path":"/reference/UDFInfoUpdate.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UDFInfoUpdate — UDFInfoUpdate","text":"R6Class generator object","code":""},{"path":"/reference/UDFInfoUpdate.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"UDFInfoUpdate — UDFInfoUpdate","text":"name character [optional] language UDFLanguage [optional] version character [optional] image_name character [optional] type UDFType [optional] exec character [optional] exec_raw character [optional] readme character [optional] license_id character [optional] license_text character [optional] tags list( character ) [optional]","code":""},{"path":[]},{"path":"/reference/UDFInfoUpdate.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"UDFInfoUpdate — UDFInfoUpdate","text":"UDFInfoUpdate$new() UDFInfoUpdate$toJSON() UDFInfoUpdate$fromJSON() UDFInfoUpdate$toJSONString() UDFInfoUpdate$fromJSONString() UDFInfoUpdate$clone()","code":""},{"path":[]},{"path":"/reference/UDFInfoUpdate.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFInfoUpdate — UDFInfoUpdate","text":"","code":"UDFInfoUpdate$new(   name = NULL,   language = NULL,   version = NULL,   image_name = NULL,   type = NULL,   exec = NULL,   exec_raw = NULL,   readme = NULL,   license_id = NULL,   license_text = NULL,   tags = NULL,   ... )"},{"path":[]},{"path":"/reference/UDFInfoUpdate.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFInfoUpdate — UDFInfoUpdate","text":"","code":"UDFInfoUpdate$toJSON()"},{"path":[]},{"path":"/reference/UDFInfoUpdate.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFInfoUpdate — UDFInfoUpdate","text":"","code":"UDFInfoUpdate$fromJSON(UDFInfoUpdateJson)"},{"path":[]},{"path":"/reference/UDFInfoUpdate.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFInfoUpdate — UDFInfoUpdate","text":"","code":"UDFInfoUpdate$toJSONString()"},{"path":[]},{"path":"/reference/UDFInfoUpdate.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFInfoUpdate — UDFInfoUpdate","text":"","code":"UDFInfoUpdate$fromJSONString(UDFInfoUpdateJson)"},{"path":"/reference/UDFInfoUpdate.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"UDFInfoUpdate — UDFInfoUpdate","text":"objects class cloneable method.","code":""},{"path":"/reference/UDFInfoUpdate.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFInfoUpdate — UDFInfoUpdate","text":"","code":"UDFInfoUpdate$clone(deep = FALSE)"},{"path":"/reference/UDFInfoUpdate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UDFInfoUpdate — UDFInfoUpdate","text":"deep Whether make deep clone.","code":""},{"path":"/reference/UDFLanguage.html","id":null,"dir":"Reference","previous_headings":"","what":"UDFLanguage — UDFLanguage","title":"UDFLanguage — UDFLanguage","text":"UDFLanguage Class","code":""},{"path":"/reference/UDFLanguage.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UDFLanguage — UDFLanguage","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/UDFLanguage.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"UDFLanguage — UDFLanguage","text":"UDFLanguage$new() UDFLanguage$toJSON() UDFLanguage$fromJSON() UDFLanguage$toJSONString() UDFLanguage$fromJSONString() UDFLanguage$clone()","code":""},{"path":[]},{"path":"/reference/UDFLanguage.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFLanguage — UDFLanguage","text":"","code":"UDFLanguage$new(...)"},{"path":[]},{"path":"/reference/UDFLanguage.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFLanguage — UDFLanguage","text":"","code":"UDFLanguage$toJSON()"},{"path":[]},{"path":"/reference/UDFLanguage.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFLanguage — UDFLanguage","text":"","code":"UDFLanguage$fromJSON(UDFLanguageJson)"},{"path":[]},{"path":"/reference/UDFLanguage.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFLanguage — UDFLanguage","text":"","code":"UDFLanguage$toJSONString()"},{"path":[]},{"path":"/reference/UDFLanguage.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFLanguage — UDFLanguage","text":"","code":"UDFLanguage$fromJSONString(UDFLanguageJson)"},{"path":"/reference/UDFLanguage.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"UDFLanguage — UDFLanguage","text":"objects class cloneable method.","code":""},{"path":"/reference/UDFLanguage.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFLanguage — UDFLanguage","text":"","code":"UDFLanguage$clone(deep = FALSE)"},{"path":"/reference/UDFLanguage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UDFLanguage — UDFLanguage","text":"deep Whether make deep clone.","code":""},{"path":"/reference/UDFSharing.html","id":null,"dir":"Reference","previous_headings":"","what":"UDFSharing — UDFSharing","title":"UDFSharing — UDFSharing","text":"UDFSharing Class","code":""},{"path":"/reference/UDFSharing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UDFSharing — UDFSharing","text":"R6Class generator object","code":""},{"path":"/reference/UDFSharing.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"UDFSharing — UDFSharing","text":"actions list( UDFActions ) [optional] namespace character [optional] namespace_type character [optional]","code":""},{"path":[]},{"path":"/reference/UDFSharing.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"UDFSharing — UDFSharing","text":"UDFSharing$new() UDFSharing$toJSON() UDFSharing$fromJSON() UDFSharing$toJSONString() UDFSharing$fromJSONString() UDFSharing$clone()","code":""},{"path":[]},{"path":"/reference/UDFSharing.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFSharing — UDFSharing","text":"","code":"UDFSharing$new(actions = NULL, namespace = NULL, namespace_type = NULL, ...)"},{"path":[]},{"path":"/reference/UDFSharing.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFSharing — UDFSharing","text":"","code":"UDFSharing$toJSON()"},{"path":[]},{"path":"/reference/UDFSharing.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFSharing — UDFSharing","text":"","code":"UDFSharing$fromJSON(UDFSharingJson)"},{"path":[]},{"path":"/reference/UDFSharing.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFSharing — UDFSharing","text":"","code":"UDFSharing$toJSONString()"},{"path":[]},{"path":"/reference/UDFSharing.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFSharing — UDFSharing","text":"","code":"UDFSharing$fromJSONString(UDFSharingJson)"},{"path":"/reference/UDFSharing.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"UDFSharing — UDFSharing","text":"objects class cloneable method.","code":""},{"path":"/reference/UDFSharing.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFSharing — UDFSharing","text":"","code":"UDFSharing$clone(deep = FALSE)"},{"path":"/reference/UDFSharing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UDFSharing — UDFSharing","text":"deep Whether make deep clone.","code":""},{"path":"/reference/UDFSubarray.html","id":null,"dir":"Reference","previous_headings":"","what":"UDFSubarray — UDFSubarray","title":"UDFSubarray — UDFSubarray","text":"UDFSubarray Class","code":""},{"path":"/reference/UDFSubarray.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UDFSubarray — UDFSubarray","text":"R6Class generator object","code":""},{"path":"/reference/UDFSubarray.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"UDFSubarray — UDFSubarray","text":"layout Layout [optional] ranges list( UDFSubarrayRange ) [optional]","code":""},{"path":[]},{"path":"/reference/UDFSubarray.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"UDFSubarray — UDFSubarray","text":"UDFSubarray$new() UDFSubarray$toJSON() UDFSubarray$fromJSON() UDFSubarray$toJSONString() UDFSubarray$fromJSONString() UDFSubarray$clone()","code":""},{"path":[]},{"path":"/reference/UDFSubarray.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFSubarray — UDFSubarray","text":"","code":"UDFSubarray$new(layout = NULL, ranges = NULL, ...)"},{"path":[]},{"path":"/reference/UDFSubarray.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFSubarray — UDFSubarray","text":"","code":"UDFSubarray$toJSON()"},{"path":[]},{"path":"/reference/UDFSubarray.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFSubarray — UDFSubarray","text":"","code":"UDFSubarray$fromJSON(UDFSubarrayJson)"},{"path":[]},{"path":"/reference/UDFSubarray.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFSubarray — UDFSubarray","text":"","code":"UDFSubarray$toJSONString()"},{"path":[]},{"path":"/reference/UDFSubarray.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFSubarray — UDFSubarray","text":"","code":"UDFSubarray$fromJSONString(UDFSubarrayJson)"},{"path":"/reference/UDFSubarray.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"UDFSubarray — UDFSubarray","text":"objects class cloneable method.","code":""},{"path":"/reference/UDFSubarray.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFSubarray — UDFSubarray","text":"","code":"UDFSubarray$clone(deep = FALSE)"},{"path":"/reference/UDFSubarray.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UDFSubarray — UDFSubarray","text":"deep Whether make deep clone.","code":""},{"path":"/reference/UDFSubarrayRange.html","id":null,"dir":"Reference","previous_headings":"","what":"UDFSubarrayRange — UDFSubarrayRange","title":"UDFSubarrayRange — UDFSubarrayRange","text":"UDFSubarrayRange Class","code":""},{"path":"/reference/UDFSubarrayRange.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UDFSubarrayRange — UDFSubarrayRange","text":"R6Class generator object","code":""},{"path":"/reference/UDFSubarrayRange.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"UDFSubarrayRange — UDFSubarrayRange","text":"dimension_id integer [optional] range_start DimensionCoordinate [optional] range_end DimensionCoordinate [optional]","code":""},{"path":[]},{"path":"/reference/UDFSubarrayRange.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"UDFSubarrayRange — UDFSubarrayRange","text":"UDFSubarrayRange$new() UDFSubarrayRange$toJSON() UDFSubarrayRange$fromJSON() UDFSubarrayRange$toJSONString() UDFSubarrayRange$fromJSONString() UDFSubarrayRange$clone()","code":""},{"path":[]},{"path":"/reference/UDFSubarrayRange.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFSubarrayRange — UDFSubarrayRange","text":"","code":"UDFSubarrayRange$new(   dimension_id = NULL,   range_start = NULL,   range_end = NULL,   ... )"},{"path":[]},{"path":"/reference/UDFSubarrayRange.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFSubarrayRange — UDFSubarrayRange","text":"","code":"UDFSubarrayRange$toJSON()"},{"path":[]},{"path":"/reference/UDFSubarrayRange.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFSubarrayRange — UDFSubarrayRange","text":"","code":"UDFSubarrayRange$fromJSON(UDFSubarrayRangeJson)"},{"path":[]},{"path":"/reference/UDFSubarrayRange.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFSubarrayRange — UDFSubarrayRange","text":"","code":"UDFSubarrayRange$toJSONString()"},{"path":[]},{"path":"/reference/UDFSubarrayRange.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFSubarrayRange — UDFSubarrayRange","text":"","code":"UDFSubarrayRange$fromJSONString(UDFSubarrayRangeJson)"},{"path":"/reference/UDFSubarrayRange.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"UDFSubarrayRange — UDFSubarrayRange","text":"objects class cloneable method.","code":""},{"path":"/reference/UDFSubarrayRange.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFSubarrayRange — UDFSubarrayRange","text":"","code":"UDFSubarrayRange$clone(deep = FALSE)"},{"path":"/reference/UDFSubarrayRange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UDFSubarrayRange — UDFSubarrayRange","text":"deep Whether make deep clone.","code":""},{"path":"/reference/UDFType.html","id":null,"dir":"Reference","previous_headings":"","what":"UDFType — UDFType","title":"UDFType — UDFType","text":"UDFType Class","code":""},{"path":"/reference/UDFType.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UDFType — UDFType","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/UDFType.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"UDFType — UDFType","text":"UDFType$new() UDFType$toJSON() UDFType$fromJSON() UDFType$toJSONString() UDFType$fromJSONString() UDFType$clone()","code":""},{"path":[]},{"path":"/reference/UDFType.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFType — UDFType","text":"","code":"UDFType$new(...)"},{"path":[]},{"path":"/reference/UDFType.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFType — UDFType","text":"","code":"UDFType$toJSON()"},{"path":[]},{"path":"/reference/UDFType.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFType — UDFType","text":"","code":"UDFType$fromJSON(UDFTypeJson)"},{"path":[]},{"path":"/reference/UDFType.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFType — UDFType","text":"","code":"UDFType$toJSONString()"},{"path":[]},{"path":"/reference/UDFType.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFType — UDFType","text":"","code":"UDFType$fromJSONString(UDFTypeJson)"},{"path":"/reference/UDFType.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"UDFType — UDFType","text":"objects class cloneable method.","code":""},{"path":"/reference/UDFType.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"UDFType — UDFType","text":"","code":"UDFType$clone(deep = FALSE)"},{"path":"/reference/UDFType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UDFType — UDFType","text":"deep Whether make deep clone.","code":""},{"path":"/reference/UdfApi.html","id":null,"dir":"Reference","previous_headings":"","what":"Udf operations — UdfApi","title":"Udf operations — UdfApi","text":"tiledbcloud.Udf","code":""},{"path":"/reference/UdfApi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Udf operations — UdfApi","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/UdfApi.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Udf operations — UdfApi","text":"apiClient Handles client-server communication.","code":""},{"path":[]},{"path":"/reference/UdfApi.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Udf operations — UdfApi","text":"UdfApi$new() UdfApi$DeleteUDFInfo() UdfApi$DeleteUDFInfoWithHttpInfo() UdfApi$GetUDFInfo() UdfApi$GetUDFInfoWithHttpInfo() UdfApi$GetUDFInfoSharingPolicies() UdfApi$GetUDFInfoSharingPoliciesWithHttpInfo() UdfApi$RegisterUDFInfo() UdfApi$RegisterUDFInfoWithHttpInfo() UdfApi$ShareUDFInfo() UdfApi$ShareUDFInfoWithHttpInfo() UdfApi$SubmitGenericUDF() UdfApi$SubmitGenericUDFWithHttpInfo() UdfApi$SubmitMultiArrayUDF() UdfApi$SubmitMultiArrayUDFWithHttpInfo() UdfApi$SubmitUDF() UdfApi$SubmitUDFWithHttpInfo() UdfApi$UdfNamespaceArrayEndTimestampsGet() UdfApi$UdfNamespaceArrayEndTimestampsGetWithHttpInfo() UdfApi$UpdateUDFInfo() UdfApi$UpdateUDFInfoWithHttpInfo() UdfApi$clone()","code":""},{"path":[]},{"path":"/reference/UdfApi.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$new(apiClient)"},{"path":[]},{"path":"/reference/UdfApi.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$DeleteUDFInfo(namespace, name, ...)"},{"path":[]},{"path":"/reference/UdfApi.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$DeleteUDFInfoWithHttpInfo(namespace, name, ...)"},{"path":[]},{"path":"/reference/UdfApi.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$GetUDFInfo(namespace, name, ...)"},{"path":[]},{"path":"/reference/UdfApi.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$GetUDFInfoWithHttpInfo(namespace, name, ...)"},{"path":[]},{"path":"/reference/UdfApi.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$GetUDFInfoSharingPolicies(namespace, name, ...)"},{"path":[]},{"path":"/reference/UdfApi.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$GetUDFInfoSharingPoliciesWithHttpInfo(namespace, name, ...)"},{"path":[]},{"path":"/reference/UdfApi.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$RegisterUDFInfo(namespace, name, udf, ...)"},{"path":[]},{"path":"/reference/UdfApi.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$RegisterUDFInfoWithHttpInfo(namespace, name, udf, ...)"},{"path":[]},{"path":"/reference/UdfApi.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$ShareUDFInfo(namespace, name, udf.sharing, ...)"},{"path":[]},{"path":"/reference/UdfApi.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$ShareUDFInfoWithHttpInfo(namespace, name, udf.sharing, ...)"},{"path":[]},{"path":"/reference/UdfApi.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$SubmitGenericUDF(namespace, udf, accept.encoding = NULL, ...)"},{"path":[]},{"path":"/reference/UdfApi.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$SubmitGenericUDFWithHttpInfo(   namespace,   udf,   accept.encoding = NULL,   ... )"},{"path":[]},{"path":"/reference/UdfApi.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$SubmitMultiArrayUDF(namespace, udf, accept.encoding = NULL, ...)"},{"path":[]},{"path":"/reference/UdfApi.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$SubmitMultiArrayUDFWithHttpInfo(   namespace,   udf,   accept.encoding = NULL,   ... )"},{"path":[]},{"path":"/reference/UdfApi.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$SubmitUDF(   namespace,   array,   udf,   x.payer = NULL,   accept.encoding = NULL,   v2 = NULL,   ... )"},{"path":[]},{"path":"/reference/UdfApi.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$SubmitUDFWithHttpInfo(   namespace,   array,   udf,   x.payer = NULL,   accept.encoding = NULL,   v2 = NULL,   ... )"},{"path":[]},{"path":"/reference/UdfApi.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$UdfNamespaceArrayEndTimestampsGet(   namespace,   array,   page = NULL,   per.page = NULL,   ... )"},{"path":[]},{"path":"/reference/UdfApi.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$UdfNamespaceArrayEndTimestampsGetWithHttpInfo(   namespace,   array,   page = NULL,   per.page = NULL,   ... )"},{"path":[]},{"path":"/reference/UdfApi.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$UpdateUDFInfo(namespace, name, udf, ...)"},{"path":[]},{"path":"/reference/UdfApi.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$UpdateUDFInfoWithHttpInfo(namespace, name, udf, ...)"},{"path":"/reference/UdfApi.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Udf operations — UdfApi","text":"objects class cloneable method.","code":""},{"path":"/reference/UdfApi.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Udf operations — UdfApi","text":"","code":"UdfApi$clone(deep = FALSE)"},{"path":"/reference/UdfApi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Udf operations — UdfApi","text":"deep Whether make deep clone.","code":""},{"path":"/reference/UdfApi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Udf operations — UdfApi","text":"","code":"if (FALSE) { ####################  DeleteUDFInfo  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace array is in (an organization name or user's username) var.name <- 'name_example' # character | name to register udf under  api.instance <- UdfApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$DeleteUDFInfo(var.namespace, var.name)   ####################  GetUDFInfo  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace array is in (an organization name or user's username) var.name <- 'name_example' # character | name to register udf under  api.instance <- UdfApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetUDFInfo(var.namespace, var.name)   ####################  GetUDFInfoSharingPolicies  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace array is in (an organization name or user's username) var.name <- 'name_example' # character | name of UDFInfo  api.instance <- UdfApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetUDFInfoSharingPolicies(var.namespace, var.name)   ####################  RegisterUDFInfo  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace array is in (an organization name or user's username) var.name <- 'name_example' # character | name to register udf under var.udf <- UDFInfoUpdate$new() # UDFInfoUpdate | udf to register  api.instance <- UdfApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$RegisterUDFInfo(var.namespace, var.name, var.udf)   ####################  ShareUDFInfo  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace array is in (an organization name or user's username) var.name <- 'name_example' # character | name of UDFInfo var.udf.sharing <- UDFSharing$new() # UDFSharing | Namespace and list of permissions to share with. An empty list of permissions will remove the namespace, if permissions already exist they will be deleted then new ones added. In the event of a failure, the new polcies will be rolled back to prevent partial policies, and its likely the udf will not be shared with the namespace at all  api.instance <- UdfApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$ShareUDFInfo(var.namespace, var.name, var.udf.sharing)   ####################  SubmitGenericUDF  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace array is in (an organization name or user's username) var.udf <- GenericUDF$new() # GenericUDF | udf to run var.accept.encoding <- 'accept.encoding_example' # character | Encoding to use  api.instance <- UdfApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$SubmitGenericUDF(var.namespace, var.udf, accept.encoding=var.accept.encoding)   ####################  SubmitMultiArrayUDF  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace array is in (an organization name or user's username) var.udf <- MultiArrayUDF$new() # MultiArrayUDF | udf to run var.accept.encoding <- 'accept.encoding_example' # character | Encoding to use  api.instance <- UdfApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$SubmitMultiArrayUDF(var.namespace, var.udf, accept.encoding=var.accept.encoding)   ####################  SubmitUDF  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace array is in (an organization name or user's username) var.array <- 'array_example' # character | name/uri of array that is url-encoded var.udf <- MultiArrayUDF$new() # MultiArrayUDF | udf to run var.x.payer <- 'x.payer_example' # character | Name of organization or user who should be charged for this request var.accept.encoding <- 'accept.encoding_example' # character | Encoding to use var.v2 <- 'v2_example' # character | flag to indicate if v2 array udfs should be used, currently in beta testing. Setting any value will enable v2 array udfs  api.instance <- UdfApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$SubmitUDF(var.namespace, var.array, var.udf, x.payer=var.x.payer, accept.encoding=var.accept.encoding, v2=var.v2)   ####################  UdfNamespaceArrayEndTimestampsGet  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace array is in (an organization name or user's username) var.array <- 'array_example' # character | name/uri of array that is url-encoded var.page <- 56 # integer | pagination offset var.per.page <- 56 # integer | pagination limit  api.instance <- UdfApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$UdfNamespaceArrayEndTimestampsGet(var.namespace, var.array, page=var.page, per.page=var.per.page)   ####################  UpdateUDFInfo  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace array is in (an organization name or user's username) var.name <- 'name_example' # character | name to register udf under var.udf <- UDFInfoUpdate$new() # UDFInfoUpdate | udf to update  api.instance <- UdfApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$UpdateUDFInfo(var.namespace, var.name, var.udf)   }"},{"path":"/reference/User.html","id":null,"dir":"Reference","previous_headings":"","what":"User — User","title":"User — User","text":"User Class","code":""},{"path":"/reference/User.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"User — User","text":"R6Class generator object","code":""},{"path":"/reference/User.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"User — User","text":"id character [optional] username character password character [optional] name character [optional] email character [optional] is_valid_email character [optional] stripe_connect character [optional] company character [optional] logo character [optional] last_activity_date character [optional] timezone character [optional] organizations list( OrganizationUser ) [optional] allowed_actions list( NamespaceActions ) [optional] enabled_features list( character ) [optional] unpaid_subscription character [optional] default_s3_path character [optional] default_s3_path_credentials_name character [optional] default_namespace_charged character [optional]","code":""},{"path":[]},{"path":"/reference/User.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"User — User","text":"User$new() User$toJSON() User$fromJSON() User$toJSONString() User$fromJSONString() User$clone()","code":""},{"path":[]},{"path":"/reference/User.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User — User","text":"","code":"User$new(   username,   id = NULL,   password = NULL,   name = NULL,   email = NULL,   is_valid_email = NULL,   stripe_connect = NULL,   company = NULL,   logo = NULL,   last_activity_date = NULL,   timezone = NULL,   organizations = NULL,   allowed_actions = NULL,   enabled_features = NULL,   unpaid_subscription = NULL,   default_s3_path = NULL,   default_s3_path_credentials_name = NULL,   default_namespace_charged = NULL,   ... )"},{"path":[]},{"path":"/reference/User.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"User — User","text":"","code":"User$toJSON()"},{"path":[]},{"path":"/reference/User.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"User — User","text":"","code":"User$fromJSON(UserJson)"},{"path":[]},{"path":"/reference/User.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"User — User","text":"","code":"User$toJSONString()"},{"path":[]},{"path":"/reference/User.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"User — User","text":"","code":"User$fromJSONString(UserJson)"},{"path":"/reference/User.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"User — User","text":"objects class cloneable method.","code":""},{"path":"/reference/User.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"User — User","text":"","code":"User$clone(deep = FALSE)"},{"path":"/reference/User.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User — User","text":"deep Whether make deep clone.","code":""},{"path":"/reference/UserApi.html","id":null,"dir":"Reference","previous_headings":"","what":"User operations — UserApi","title":"User operations — UserApi","text":"tiledbcloud.User","code":""},{"path":"/reference/UserApi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"User operations — UserApi","text":"R6Class generator object","code":""},{"path":[]},{"path":"/reference/UserApi.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"User operations — UserApi","text":"apiClient Handles client-server communication.","code":""},{"path":[]},{"path":"/reference/UserApi.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"User operations — UserApi","text":"UserApi$new() UserApi$AddAWSAccessCredentials() UserApi$AddAWSAccessCredentialsWithHttpInfo() UserApi$AddUserToOrganization() UserApi$AddUserToOrganizationWithHttpInfo() UserApi$CheckAWSAccessCredentials() UserApi$CheckAWSAccessCredentialsWithHttpInfo() UserApi$CheckAWSAccessCredentialsByName() UserApi$CheckAWSAccessCredentialsByNameWithHttpInfo() UserApi$ConfirmEmail() UserApi$ConfirmEmailWithHttpInfo() UserApi$CreateUser() UserApi$CreateUserWithHttpInfo() UserApi$DeleteAWSAccessCredentials() UserApi$DeleteAWSAccessCredentialsWithHttpInfo() UserApi$DeleteUser() UserApi$DeleteUserWithHttpInfo() UserApi$DeleteUserFromOrganization() UserApi$DeleteUserFromOrganizationWithHttpInfo() UserApi$GetOrganizationUser() UserApi$GetOrganizationUserWithHttpInfo() UserApi$GetSession() UserApi$GetSessionWithHttpInfo() UserApi$GetTokenScopes() UserApi$GetTokenScopesWithHttpInfo() UserApi$GetUser() UserApi$GetUserWithHttpInfo() UserApi$GetUserWithUsername() UserApi$GetUserWithUsernameWithHttpInfo() UserApi$RequestToken() UserApi$RequestTokenWithHttpInfo() UserApi$ResetUserPassword() UserApi$ResetUserPasswordWithHttpInfo() UserApi$RevokeToken() UserApi$RevokeTokenWithHttpInfo() UserApi$TokensGet() UserApi$TokensGetWithHttpInfo() UserApi$TokensSessionGet() UserApi$TokensSessionGetWithHttpInfo() UserApi$UpdateAWSAccessCredentials() UserApi$UpdateAWSAccessCredentialsWithHttpInfo() UserApi$UpdateUser() UserApi$UpdateUserWithHttpInfo() UserApi$UpdateUserInOrganization() UserApi$UpdateUserInOrganizationWithHttpInfo() UserApi$clone()","code":""},{"path":[]},{"path":"/reference/UserApi.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$new(apiClient)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$AddAWSAccessCredentials(namespace, aws.access.credentials, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$AddAWSAccessCredentialsWithHttpInfo(   namespace,   aws.access.credentials,   ... )"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$AddUserToOrganization(organization, user, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$AddUserToOrganizationWithHttpInfo(organization, user, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$CheckAWSAccessCredentials(namespace, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$CheckAWSAccessCredentialsWithHttpInfo(namespace, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$CheckAWSAccessCredentialsByName(namespace, name, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$CheckAWSAccessCredentialsByNameWithHttpInfo(namespace, name, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$ConfirmEmail(...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$ConfirmEmailWithHttpInfo(...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$CreateUser(user, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$CreateUserWithHttpInfo(user, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$DeleteAWSAccessCredentials(namespace, name, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$DeleteAWSAccessCredentialsWithHttpInfo(namespace, name, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$DeleteUser(username, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$DeleteUserWithHttpInfo(username, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$DeleteUserFromOrganization(organization, username, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$DeleteUserFromOrganizationWithHttpInfo(organization, username, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$GetOrganizationUser(organization, username, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$GetOrganizationUserWithHttpInfo(organization, username, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$GetSession(remember.me = NULL, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$GetSessionWithHttpInfo(remember.me = NULL, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$GetTokenScopes(...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$GetTokenScopesWithHttpInfo(...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-25","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$GetUser(...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-26","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$GetUserWithHttpInfo(...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-27","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$GetUserWithUsername(username, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-28","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$GetUserWithUsernameWithHttpInfo(username, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-29","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$RequestToken(token.request = NULL, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-30","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$RequestTokenWithHttpInfo(token.request = NULL, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-31","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$ResetUserPassword(user, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-32","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$ResetUserPasswordWithHttpInfo(user, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-33","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$RevokeToken(token, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-34","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$RevokeTokenWithHttpInfo(token, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-35","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$TokensGet(...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-36","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$TokensGetWithHttpInfo(...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-37","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$TokensSessionGet(...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-38","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$TokensSessionGetWithHttpInfo(...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-39","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$UpdateAWSAccessCredentials(   namespace,   name,   aws.access.credentials,   ... )"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-40","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$UpdateAWSAccessCredentialsWithHttpInfo(   namespace,   name,   aws.access.credentials,   ... )"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-41","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$UpdateUser(username, user, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-42","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$UpdateUserWithHttpInfo(username, user, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-43","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$UpdateUserInOrganization(organization, username, user, ...)"},{"path":[]},{"path":"/reference/UserApi.html","id":"usage-44","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$UpdateUserInOrganizationWithHttpInfo(organization, username, user, ...)"},{"path":"/reference/UserApi.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"User operations — UserApi","text":"objects class cloneable method.","code":""},{"path":"/reference/UserApi.html","id":"usage-45","dir":"Reference","previous_headings":"","what":"Usage","title":"User operations — UserApi","text":"","code":"UserApi$clone(deep = FALSE)"},{"path":"/reference/UserApi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User operations — UserApi","text":"deep Whether make deep clone.","code":""},{"path":"/reference/UserApi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"User operations — UserApi","text":"","code":"if (FALSE) { ####################  AddAWSAccessCredentials  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace var.aws.access.credentials <- AWSAccessCredentials$new() # AWSAccessCredentials | aws access credentials to store for a namespace  api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$AddAWSAccessCredentials(var.namespace, var.aws.access.credentials)   ####################  AddUserToOrganization  ####################  library(tiledbcloud) var.organization <- 'organization_example' # character | organization name var.user <- OrganizationUser$new() # OrganizationUser | user to add  api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$AddUserToOrganization(var.organization, var.user)   ####################  CheckAWSAccessCredentials  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace  api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$CheckAWSAccessCredentials(var.namespace)   ####################  CheckAWSAccessCredentialsByName  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace var.name <- 'name_example' # character | name  api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$CheckAWSAccessCredentialsByName(var.namespace, var.name)   ####################  ConfirmEmail  ####################  library(tiledbcloud)  api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$ConfirmEmail()   ####################  CreateUser  ####################  library(tiledbcloud) var.user <- User$new() # User | user to create  api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$CreateUser(var.user)   ####################  DeleteAWSAccessCredentials  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace var.name <- 'name_example' # character | name  api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$DeleteAWSAccessCredentials(var.namespace, var.name)   ####################  DeleteUser  ####################  library(tiledbcloud) var.username <- 'username_example' # character | username or id  api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$DeleteUser(var.username)   ####################  DeleteUserFromOrganization  ####################  library(tiledbcloud) var.organization <- 'organization_example' # character | organization name var.username <- 'username_example' # character | username to manipulate  api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$DeleteUserFromOrganization(var.organization, var.username)   ####################  GetOrganizationUser  ####################  library(tiledbcloud) var.organization <- 'organization_example' # character | organization name var.username <- 'username_example' # character | username to manipulate  api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetOrganizationUser(var.organization, var.username)   ####################  GetSession  ####################  library(tiledbcloud) var.remember.me <- 'remember.me_example' # character | flag to create a token with expiration of 30 days, default is false  api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetSession(remember.me=var.remember.me)   ####################  GetTokenScopes  ####################  library(tiledbcloud)  api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetTokenScopes()   ####################  GetUser  ####################  library(tiledbcloud)  api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetUser()   ####################  GetUserWithUsername  ####################  library(tiledbcloud) var.username <- 'username_example' # character | username or id  api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$GetUserWithUsername(var.username)   ####################  RequestToken  ####################  library(tiledbcloud) var.token.request <- TokenRequest$new() # TokenRequest | token request object  api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$RequestToken(token.request=var.token.request)   ####################  ResetUserPassword  ####################  library(tiledbcloud) var.user <- InlineObject$new() # InlineObject |   api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$ResetUserPassword(var.user)   ####################  RevokeToken  ####################  library(tiledbcloud) var.token <- 'token_example' # character | token name or token itself  api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$RevokeToken(var.token)   ####################  TokensGet  ####################  library(tiledbcloud)  api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$TokensGet()   ####################  TokensSessionGet  ####################  library(tiledbcloud)  api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$TokensSessionGet()   ####################  UpdateAWSAccessCredentials  ####################  library(tiledbcloud) var.namespace <- 'namespace_example' # character | namespace var.name <- 'name_example' # character | name var.aws.access.credentials <- AWSAccessCredentials$new() # AWSAccessCredentials | aws credentials to update  api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$UpdateAWSAccessCredentials(var.namespace, var.name, var.aws.access.credentials)   ####################  UpdateUser  ####################  library(tiledbcloud) var.username <- 'username_example' # character | username or id var.user <- User$new() # User | user details to update  api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$UpdateUser(var.username, var.user)   ####################  UpdateUserInOrganization  ####################  library(tiledbcloud) var.organization <- 'organization_example' # character | organization name var.username <- 'username_example' # character | username to manipulate var.user <- OrganizationUser$new() # OrganizationUser | user details to update  api.instance <- UserApi$new()  #Configure API key authorization: ApiKeyAuth api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';  #Configure HTTP basic authorization: BasicAuth # provide your username in the user-serial format api.instance$apiClient$username <- '<user-serial>';  # provide your api key generated using the developer portal api.instance$apiClient$password <- '<api_key>';  result <- api.instance$UpdateUserInOrganization(var.organization, var.username, var.user)   }"},{"path":"/reference/Writer.html","id":null,"dir":"Reference","previous_headings":"","what":"Writer — Writer","title":"Writer — Writer","text":"Writer Class","code":""},{"path":"/reference/Writer.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Writer — Writer","text":"R6Class generator object","code":""},{"path":"/reference/Writer.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Writer — Writer","text":"checkCoordDups character [optional] checkCoordOOB character [optional] dedupCoords character [optional] subarray DomainArray [optional]","code":""},{"path":[]},{"path":"/reference/Writer.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Writer — Writer","text":"Writer$new() Writer$toJSON() Writer$fromJSON() Writer$toJSONString() Writer$fromJSONString() Writer$clone()","code":""},{"path":[]},{"path":"/reference/Writer.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writer — Writer","text":"","code":"Writer$new(   checkCoordDups = NULL,   checkCoordOOB = NULL,   dedupCoords = NULL,   subarray = NULL,   ... )"},{"path":[]},{"path":"/reference/Writer.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Writer — Writer","text":"","code":"Writer$toJSON()"},{"path":[]},{"path":"/reference/Writer.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Writer — Writer","text":"","code":"Writer$fromJSON(WriterJson)"},{"path":[]},{"path":"/reference/Writer.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Writer — Writer","text":"","code":"Writer$toJSONString()"},{"path":[]},{"path":"/reference/Writer.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Writer — Writer","text":"","code":"Writer$fromJSONString(WriterJson)"},{"path":"/reference/Writer.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Writer — Writer","text":"objects class cloneable method.","code":""},{"path":"/reference/Writer.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Writer — Writer","text":"","code":"Writer$clone(deep = FALSE)"},{"path":"/reference/Writer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writer — Writer","text":"deep Whether make deep clone.","code":""},{"path":"/reference/array_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Show information about an array on TileDB Cloud — array_info","title":"Show information about an array on TileDB Cloud — array_info","text":"function shows array information TileDB Cloud.","code":""},{"path":"/reference/array_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show information about an array on TileDB Cloud — array_info","text":"","code":"array_info(namespace, arrayname)"},{"path":"/reference/array_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show information about an array on TileDB Cloud — array_info","text":"namespace Like \"TileDB-Inc\" arrayname Like \"quickstart_dense\"","code":""},{"path":"/reference/array_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show information about an array on TileDB Cloud — array_info","text":"list array properties","code":""},{"path":"/reference/array_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show information about an array on TileDB Cloud — array_info","text":"Nominally first call login; , results last login ~/.tiledb/cloud.json used.","code":""},{"path":[]},{"path":"/reference/compute.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch a task graph from a given terminal node in the task graph — compute","title":"Launch a task graph from a given terminal node in the task graph — compute","text":"task graph implicitly defined various delayed objects others argument lists.","code":""},{"path":"/reference/compute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch a task graph from a given terminal node in the task graph — compute","text":"","code":"compute(   node,   timeout_seconds = NULL,   verbose = FALSE,   namespace = NULL,   force_all_local = FALSE )"},{"path":"/reference/compute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch a task graph from a given terminal node in the task graph — compute","text":"node object whose args set -- nominally, produced delayed, delayed_generic_udf, etc. timeout_seconds Number seconds stop waiting results. Note -flight computationsa cancelled; supported underlying R package use concurrency. verbose supplied, show DAG state start end, along node start/end. Also shown stdout prints individual nodes, visible compute node completed. namespace namespace charge cloud costs execution task graph. can null nodes local, compute called force_all_local. force_all_local individual nodes can marked local=TRUE executed TileDB cloud, flag overrides default local=FALSE ** nodes task graph.","code":""},{"path":"/reference/compute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch a task graph from a given terminal node in the task graph — compute","text":"value computation.","code":""},{"path":[]},{"path":"/reference/compute_sequentially.html","id":null,"dir":"Reference","previous_headings":"","what":"Test/debug entrypoint for local/sequential compute. — compute_sequentially","title":"Test/debug entrypoint for local/sequential compute. — compute_sequentially","text":"Runs nodes correct dependency ordering, within context process, locally. See also Task Graphs vignette.","code":""},{"path":"/reference/compute_sequentially.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test/debug entrypoint for local/sequential compute. — compute_sequentially","text":"","code":"compute_sequentially(node)"},{"path":"/reference/compute_sequentially.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test/debug entrypoint for local/sequential compute. — compute_sequentially","text":"node Nominally, produced delayed, delayed_generic_udf, etc.","code":""},{"path":"/reference/compute_sequentially.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test/debug entrypoint for local/sequential compute. — compute_sequentially","text":"value computation.","code":""},{"path":[]},{"path":"/reference/configure.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure TileDB Cloud — configure","title":"Configure TileDB Cloud — configure","text":"Provide setup configuration TileDB Cloud package.","code":""},{"path":"/reference/configure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure TileDB Cloud — configure","text":"","code":"configure()"},{"path":"/reference/configure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure TileDB Cloud — configure","text":"named vector configuration values returned.","code":""},{"path":"/reference/configure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Configure TileDB Cloud — configure","text":"considers four different environment variables: TILEDB_REST_TOKEN, TILEDB_REST_HOST, TILEDB_REST_USERNAME, TILEDB_REST_PASSWORD. also reads configuration file file .tiledb/cloud.json. operate, either API token provided used, username password combination used log new session.","code":""},{"path":"/reference/delayed.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a function to be executed within a task graph — delayed","title":"Define a function to be executed within a task graph — delayed","text":"Define function executed within task graph","code":""},{"path":"/reference/delayed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a function to be executed within a task graph — delayed","text":"","code":"delayed(func, args = NULL, name = NULL, namespace = NULL, local = FALSE)"},{"path":"/reference/delayed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a function to be executed within a task graph — delayed","text":"name Optional -- e.g. b. omitted, defaults UUID. namespace supplied, namespace use executing particular node. omitted, namespace can applied top-level call compute. omitted well, logged-account's default namespace used. local true, execute functions local host; else, execute UDFs TileDB Cloud.","code":""},{"path":"/reference/delayed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a function to be executed within a task graph — delayed","text":"task-graph node object can later call compute.","code":""},{"path":[]},{"path":"/reference/delayedArrayUDF.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a single-array UDF to be executed within a task graph — delayedArrayUDF","title":"Define a single-array UDF to be executed within a task graph — delayedArrayUDF","text":"Define single-array UDF executed within task graph","code":""},{"path":"/reference/delayedArrayUDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a single-array UDF to be executed within a task graph — delayedArrayUDF","text":"","code":"delayedArrayUDF(namespace, array, udf, selectedRanges, attrs)"},{"path":"/reference/delayedArrayUDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a single-array UDF to be executed within a task graph — delayedArrayUDF","text":"namespace TileDB-Cloud namespace charge query array TileDB URI -- see vignette examples. udf User-defined function, UDF examples. selectedRanges UDF examples. attrs UDF examples.","code":""},{"path":"/reference/delayedArrayUDF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a single-array UDF to be executed within a task graph — delayedArrayUDF","text":"return value UDF R object.","code":""},{"path":[]},{"path":"/reference/delayedSQL.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a SQL query function to be executed within a task graph — delayedSQL","title":"Define a SQL query function to be executed within a task graph — delayedSQL","text":"Define SQL query function executed within task graph","code":""},{"path":"/reference/delayedSQL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a SQL query function to be executed within a task graph — delayedSQL","text":"","code":"delayedSQL(query, name, namespace)"},{"path":"/reference/delayedSQL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a SQL query function to be executed within a task graph — delayedSQL","text":"query SQL query string -- see vignette examples name display name query namespace TileDB-Cloud namespace charge query ","code":""},{"path":"/reference/delayedSQL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a SQL query function to be executed within a task graph — delayedSQL","text":"result query dataframe. Note results strings, numerical results need explicitly cast .","code":""},{"path":[]},{"path":"/reference/delayed_args-set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set arguments for a delayed function. — delayed_args<-","title":"Set arguments for a delayed function. — delayed_args<-","text":"Args can set delayed called, afterward using function.","code":""},{"path":"/reference/delayed_args-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set arguments for a delayed function. — delayed_args<-","text":"","code":"delayed_args(node) <- value"},{"path":"/reference/delayed_args-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set arguments for a delayed function. — delayed_args<-","text":"node object whose args set -- nominally, produced delayed, delayed_generic_udf, etc. value list arguments delayed function, e.g. list(,b,c).","code":""},{"path":[]},{"path":"/reference/delayed_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Get arguments for a delayed function, as a list. — delayed_args","title":"Get arguments for a delayed function, as a list. — delayed_args","text":"Get arguments delayed function, list.","code":""},{"path":"/reference/delayed_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get arguments for a delayed function, as a list. — delayed_args","text":"","code":"delayed_args(node)"},{"path":"/reference/delayed_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get arguments for a delayed function, as a list. — delayed_args","text":"node object whose args set -- nominally, produced delayed, delayed_generic_udf, etc.","code":""},{"path":[]},{"path":"/reference/delayed_array_udf.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a single-array UDF to be executed within a task graph — delayed_array_udf","title":"Define a single-array UDF to be executed within a task graph — delayed_array_udf","text":"Define single-array UDF executed within task graph","code":""},{"path":"/reference/delayed_array_udf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a single-array UDF to be executed within a task graph — delayed_array_udf","text":"","code":"delayed_array_udf(   namespace,   array,   udf = NULL,   registered_udf_name = NULL,   selectedRanges,   attrs,   layout = NULL,   args = NULL,   result_format = \"native\",   name = NULL,   language = \"r\" )"},{"path":"/reference/delayed_array_udf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a single-array UDF to be executed within a task graph — delayed_array_udf","text":"namespace TileDB-Cloud namespace charge query array TileDB URI -- see vignette examples. udf User-defined function, UDF examples. Arguments specified separately via args. One udf registered_udf_name must non-null. registered_udf_name Name registered UDF, form namespace/udfname. Arguments specified separately via args.  One udf registered_udf_name must non-null. selectedRanges UDF examples. attrs UDF examples. layout UDF examples. result_format UDF examples. name display name query language omitted, defaults \"r\". Can set \"python\"","code":""},{"path":"/reference/delayed_array_udf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a single-array UDF to be executed within a task graph — delayed_array_udf","text":"return value UDF R object.","code":""},{"path":[]},{"path":"/reference/delayed_generic_udf.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a generic UDF to be executed within a task graph — delayed_generic_udf","title":"Define a generic UDF to be executed within a task graph — delayed_generic_udf","text":"Define generic UDF executed within task graph","code":""},{"path":"/reference/delayed_generic_udf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a generic UDF to be executed within a task graph — delayed_generic_udf","text":"","code":"delayed_generic_udf(   udf = NULL,   registered_udf_name = NULL,   args = NULL,   name = NULL,   namespace = NULL,   language = \"r\" )"},{"path":"/reference/delayed_generic_udf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a generic UDF to be executed within a task graph — delayed_generic_udf","text":"udf R function. Arguments specified separately via args. One udf registered_udf_name must non-null. registered_udf_name Name registered UDF, form namespace/udfname. Arguments specified separately via args.  One udf registered_udf_name must non-null. name Optional -- e.g. b. omitted, defaults UUID. namespace supplied, namespace use executing particular node. omitted, namespace can applied top-level call compute. omitted well, logged-account's default namespace used. language omitted, defaults \"r\". Can set \"python\"","code":""},{"path":"/reference/delayed_generic_udf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a generic UDF to be executed within a task graph — delayed_generic_udf","text":"return value UDF R object.","code":""},{"path":[]},{"path":"/reference/delayed_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a SQL query function to be executed within a task graph — delayed_sql","title":"Define a SQL query function to be executed within a task graph — delayed_sql","text":"Define SQL query function executed within task graph","code":""},{"path":"/reference/delayed_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a SQL query function to be executed within a task graph — delayed_sql","text":"","code":"delayed_sql(query, name, namespace)"},{"path":"/reference/delayed_sql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a SQL query function to be executed within a task graph — delayed_sql","text":"query SQL query string -- see vignette examples name display name query namespace supplied, TileDB-Cloud namespace charge query . omitted, namespace can applied top-level call compute. omitted well, logged-account's default namespace used.","code":""},{"path":"/reference/delayed_sql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a SQL query function to be executed within a task graph — delayed_sql","text":"task-graph node object can later call compute.  return value compute() query result dataframe.  Note results strings, numerical results need explicitly cast .","code":""},{"path":[]},{"path":"/reference/deregister_udf.html","id":null,"dir":"Reference","previous_headings":"","what":"Deregister a UDF from TileDB Cloud — deregister_udf","title":"Deregister a UDF from TileDB Cloud — deregister_udf","text":"Deletes registered UDF. removes sharing undone.","code":""},{"path":"/reference/deregister_udf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deregister a UDF from TileDB Cloud — deregister_udf","text":"","code":"deregister_udf(name, namespace)"},{"path":"/reference/deregister_udf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deregister a UDF from TileDB Cloud — deregister_udf","text":"name Name UDF TileDB Cloud, e.g. myudfname. namespace Namespace UDF TileDB Cloud, e.g. mynamespace.","code":""},{"path":"/reference/deregister_udf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deregister a UDF from TileDB Cloud — deregister_udf","text":"return value.","code":""},{"path":[]},{"path":"/reference/dot-get_decoded_response_body_or_stop.html","id":null,"dir":"Reference","previous_headings":"","what":"Package-internal HTTP-response helper — .get_decoded_response_body_or_stop","title":"Package-internal HTTP-response helper — .get_decoded_response_body_or_stop","text":"package-internal function code-deduplication within various manual-layer functions.","code":""},{"path":"/reference/dot-get_decoded_response_body_or_stop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Package-internal HTTP-response helper — .get_decoded_response_body_or_stop","text":"","code":".get_decoded_response_body_or_stop(   resultObject,   result_format,   entire_json_is_result = FALSE )"},{"path":"/reference/dot-get_decoded_response_body_or_stop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Package-internal HTTP-response helper — .get_decoded_response_body_or_stop","text":"resultObject return value API function uses .wrap_as_api_response internally. functions manually edited OpenAPI autogen. entire_json_is_result false, return \"value\" field JSON object. right thing returns REST server almost cases. true case getting results invoking registered Python UDFs R, case JSON result entirety UDF output.","code":""},{"path":"/reference/dot-get_decoded_response_body_or_stop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Package-internal HTTP-response helper — .get_decoded_response_body_or_stop","text":"argument, decoded according specified result format.","code":""},{"path":"/reference/dot-get_decoded_response_body_or_stop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Package-internal HTTP-response helper — .get_decoded_response_body_or_stop","text":"wraps .get_raw_response_body_or_stop decoding raw response body using three result-format types support UDFs. keystroke-saving wrapper around .get_raw_response_body_or_stop.","code":""},{"path":"/reference/dot-get_empty_response_body_or_stop.html","id":null,"dir":"Reference","previous_headings":"","what":"Package-internal HTTP-response helper — .get_empty_response_body_or_stop","title":"Package-internal HTTP-response helper — .get_empty_response_body_or_stop","text":"package-internal function code-deduplication within various manual-layer functions.","code":""},{"path":"/reference/dot-get_empty_response_body_or_stop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Package-internal HTTP-response helper — .get_empty_response_body_or_stop","text":"","code":".get_empty_response_body_or_stop(resultObject)"},{"path":"/reference/dot-get_empty_response_body_or_stop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Package-internal HTTP-response helper — .get_empty_response_body_or_stop","text":"resultObject return value API function uses .wrap_as_api_response internally. functions manually edited OpenAPI autogen.","code":""},{"path":"/reference/dot-get_empty_response_body_or_stop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Package-internal HTTP-response helper — .get_empty_response_body_or_stop","text":"Invisible success, stop() failure.","code":""},{"path":"/reference/dot-get_empty_response_body_or_stop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Package-internal HTTP-response helper — .get_empty_response_body_or_stop","text":"wraps .get_raw_response_body_or_stop, stop API-response error, response empty string. API functions expected response empty string.","code":""},{"path":"/reference/dot-get_raw_response_body_or_stop.html","id":null,"dir":"Reference","previous_headings":"","what":"Package-internal HTTP-response helper — .get_raw_response_body_or_stop","title":"Package-internal HTTP-response helper — .get_raw_response_body_or_stop","text":"package-internal function code-deduplication within various manual-layer functions.","code":""},{"path":"/reference/dot-get_raw_response_body_or_stop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Package-internal HTTP-response helper — .get_raw_response_body_or_stop","text":"","code":".get_raw_response_body_or_stop(resultObject)"},{"path":"/reference/dot-get_raw_response_body_or_stop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Package-internal HTTP-response helper — .get_raw_response_body_or_stop","text":"resultObject return value API function uses .wrap_as_api_response internally. functions manually edited OpenAPI autogen.","code":""},{"path":"/reference/dot-get_raw_response_body_or_stop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Package-internal HTTP-response helper — .get_raw_response_body_or_stop","text":"argument, long type raw. Else, stops.  caller can decode raw body.","code":""},{"path":"/reference/dot-get_raw_response_body_or_stop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Package-internal HTTP-response helper — .get_raw_response_body_or_stop","text":"API-level functions use .wrap_as_api_response, manual-layer functions receive either () raw HTTP body, status_code 2xx, (b) ApiResponse object.  Using function, callsites can get HTTP body (available), else informative stop().","code":""},{"path":"/reference/dot-wrap_as_api_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Package-internal HTTP-response helper — .wrap_as_api_response","title":"Package-internal HTTP-response helper — .wrap_as_api_response","text":"Used overriding OpenAPI-autogenerated HTTP-response handling.","code":""},{"path":"/reference/dot-wrap_as_api_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Package-internal HTTP-response helper — .wrap_as_api_response","text":"","code":".wrap_as_api_response(resp)"},{"path":"/reference/dot-wrap_as_api_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Package-internal HTTP-response helper — .wrap_as_api_response","text":"resp response S3 object e.g. httr:GET.","code":""},{"path":"/reference/dot-wrap_as_api_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Package-internal HTTP-response helper — .wrap_as_api_response","text":"object type ApiResponse. success case (HTTP 2xx) content slot raw HTTP body. failure case (otherwise) content slot error-text server.","code":""},{"path":"/reference/dot-wrap_as_api_response.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Package-internal HTTP-response helper — .wrap_as_api_response","text":"Makes handling compatible TileDB REST-server response format; surfaces error messages back user. intended exported package; package-internal use .","code":""},{"path":"/reference/execute_array_udf.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute a single-array UDF on TileDB Cloud — execute_array_udf","title":"Execute a single-array UDF on TileDB Cloud — execute_array_udf","text":"invokes user-defined function TileDB Cloud.","code":""},{"path":"/reference/execute_array_udf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute a single-array UDF on TileDB Cloud — execute_array_udf","text":"","code":"execute_array_udf(   array,   udf = NULL,   registered_udf_name = NULL,   selectedRanges,   attrs = NULL,   layout = NULL,   args = NULL,   result_format = \"native\",   args_format = \"native\",   namespace = NULL,   language = \"r\" )"},{"path":"/reference/execute_array_udf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute a single-array UDF on TileDB Cloud — execute_array_udf","text":"array Name array, form either tiledb://hello/world hello/world. udf R function takes dataframe argument. Arguments specified separately via args. One udf registered_udf_name must non-null. registered_udf_name Name registered UDF, form namespace/udfname. Arguments specified separately via args.  One udf registered_udf_name must non-null. selectedRanges List two-column matrices, one matrix per dimension, matrix start-end pair: e.g. list(cbind(1,10),cbind(1,20)). attrs Optional list attributes (default: ) server-side code select UDF execution. Specifying UDF needs useful memory-usage control. layout One row-major, col-major, global-order, unordered, args Arguments function. function takes arguments, can omitted. want call position, use list like args=list(123, 456). want call name, use named list like args=list(x=123,y=456). result_format One native, json, arrow. used wire format returning results server library, primarily memory-usage control.  UDF return values handed back code library converted back natural R objects. args_format One native, json, arrow. used wire format sending arguments server. Normally need specify . invoking R UDF, native used; invoking registered Python UDF, json used can select arrow wish. namespace Namespace within TileDB cloud charge. null, logged-user's username used namespace. language omitted, defaults \"r\". Can set \"python\"","code":""},{"path":"/reference/execute_array_udf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute a single-array UDF on TileDB Cloud — execute_array_udf","text":"Return value UDF.","code":""},{"path":"/reference/execute_array_udf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Execute a single-array UDF on TileDB Cloud — execute_array_udf","text":"Nominally first call login; , results last login ~/.tiledb/cloud.json used. arguments required.","code":""},{"path":[]},{"path":"/reference/execute_generic_udf.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute a generic UDF on TileDB Cloud — execute_generic_udf","title":"Execute a generic UDF on TileDB Cloud — execute_generic_udf","text":"invokes user-defined function TileDB Cloud.","code":""},{"path":"/reference/execute_generic_udf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute a generic UDF on TileDB Cloud — execute_generic_udf","text":"","code":"execute_generic_udf(   udf = NULL,   registered_udf_name = NULL,   args = NULL,   result_format = \"native\",   args_format = \"native\",   namespace,   language = \"r\" )"},{"path":"/reference/execute_generic_udf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute a generic UDF on TileDB Cloud — execute_generic_udf","text":"udf R function. Arguments specified separately via args. One udf registered_udf_name must non-null. registered_udf_name Name registered UDF, form namespace/udfname. Arguments specified separately via args.  One udf registered_udf_name must non-null. args Arguments function. function takes arguments, can omitted. want call position, use list like args=list(123, 456). want call name, use named list like args=list(x=123,y=456). result_format One native, json, arrow. used wire format returning results server library, primarily memory-usage control.  UDF return values handed back code library converted back natural R objects. args_format One native, json, arrow. used wire format sending arguments server. Normally need specify . invoking R UDF, native used; invoking registered Python UDF, json used can select arrow wish. namespace Namespace within TileDB cloud. language omitted, defaults \"r\". Can set \"python\"","code":""},{"path":"/reference/execute_generic_udf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute a generic UDF on TileDB Cloud — execute_generic_udf","text":"R object return value UDF.","code":""},{"path":"/reference/execute_generic_udf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Execute a generic UDF on TileDB Cloud — execute_generic_udf","text":"Nominally first call login; , results last login ~/.tiledb/cloud.json used. udf namespace arguments required; args argument optional.","code":""},{"path":[]},{"path":"/reference/execute_multi_array_udf.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute a multi-array UDF on TileDB Cloud — execute_multi_array_udf","title":"Execute a multi-array UDF on TileDB Cloud — execute_multi_array_udf","text":"invokes user-defined function TileDB Cloud.","code":""},{"path":"/reference/execute_multi_array_udf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute a multi-array UDF on TileDB Cloud — execute_multi_array_udf","text":"","code":"execute_multi_array_udf(   array_list,   udf = NULL,   registered_udf_name = NULL,   args = NULL,   result_format = \"native\",   args_format = \"native\",   namespace,   language = \"r\" )"},{"path":"/reference/execute_multi_array_udf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute a multi-array UDF on TileDB Cloud — execute_multi_array_udf","text":"array_list List UDFArrayDetails objects. Example list element: tiledbcloud::UDFArrayDetails$new(uri=\"tiledb://demo/quickstart_dense\", ranges=QueryRanges$new(layout=Layout$new('row-major'), ranges=list(cbind(1,4),cbind(1,4))), buffers=list(\"\")) udf R function takes dataframes arguments, one dataframe argument element array_list. Arguments specified separately via args. One udf registered_udf_name must non-null. registered_udf_name Name registered UDF, form namespace/udfname. Arguments specified separately via args.  One udf registered_udf_name must non-null. args Arguments function. function takes arguments, can omitted. want call position, use list like args=list(123, 456). want call name, use named list like args=list(x=123,y=456). result_format One native, json, arrow. used wire format returning results server library, primarily memory-usage control.  UDF return values handed back code library converted back natural R objects. args_format One native, json, arrow. used wire format sending arguments server. Normally need specify . invoking R UDF, native used; invoking registered Python UDF, json used can select arrow wish. namespace Namespace within TileDB cloud. language omitted, defaults \"r\". Can set \"python\"","code":""},{"path":"/reference/execute_multi_array_udf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute a multi-array UDF on TileDB Cloud — execute_multi_array_udf","text":"Return value UDF.","code":""},{"path":"/reference/execute_multi_array_udf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Execute a multi-array UDF on TileDB Cloud — execute_multi_array_udf","text":"Nominally first call login; , results last login ~/.tiledb/cloud.json used. arguments required.","code":""},{"path":[]},{"path":"/reference/execute_sql_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute a SQL query on TileDB Cloud — execute_sql_query","title":"Execute a SQL query on TileDB Cloud — execute_sql_query","text":"invokes user-defined function TileDB Cloud.","code":""},{"path":"/reference/execute_sql_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute a SQL query on TileDB Cloud — execute_sql_query","text":"","code":"execute_sql_query(query, name, namespace)"},{"path":"/reference/execute_sql_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute a SQL query on TileDB Cloud — execute_sql_query","text":"query SQL query string. name descriptive name give query. namespace Namespace within TileDB cloud.","code":""},{"path":"/reference/execute_sql_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute a SQL query on TileDB Cloud — execute_sql_query","text":"result SQL query.","code":""},{"path":"/reference/execute_sql_query.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Execute a SQL query on TileDB Cloud — execute_sql_query","text":"Nominally first call login; , results last login ~/.tiledb/cloud.json used. udf namespace arguments required; args argument optional.","code":""},{"path":[]},{"path":"/reference/get_api_client_instance.html","id":null,"dir":"Reference","previous_headings":"","what":"Access cached API-client object — get_api_client_instance","title":"Access cached API-client object — get_api_client_instance","text":"package-internal function.","code":""},{"path":"/reference/get_api_client_instance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access cached API-client object — get_api_client_instance","text":"","code":"get_api_client_instance()"},{"path":"/reference/get_api_client_instance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access cached API-client object — get_api_client_instance","text":"cached ApiClient object, stops.","code":""},{"path":"/reference/get_api_client_instance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Access cached API-client object — get_api_client_instance","text":"returns cached ApiClient object, stops. ApiClient instance constructor input UserApi, ArrayApi, etc.  generated OpenAPI. Note OpenAPI autogen code, ApiClient instance used constructor input UserApi, ArrayApi, UdfAPI, etc.","code":""},{"path":"/reference/get_udf_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information about a UDF on TileDB Cloud — get_udf_info","title":"Get information about a UDF on TileDB Cloud — get_udf_info","text":"Reads back information specified user-defined function TileDB Cloud. Note version, image_name, exec, exec_raw writable via register_udf read back function.","code":""},{"path":"/reference/get_udf_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information about a UDF on TileDB Cloud — get_udf_info","text":"","code":"get_udf_info(name, namespace)"},{"path":"/reference/get_udf_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information about a UDF on TileDB Cloud — get_udf_info","text":"name Name UDF TileDB Cloud, e.g. myudfname. namespace Namespace UDF TileDB Cloud, e.g. mynamespace.","code":""},{"path":"/reference/get_udf_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information about a UDF on TileDB Cloud — get_udf_info","text":"List key-value pairs UDF information.","code":""},{"path":[]},{"path":"/reference/list_arrays.html","id":null,"dir":"Reference","previous_headings":"","what":"Show listing of arrays — list_arrays","title":"Show listing of arrays — list_arrays","text":"Returns dataframe metadata arrays meet filter applied.","code":""},{"path":"/reference/list_arrays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show listing of arrays — list_arrays","text":"","code":"list_arrays(   public = FALSE,   shared = FALSE,   page = NULL,   per.page = NULL,   search = NULL,   namespace = NULL,   orderby = NULL,   permissions = NULL,   tag = NULL,   exclude.tag = NULL,   file.type = NULL,   exclude.file.type = NULL,   file.property = NULL,   ... )"},{"path":"/reference/list_arrays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show listing of arrays — list_arrays","text":"public logical TRUE means list public arrays shared logical TRUE means list shared arrays. public shared false arrays owned listed. page integer per.page integer search character namespace character orderby character permissions character tag list( character ) exclude.tag list( character ) file.type list( character ) exclude.file.type list( character ) file.property list( character )","code":""},{"path":"/reference/list_arrays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show listing of arrays — list_arrays","text":"Dataframe metadata arrays account meet filter applied.","code":""},{"path":"/reference/list_arrays.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show listing of arrays — list_arrays","text":"Note paginable API default params return results one call, even hundreds . currently implemented, pagination information returned function. public shared arguments may true.","code":""},{"path":[]},{"path":"/reference/login.html","id":null,"dir":"Reference","previous_headings":"","what":"Log in to TileDB Cloud — login","title":"Log in to TileDB Cloud — login","text":"function can used override default setup made package load.","code":""},{"path":"/reference/login.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log in to TileDB Cloud — login","text":"","code":"login(   username,   password,   api_key,   host,   remember_me = TRUE,   write_config = FALSE )"},{"path":"/reference/login.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log in to TileDB Cloud — login","text":"username character value username, present password also needed. password character value password, present username also needed. api_key character value access token, can used instead username password. host character value remote host connect . remember_me boolean select session 24 hours instead 8 hours, used new session requested. write_config boolean write login information ~/.tiledb/cloud.json can read subsequent sessions. done requested parameter, FALSE default.","code":""},{"path":"/reference/login.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log in to TileDB Cloud — login","text":"Nothing returned; function called side effect storing values package environment.","code":""},{"path":"/reference/login.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log in to TileDB Cloud — login","text":"can operate two modes. Either username password supplied environment variable TILEDB_REST_USERNAME TILEDB_REST_PASSWORD.  alternative, access token can supplied via TILEDB_REST_TOKEN.  values used instantiate new API client object. token supplied, new session requested token assigned session used. Function arguments optional, can used override default configuration values obtained configure either environment variables configuration file.","code":""},{"path":[]},{"path":"/reference/register_udf.html","id":null,"dir":"Reference","previous_headings":"","what":"Register a UDF on TileDB Cloud — register_udf","title":"Register a UDF on TileDB Cloud — register_udf","text":"Registers user-defined function TileDB Cloud, may invoked name later.","code":""},{"path":"/reference/register_udf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register a UDF on TileDB Cloud — register_udf","text":"","code":"register_udf(   namespace = NULL,   name,   type,   func,   func_text = NULL,   version = NULL,   image_name = NULL,   readme = NULL,   license_id = NULL,   license_text = NULL,   tags = NULL )"},{"path":"/reference/register_udf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register a UDF on TileDB Cloud — register_udf","text":"namespace Namespace UDF stored , e.g. mynamespace. omitted, defaults username. name character Name function stored TileDB Cloud, e.g. myudfname. type character One generic, single_array, multi_array. func R function takes dataframe first argument. version character Optional version string. image_name character readme README text displayed TileDB Cloud UI. license_id character See TileDB Cloud UI options. license_text character See TileDB Cloud UI options. tags list(character) Tags apply UDF. exec_raw character Text display TileDB Cloud UI's Preview tab. omitted, full deparse func used. can set something shorter brevity like.","code":""},{"path":"/reference/register_udf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register a UDF on TileDB Cloud — register_udf","text":"return value.","code":""},{"path":[]},{"path":"/reference/show-Node-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show-generic for task-graph nodes — show,Node-method","title":"Show-generic for task-graph nodes — show,Node-method","text":"Show-generic task-graph nodes","code":""},{"path":"/reference/show-Node-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show-generic for task-graph nodes — show,Node-method","text":"","code":"# S4 method for Node show(object)"},{"path":[]},{"path":"/reference/update_udf_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a UDF on TileDB Cloud — update_udf_info","title":"Update a UDF on TileDB Cloud — update_udf_info","text":"Updates information specified user-defined function TileDB Cloud. Please provide parameters set, ones need changing.","code":""},{"path":"/reference/update_udf_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a UDF on TileDB Cloud — update_udf_info","text":"","code":"update_udf_info(   namespace,   name,   type,   func = NULL,   func_text = NULL,   version = NULL,   image_name = NULL,   readme = NULL,   license_id = NULL,   license_text = NULL,   tags = NULL )"},{"path":"/reference/update_udf_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a UDF on TileDB Cloud — update_udf_info","text":"namespace Namespace UDF stored , e.g. mynamespace. omitted, defaults username. name character Name function stored TileDB Cloud, e.g. myudfname. type character One generic, single_array, multi_array. func R function takes dataframe first argument. version character Optional version string. image_name character readme README text displayed TileDB Cloud UI. license_id character See TileDB Cloud UI options. license_text character See TileDB Cloud UI options. tags list(character) Tags apply UDF. exec_raw character Text display TileDB Cloud UI's Preview tab. omitted, full deparse func used. can set something shorter brevity like.","code":""},{"path":"/reference/update_udf_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a UDF on TileDB Cloud — update_udf_info","text":"return value.","code":""},{"path":[]},{"path":"/reference/user_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Show information from user TileDB Cloud user profile — user_profile","title":"Show information from user TileDB Cloud user profile — user_profile","text":"function shows user information  currently logged-account TileDB Cloud.","code":""},{"path":"/reference/user_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show information from user TileDB Cloud user profile — user_profile","text":"","code":"user_profile(include_logo = FALSE)"},{"path":"/reference/user_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show information from user TileDB Cloud user profile — user_profile","text":"include_logo set True, include logo field return value. default omitted since long base64-encoded string takes lot screen space likely uninteresting.","code":""},{"path":"/reference/user_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show information from user TileDB Cloud user profile — user_profile","text":"list user properties currently logged-TileDB cloud account.","code":""},{"path":"/reference/user_profile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show information from user TileDB Cloud user profile — user_profile","text":"Nominally first call login; , results last login ~/.tiledb/cloud.json used.","code":""},{"path":[]}]
