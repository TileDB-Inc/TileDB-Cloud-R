% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/manual_layer_execute.R
\name{execute_array_udf}
\alias{execute_array_udf}
\title{TileDB Cloud UDF-Execution Helper for Single-Array UDFs}
\usage{
execute_array_udf(
  namespace,
  array,
  udf,
  selectedRanges,
  attrs = NULL,
  layout = NULL,
  args = NULL,
  result_format = "native"
)
}
\arguments{
\item{namespace}{Namespace within TileDB cloud.}

\item{array}{Name of the array. E.g. if the URI is \code{tiledb://hello/world}
then the namespace is "hello" and the array is "world".}

\item{udf}{An R function which takes a dataframe as argument.}

\item{selectedRanges}{List of two-column matrices, one matrix per dimension,
each matrix being a start-end pair: e.g. \code{list(cbind(1,10),cbind(1,20))}.}

\item{attrs}{}

\item{layout}{One of \code{row-major}, \code{col-major}, \code{global-order}, or
\code{unordered},}

\item{args}{Arguments to the function. If the function takes
no arguments, this can be omitted. If you want to call by
position, use a list like \code{args=list(123, 456)}. If you want
to call by name, use a named list like \code{args=list(x=123,y=456)}.}

\item{result_format}{One of \code{native}, \code{json}, or \code{arrow}. These are
used as wire format for returning results from the server to this library, primarily
for memory-usage control.  UDF return values handed back to your code from this
library are converted back to natural R objects.}
}
\value{
Return value from the UDF.
}
\description{
This function invokes a user-defined function in TileDB Cloud.
Nominally you will first call login(); if not, the results
of the last login at ~/.tiledb/cloud.json will be used.
}
\details{
All arguments are required.
}
