% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/files_api.R
\docType{class}
\name{FilesApi}
\alias{FilesApi}
\title{Files operations}
\format{
An \code{R6Class} generator object
}
\description{
tiledbcloud.Files
}
\section{Methods}{

\describe{
\strong{ HandleCreateFile } \emph{  }
Create a tiledb file at the specified location

\itemize{
\item \emph{ @param } namespace character
\item \emph{ @param } file.create \link{FileCreate}
\item \emph{ @param } X_TILEDB_CLOUD_ACCESS_CREDENTIALS_NAME character
\item \emph{ @returnType } \link{FileCreated} \cr


\item status code : 201 | File created

\item return type : FileCreated 
\item response headers :

\tabular{ll}{
}
\item status code : 0 | error response

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ HandleExportFile } \emph{  }
Export a TileDB File back to its original file format

\itemize{
\item \emph{ @param } namespace character
\item \emph{ @param } file character
\item \emph{ @param } file.export \link{FileExport}
\item \emph{ @returnType } \link{FileExported} \cr


\item status code : 201 | File exported

\item return type : FileExported 
\item response headers :

\tabular{ll}{
}
\item status code : 0 | error response

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  HandleCreateFile  ####################

library(tiledbcloud)
var.namespace <- 'namespace_example' # character | The namespace of the file
var.file.create <- FileCreate$new() # FileCreate | Input/Output information to create a new TileDB file
var.X_TILEDB_CLOUD_ACCESS_CREDENTIALS_NAME <- 'X_TILEDB_CLOUD_ACCESS_CREDENTIALS_NAME_example' # character | Optional registered access credentials to use for creation

api.instance <- FilesApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';

#Configure HTTP basic authorization: BasicAuth
# provide your username in the user-serial format
api.instance$apiClient$username <- '<user-serial>'; 
# provide your api key generated using the developer portal
api.instance$apiClient$password <- '<api_key>';

result <- api.instance$HandleCreateFile(var.namespace, var.file.create, X_TILEDB_CLOUD_ACCESS_CREDENTIALS_NAME=var.X_TILEDB_CLOUD_ACCESS_CREDENTIALS_NAME)


####################  HandleExportFile  ####################

library(tiledbcloud)
var.namespace <- 'namespace_example' # character | The namespace of the file
var.file <- 'file_example' # character | The file identifier
var.file.export <- FileExport$new() # FileExport | Export configuration information

api.instance <- FilesApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';

#Configure HTTP basic authorization: BasicAuth
# provide your username in the user-serial format
api.instance$apiClient$username <- '<user-serial>'; 
# provide your api key generated using the developer portal
api.instance$apiClient$password <- '<api_key>';

result <- api.instance$HandleExportFile(var.namespace, var.file, var.file.export)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{apiClient}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-FilesApi-new}{\code{FilesApi$new()}}
\item \href{#method-FilesApi-HandleCreateFile}{\code{FilesApi$HandleCreateFile()}}
\item \href{#method-FilesApi-HandleCreateFileWithHttpInfo}{\code{FilesApi$HandleCreateFileWithHttpInfo()}}
\item \href{#method-FilesApi-HandleExportFile}{\code{FilesApi$HandleExportFile()}}
\item \href{#method-FilesApi-HandleExportFileWithHttpInfo}{\code{FilesApi$HandleExportFileWithHttpInfo()}}
\item \href{#method-FilesApi-clone}{\code{FilesApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FilesApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-FilesApi-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilesApi$new(apiClient)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FilesApi-HandleCreateFile"></a>}}
\if{latex}{\out{\hypertarget{method-FilesApi-HandleCreateFile}{}}}
\subsection{Method \code{HandleCreateFile()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilesApi$HandleCreateFile(
  namespace,
  file.create,
  X_TILEDB_CLOUD_ACCESS_CREDENTIALS_NAME = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FilesApi-HandleCreateFileWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FilesApi-HandleCreateFileWithHttpInfo}{}}}
\subsection{Method \code{HandleCreateFileWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilesApi$HandleCreateFileWithHttpInfo(
  namespace,
  file.create,
  X_TILEDB_CLOUD_ACCESS_CREDENTIALS_NAME = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FilesApi-HandleExportFile"></a>}}
\if{latex}{\out{\hypertarget{method-FilesApi-HandleExportFile}{}}}
\subsection{Method \code{HandleExportFile()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilesApi$HandleExportFile(namespace, file, file.export, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FilesApi-HandleExportFileWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FilesApi-HandleExportFileWithHttpInfo}{}}}
\subsection{Method \code{HandleExportFileWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilesApi$HandleExportFileWithHttpInfo(namespace, file, file.export, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FilesApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-FilesApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilesApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
